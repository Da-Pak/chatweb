{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SentenceContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  align-items: flex-start;\\n  gap: \",\";\\n  margin: 4px 0;\\n\"])),props=>props.$hasSelector?'8px':'0');const SelectButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 16px;\\n  height: 16px;\\n  border-radius: 50%;\\n  border: 2px solid #ccc;\\n  background: \",\";\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  flex-shrink: 0;\\n  margin-top: 2px;\\n  \\n  &:hover {\\n    border-color: #666;\\n  }\\n  \\n  &:before {\\n    content: '';\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    border-radius: 50%;\\n  }\\n\"])),props=>props.$isSelected?'#333':'white');const SentenceText=styled.span(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  padding: \",\";\\n  border-radius: 4px;\\n  transition: background-color 0.2s ease;\\n  line-height: 1.6;\\n\"])),props=>props.$isHighlighted?'#ffff00':'transparent',props=>props.$isHighlighted?'2px 4px':'0');const MemoBox=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  left: calc(100% + 20px);\\n  top: 0;\\n  width: 180px;\\n  background: white;\\n  border: 2px solid #ddd;\\n  border-radius: 8px;\\n  padding: 8px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  z-index: 100;\\n  \\n  /* \\uD654\\uBA74 \\uC624\\uB978\\uCABD\\uC744 \\uBC97\\uC5B4\\uB098\\uC9C0 \\uC54A\\uB3C4\\uB85D \\uC870\\uC815 */\\n  @media (max-width: 768px) {\\n    left: auto;\\n    right: -10px;\\n    width: 150px;\\n  }\\n\"])));const MemoTextarea=styled.textarea(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  border: none;\\n  outline: none;\\n  resize: none;\\n  font-size: 12px;\\n  line-height: 1.4;\\n  padding: 4px;\\n\"])));const DeleteMemoButton=styled.button(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 4px;\\n  right: 4px;\\n  width: 20px;\\n  height: 20px;\\n  border: none;\\n  background: none;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #999;\\n  \\n  &:hover {\\n    color: #f00;\\n  }\\n\"])));const SelectableSentence=_ref=>{let{sentence,sentenceId,isSelected,isHighlighted,hasMemo,memo='',showSelector=true,onToggleSelect,onMemoChange,onDeleteMemo}=_ref;const handleMemoChange=event=>{if(onMemoChange){onMemoChange(sentenceId,event.target.value);}};const handleDeleteMemo=()=>{if(onDeleteMemo){onDeleteMemo(sentenceId);}};return/*#__PURE__*/_jsxs(SentenceContainer,{$hasSelector:showSelector,children:[showSelector&&/*#__PURE__*/_jsx(SelectButton,{$isSelected:isSelected,onClick:()=>onToggleSelect(sentenceId)}),/*#__PURE__*/_jsx(SentenceText,{$isHighlighted:isHighlighted,children:sentence}),hasMemo&&/*#__PURE__*/_jsxs(MemoBox,{children:[/*#__PURE__*/_jsx(DeleteMemoButton,{onClick:handleDeleteMemo,children:\"\\uD83D\\uDDD1\"}),/*#__PURE__*/_jsx(MemoTextarea,{value:memo||'',onChange:handleMemoChange,placeholder:\"\\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",autoFocus:true})]})]});};export default SelectableSentence;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","SentenceContainer","div","_templateObject","_taggedTemplateLiteral","props","$hasSelector","SelectButton","button","_templateObject2","$isSelected","SentenceText","span","_templateObject3","$isHighlighted","MemoBox","_templateObject4","MemoTextarea","textarea","_templateObject5","DeleteMemoButton","_templateObject6","SelectableSentence","_ref","sentence","sentenceId","isSelected","isHighlighted","hasMemo","memo","showSelector","onToggleSelect","onMemoChange","onDeleteMemo","handleMemoChange","event","target","value","handleDeleteMemo","children","onClick","onChange","placeholder","autoFocus"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/training/components/SelectableSentence.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface SelectableSentenceProps {\n  sentence: string;\n  sentenceId: string;\n  isSelected: boolean;\n  isHighlighted: boolean;\n  hasMemo: boolean;\n  memo?: string;\n  showSelector?: boolean;\n  onToggleSelect: (sentenceId: string) => void;\n  onMemoChange?: (sentenceId: string, memo: string) => void;\n  onDeleteMemo?: (sentenceId: string) => void;\n}\n\nconst SentenceContainer = styled.div<{ $hasSelector: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  gap: ${props => props.$hasSelector ? '8px' : '0'};\n  margin: 4px 0;\n`;\n\nconst SelectButton = styled.button<{ $isSelected: boolean }>`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  border: 2px solid #ccc;\n  background: ${props => props.$isSelected ? '#333' : 'white'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n  margin-top: 2px;\n  \n  &:hover {\n    border-color: #666;\n  }\n  \n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\n\nconst SentenceText = styled.span<{ $isHighlighted: boolean }>`\n  background: ${props => props.$isHighlighted ? '#ffff00' : 'transparent'};\n  padding: ${props => props.$isHighlighted ? '2px 4px' : '0'};\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n  line-height: 1.6;\n`;\n\nconst MemoBox = styled.div`\n  position: absolute;\n  left: calc(100% + 20px);\n  top: 0;\n  width: 180px;\n  background: white;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  padding: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  \n  /* ÌôîÎ©¥ Ïò§Î•∏Ï™ΩÏùÑ Î≤óÏñ¥ÎÇòÏßÄ ÏïäÎèÑÎ°ù Ï°∞Ï†ï */\n  @media (max-width: 768px) {\n    left: auto;\n    right: -10px;\n    width: 150px;\n  }\n`;\n\nconst MemoTextarea = styled.textarea`\n  width: 100%;\n  height: 60px;\n  border: none;\n  outline: none;\n  resize: none;\n  font-size: 12px;\n  line-height: 1.4;\n  padding: 4px;\n`;\n\nconst DeleteMemoButton = styled.button`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  width: 20px;\n  height: 20px;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  color: #999;\n  \n  &:hover {\n    color: #f00;\n  }\n`;\n\nconst SelectableSentence: React.FC<SelectableSentenceProps> = ({\n  sentence,\n  sentenceId,\n  isSelected,\n  isHighlighted,\n  hasMemo,\n  memo = '',\n  showSelector = true,\n  onToggleSelect,\n  onMemoChange,\n  onDeleteMemo\n}) => {\n  const handleMemoChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (onMemoChange) {\n      onMemoChange(sentenceId, event.target.value);\n    }\n  };\n\n  const handleDeleteMemo = () => {\n    if (onDeleteMemo) {\n      onDeleteMemo(sentenceId);\n    }\n  };\n\n  return (\n    <SentenceContainer $hasSelector={showSelector}>\n      {showSelector && (\n        <SelectButton \n          $isSelected={isSelected}\n          onClick={() => onToggleSelect(sentenceId)}\n        />\n      )}\n      <SentenceText $isHighlighted={isHighlighted}>\n        {sentence}\n      </SentenceText>\n      {hasMemo && (\n        <MemoBox>\n          <DeleteMemoButton onClick={handleDeleteMemo}>\n            üóë\n          </DeleteMemoButton>\n          <MemoTextarea\n            value={memo || ''}\n            onChange={handleMemoChange}\n            placeholder=\"Î©îÎ™®Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...\"\n            autoFocus\n          />\n        </MemoBox>\n      )}\n    </SentenceContainer>\n  );\n};\n\nexport default SelectableSentence; "],"mappings":"wPAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAevC,KAAM,CAAAC,iBAAiB,CAAGL,MAAM,CAACM,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,8GAI3BC,KAAK,EAAIA,KAAK,CAACC,YAAY,CAAG,KAAK,CAAG,GAAG,CAEjD,CAED,KAAM,CAAAC,YAAY,CAAGX,MAAM,CAACY,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAL,sBAAA,qXAKlBC,KAAK,EAAIA,KAAK,CAACK,WAAW,CAAG,MAAM,CAAG,OAAO,CAiB5D,CAED,KAAM,CAAAC,YAAY,CAAGf,MAAM,CAACgB,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAAT,sBAAA,sIAChBC,KAAK,EAAIA,KAAK,CAACS,cAAc,CAAG,SAAS,CAAG,aAAa,CAC5DT,KAAK,EAAIA,KAAK,CAACS,cAAc,CAAG,SAAS,CAAG,GAAG,CAI3D,CAED,KAAM,CAAAC,OAAO,CAAGnB,MAAM,CAACM,GAAG,CAAAc,gBAAA,GAAAA,gBAAA,CAAAZ,sBAAA,ubAkBzB,CAED,KAAM,CAAAa,YAAY,CAAGrB,MAAM,CAACsB,QAAQ,CAAAC,gBAAA,GAAAA,gBAAA,CAAAf,sBAAA,yJASnC,CAED,KAAM,CAAAgB,gBAAgB,CAAGxB,MAAM,CAACY,MAAM,CAAAa,gBAAA,GAAAA,gBAAA,CAAAjB,sBAAA,oOAerC,CAED,KAAM,CAAAkB,kBAAqD,CAAGC,IAAA,EAWxD,IAXyD,CAC7DC,QAAQ,CACRC,UAAU,CACVC,UAAU,CACVC,aAAa,CACbC,OAAO,CACPC,IAAI,CAAG,EAAE,CACTC,YAAY,CAAG,IAAI,CACnBC,cAAc,CACdC,YAAY,CACZC,YACF,CAAC,CAAAV,IAAA,CACC,KAAM,CAAAW,gBAAgB,CAAIC,KAA6C,EAAK,CAC1E,GAAIH,YAAY,CAAE,CAChBA,YAAY,CAACP,UAAU,CAAEU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC9C,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAIL,YAAY,CAAE,CAChBA,YAAY,CAACR,UAAU,CAAC,CAC1B,CACF,CAAC,CAED,mBACEzB,KAAA,CAACC,iBAAiB,EAACK,YAAY,CAAEwB,YAAa,CAAAS,QAAA,EAC3CT,YAAY,eACXhC,IAAA,CAACS,YAAY,EACXG,WAAW,CAAEgB,UAAW,CACxBc,OAAO,CAAEA,CAAA,GAAMT,cAAc,CAACN,UAAU,CAAE,CAC3C,CACF,cACD3B,IAAA,CAACa,YAAY,EAACG,cAAc,CAAEa,aAAc,CAAAY,QAAA,CACzCf,QAAQ,CACG,CAAC,CACdI,OAAO,eACN5B,KAAA,CAACe,OAAO,EAAAwB,QAAA,eACNzC,IAAA,CAACsB,gBAAgB,EAACoB,OAAO,CAAEF,gBAAiB,CAAAC,QAAA,CAAC,cAE7C,CAAkB,CAAC,cACnBzC,IAAA,CAACmB,YAAY,EACXoB,KAAK,CAAER,IAAI,EAAI,EAAG,CAClBY,QAAQ,CAAEP,gBAAiB,CAC3BQ,WAAW,CAAC,sDAAc,CAC1BC,SAAS,MACV,CAAC,EACK,CACV,EACgB,CAAC,CAExB,CAAC,CAED,cAAe,CAAArB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}