{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23,_templateObject24;import React,{useState,useEffect}from'react';import styled from'styled-components';import{sentenceApi}from'../../training/api/sentenceApi';import{chatApi}from'../../shared/api/chatApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 20px;\\n  border-bottom: 1px solid #e9ecef;\\n  background: #fff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const FilterDropdownButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #333;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  min-width: 120px;\\n  justify-content: space-between;\\n  \\n  &:hover {\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  }\\n  \\n  .arrow {\\n    font-size: 12px;\\n    transition: transform 0.2s;\\n    transform: \",\";\\n  }\\n\"])),props=>props.$isOpen?'rotate(180deg)':'rotate(0deg)');const FilterDropdownMenu=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 100%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  z-index: 1000;\\n  max-height: 200px;\\n  overflow-y: auto;\\n  display: \",\";\\n  margin-top: 4px;\\n  min-width: 150px;\\n\"])),props=>props.$isOpen?'block':'none');const FilterDropdownItem=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  color: #333;\\n  background: \",\";\\n  font-weight: \",\";\\n  \\n  &:hover {\\n    background: #e9ecef;\\n  }\\n  \\n  &:first-child {\\n    border-radius: 8px 8px 0 0;\\n  }\\n  \\n  &:last-child {\\n    border-radius: 0 0 8px 8px;\\n  }\\n\"])),props=>props.$isSelected?'#e9ecef':'transparent',props=>props.$isSelected?'500':'normal');const FilterContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const NavigationButton=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 50%;\\n  width: 32px;\\n  height: 32px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 14px;\\n  color: #333;\\n  \\n  &:hover {\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n  }\\n\"])));const ContentArea=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 20px;\\n  overflow-y: auto;\\n  background: #ffffff;\\n\"])));const SentenceGrid=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px;\\n\"])));const SentenceContainer=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n\"])));const SentenceRow=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 16px;\\n  padding: 16px 20px;\\n  cursor: pointer;\\n  position: relative;\\n  transition: all 0.2s ease;\\n  min-height: 60px;\\n  display: flex;\\n  align-items: center;\\n  \\n  &:hover {\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n    transform: translateY(-1px);\\n    border-color: #adb5bd;\\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\\n  }\\n  \\n  \",\"\\n\"])),props=>props.$isPinned&&\"\\n    /* \\uACE0\\uC815\\uB41C \\uACBD\\uC6B0\\uC5D0\\uB3C4 \\uAE30\\uBCF8 \\uD68C\\uC0C9 \\uADF8\\uB77C\\uB370\\uC774\\uC158 \\uC720\\uC9C0 */\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n    border-color: #dee2e6;\\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n    \\n    &:hover {\\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n      border-color: #adb5bd;\\n    }\\n  \");const SentenceContent=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));const SentenceText=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-size: 15px;\\n  line-height: 1.6;\\n  color: #333;\\n  word-break: break-word;\\n  font-weight: 500;\\n\"])));const SentenceMetaExternal=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  font-size: 12px;\\n  color: #6c757d;\\n  gap: 8px;\\n\"])));const PersonaLabel=styled.span(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  background: #e9ecef;\\n  padding: 3px 8px;\\n  border-radius: 6px;\\n  font-weight: 500;\\n  color: #495057;\\n\"])));const DateLabel=styled.span(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  font-style: italic;\\n  opacity: 0.8;\\n\"])));const PinIcon=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 12px;\\n  right: 16px;\\n  width: 24px;\\n  height: 24px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 14px;\\n  color: \",\";\\n  cursor: pointer;\\n  z-index: 2;\\n  border-radius: 50%;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    color: #333;\\n    background: rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  \",\":hover & {\\n    color: \",\";\\n  }\\n  \\n  &::before {\\n    content: \\\"\\uD83D\\uDCCC\\\";\\n    filter: grayscale(100%);\\n  }\\n\"])),props=>props.$isPinned?'#333':'transparent',SentenceRow,props=>props.$isPinned?'#333':'#666');const EmptyState=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: 60px 20px;\\n  color: #6c757d;\\n  \\n  .icon {\\n    font-size: 48px;\\n    margin-bottom: 16px;\\n  }\\n  \\n  .title {\\n    font-size: 18px;\\n    font-weight: 500;\\n    margin-bottom: 8px;\\n  }\\n  \\n  .description {\\n    font-size: 14px;\\n  }\\n\"])));const ContextMenuContainer=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: \",\"px;\\n  left: \",\"px;\\n  background: white;\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n  z-index: 1000;\\n  min-width: 160px;\\n  overflow: hidden;\\n\"])),props=>props.$y,props=>props.$x);const ContextMenuItem=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  padding: 12px 16px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #333;\\n  \\n  &:hover {\\n    background-color: #f8f9fa;\\n  }\\n  \\n  &:not(:last-child) {\\n    border-bottom: 1px solid #f1f3f4;\\n  }\\n\"])));const ModalOverlay=styled.div(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 2000;\\n\"])));const ModalContent=styled.div(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 12px;\\n  padding: 24px;\\n  max-width: 400px;\\n  width: 90%;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\\n\"])));const ModalTitle=styled.h3(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  margin: 0 0 16px 0;\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #333;\\n\"])));const ModalMessage=styled.p(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  margin: 0 0 24px 0;\\n  font-size: 14px;\\n  color: #666;\\n  line-height: 1.5;\\n\"])));const ModalButtons=styled.div(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 12px;\\n  justify-content: flex-end;\\n\"])));const ModalButton=styled.button(_templateObject24||(_templateObject24=_taggedTemplateLiteral([\"\\n  padding: 10px 20px;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: 1px solid;\\n  \\n  \",\"\\n\"])),props=>props.$variant==='primary'?\"\\n    background: #007bff;\\n    color: white;\\n    border-color: #007bff;\\n    \\n    &:hover {\\n      background: #0056b3;\\n      border-color: #0056b3;\\n    }\\n  \":\"\\n    background: white;\\n    color: #6c757d;\\n    border-color: #dee2e6;\\n    \\n    &:hover {\\n      background: #f8f9fa;\\n    }\\n  \");const SentenceVaultView=_ref=>{let{onNavigateToPersona,onNavigateToThread,onNavigateToPersonaWithSentence}=_ref;const[sentences,setSentences]=useState([]);const[filteredSentences,setFilteredSentences]=useState([]);const[personas,setPersonas]=useState({});const[currentFilter,setCurrentFilter]=useState('전체');const[loading,setLoading]=useState(true);const[pinnedSentences,setPinnedSentences]=useState(new Set());const[contextMenu,setContextMenu]=useState(null);const[confirmationModal,setConfirmationModal]=useState(null);const[showFilterDropdown,setShowFilterDropdown]=useState(false);// 필터 옵션들\nconst[filterOptions,setFilterOptions]=useState(['전체','언어화','편지']);const[currentFilterIndex,setCurrentFilterIndex]=useState(0);useEffect(()=>{loadData();},[]);useEffect(()=>{applyFilter();},[sentences,currentFilter,pinnedSentences]);// 컨텍스트 메뉴 외부 클릭 감지\nuseEffect(()=>{const handleClickOutside=()=>{console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');setContextMenu(null);};if(contextMenu){document.addEventListener('click',handleClickOutside);return()=>document.removeEventListener('click',handleClickOutside);}},[contextMenu]);// 드롭다운 외부 클릭 감지\nuseEffect(()=>{const handleClickOutside=event=>{const target=event.target;if(!target.closest('.filter-dropdown')){setShowFilterDropdown(false);}};if(showFilterDropdown){document.addEventListener('click',handleClickOutside);return()=>document.removeEventListener('click',handleClickOutside);}},[showFilterDropdown]);const loadData=async()=>{setLoading(true);try{// 저장고 문장들 로드\nconst sentenceData=await sentenceApi.getVaultSentences();console.log('저장고 데이터:',sentenceData);setSentences(sentenceData);// 페르소나 데이터 로드\nconst personaResponse=await chatApi.getPersonas();if(personaResponse.data){setPersonas(personaResponse.data);// 필터 옵션에 페르소나들 추가\nconst personaNames=Object.values(personaResponse.data).map(p=>p.name);setFilterOptions(['전체','언어화','편지',...personaNames]);}}catch(error){console.error('데이터 로딩 실패:',error);}finally{setLoading(false);}};const applyFilter=()=>{let filtered=[...sentences];if(currentFilter!=='전체'){if(currentFilter==='언어화'){filtered=filtered.filter(s=>{var _s$source_message_id;return s.tags.includes('verbalization')||s.tags.includes('언어화')||((_s$source_message_id=s.source_message_id)===null||_s$source_message_id===void 0?void 0:_s$source_message_id.includes('verbalization'));});}else if(currentFilter==='편지'){filtered=filtered.filter(s=>s.tags.includes('letter'));}else{// 페르소나 이름으로 필터링\nconst personaId=Object.keys(personas).find(id=>personas[id].name===currentFilter);if(personaId){filtered=filtered.filter(s=>s.tags.includes(personaId)||s.source_message_id.includes(personaId));}}}// 고정된 문장들을 맨 위로\nconst pinned=filtered.filter(s=>pinnedSentences.has(s.id));const unpinned=filtered.filter(s=>!pinnedSentences.has(s.id));// 날짜순 정렬 (최신순)\npinned.sort((a,b)=>new Date(b.created_at).getTime()-new Date(a.created_at).getTime());unpinned.sort((a,b)=>new Date(b.created_at).getTime()-new Date(a.created_at).getTime());setFilteredSentences([...pinned,...unpinned]);};const handleFilterChange=filter=>{setCurrentFilter(filter);setCurrentFilterIndex(filterOptions.indexOf(filter));setShowFilterDropdown(false);};const handleNavigateFilter=direction=>{const newIndex=direction==='prev'?Math.max(0,currentFilterIndex-1):Math.min(filterOptions.length-1,currentFilterIndex+1);setCurrentFilterIndex(newIndex);setCurrentFilter(filterOptions[newIndex]);};const handleSentenceClick=(event,sentence)=>{event.preventDefault();event.stopPropagation();console.log('문장 클릭됨:',sentence.sentence.substring(0,50));console.log('클릭 위치:',event.clientX,event.clientY);setContextMenu({x:event.clientX,y:event.clientY,sentence});console.log('컨텍스트 메뉴 설정됨');};const handleContextMenuAction=(action,sentence)=>{console.log('컨텍스트 메뉴 액션:',action);setContextMenu(null);switch(action){case'interact':case'navigate':case'delete':setConfirmationModal({type:action,sentence});break;case'pin':togglePin(sentence.id);break;}};const handleConfirmAction=async()=>{if(!confirmationModal)return;const{type,sentence}=confirmationModal;try{switch(type){case'interact':// 새로운 문장 스레드 생성하고 입력창에 해당 문장 설정\nconst personaId=extractPersonaIdFromSentence(sentence);if(personaId&&onNavigateToPersonaWithSentence){// 페르소나의 문장 모드로 이동하면서 선택된 문장 전달\nonNavigateToPersonaWithSentence(personaId,'sentence',sentence.sentence);console.log('새 문장 스레드 생성 및 입력창 설정:',sentence.sentence);}else if(personaId&&onNavigateToPersona){// 폴백: 기존 방식\nonNavigateToPersona(personaId,'sentence');console.log('새 문장 스레드 생성 및 입력창 설정:',sentence.sentence);}break;case'navigate':// 기존 기록으로 이동 (기존 상호작용하기 기능)\nconst navigatePersonaId=extractPersonaIdFromSentence(sentence);if(navigatePersonaId&&onNavigateToPersona){onNavigateToPersona(navigatePersonaId,'sentence');}break;case'delete':// 문장 삭제\nawait sentenceApi.deleteVaultSentence(sentence.id);setSentences(prev=>prev.filter(s=>s.id!==sentence.id));break;}}catch(error){console.error('액션 실행 실패:',error);}setConfirmationModal(null);};const togglePin=sentenceId=>{setPinnedSentences(prev=>{const newSet=new Set(prev);if(newSet.has(sentenceId)){newSet.delete(sentenceId);}else{newSet.add(sentenceId);}return newSet;});};const extractPersonaIdFromSentence=sentence=>{console.log('라벨 추출 중:',sentence);console.log('tags:',sentence.tags);console.log('source_message_id:',sentence.source_message_id);console.log('사용 가능한 페르소나들:',Object.keys(personas));// tags에서 페르소나 ID 찾기\nfor(const tag of sentence.tags){if(personas[tag]){console.log('태그에서 페르소나 발견:',tag,personas[tag].name);return tag;}}return null;};const getPersonaName=sentence=>{var _sentence$source_mess;// 언어화 태그 체크\nif(sentence.tags.includes('언어화')||sentence.tags.includes('verbalization')||(_sentence$source_mess=sentence.source_message_id)!==null&&_sentence$source_mess!==void 0&&_sentence$source_mess.includes('verbalization')){return'언어화';}// 편지 태그 체크\nif(sentence.tags.includes('letter')){return'편지';}// 페르소나 이름 찾기\nfor(const tag of sentence.tags){const persona=personas[tag];if(persona){return persona.name;}}return'시스템';};const getModalContent=()=>{if(!confirmationModal)return null;const{type,sentence}=confirmationModal;const personaName=getPersonaName(sentence);switch(type){case'interact':return{title:'상호작용 하기',message:\"\\uD574\\uB2F9 \\uC778\\uBB3C(\".concat(personaName,\")\\uC758 \\uC0C8\\uB85C\\uC6B4 \\uBB38\\uC7A5 \\uC2A4\\uB808\\uB4DC\\uB97C \\uC0DD\\uC131\\uD558\\uACE0 \\uC774 \\uBB38\\uC7A5\\uC73C\\uB85C \\uC0C1\\uD638\\uC791\\uC6A9\\uC744 \\uC2DC\\uC791\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"),confirmText:'상호작용',cancelText:'취소'};case'navigate':return{title:'해당 기록으로 이동',message:\"\\uD574\\uB2F9 \\uC778\\uBB3C(\".concat(personaName,\")\\uC758 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"),confirmText:'이동',cancelText:'취소'};case'delete':return{title:'문장 삭제',message:'이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',confirmText:'삭제',cancelText:'취소'};default:return null;}};const toggleFilterDropdown=()=>{setShowFilterDropdown(!showFilterDropdown);};if(loading){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"div\",{style:{padding:'40px',textAlign:'center'},children:\"\\uB85C\\uB529 \\uC911...\"})});}const modalContent=getModalContent();return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(NavigationButton,{onClick:()=>handleNavigateFilter('prev'),disabled:currentFilterIndex===0,children:\"\\u2039\"}),/*#__PURE__*/_jsxs(FilterContainer,{className:\"filter-dropdown\",children:[/*#__PURE__*/_jsxs(FilterDropdownButton,{$isOpen:showFilterDropdown,onClick:toggleFilterDropdown,children:[currentFilter,/*#__PURE__*/_jsx(\"span\",{className:\"arrow\",children:\"\\u25BC\"})]}),/*#__PURE__*/_jsx(FilterDropdownMenu,{$isOpen:showFilterDropdown,children:filterOptions.map(option=>/*#__PURE__*/_jsx(FilterDropdownItem,{$isSelected:option===currentFilter,onClick:()=>handleFilterChange(option),children:option},option))})]}),/*#__PURE__*/_jsx(NavigationButton,{onClick:()=>handleNavigateFilter('next'),disabled:currentFilterIndex===filterOptions.length-1,children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(ContentArea,{children:filteredSentences.length===0?/*#__PURE__*/_jsxs(EmptyState,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"\\uC800\\uC7A5\\uB41C \\uBB38\\uC7A5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:\"\\uD6C8\\uC2B5 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC7A5\\uC744 \\uC800\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uD574\\uBCF4\\uC138\\uC694\"})]}):/*#__PURE__*/_jsx(SentenceGrid,{children:filteredSentences.map(sentence=>/*#__PURE__*/_jsxs(SentenceContainer,{children:[/*#__PURE__*/_jsxs(SentenceRow,{$isPinned:pinnedSentences.has(sentence.id),onClick:e=>handleSentenceClick(e,sentence),children:[/*#__PURE__*/_jsx(SentenceContent,{children:/*#__PURE__*/_jsx(SentenceText,{children:sentence.sentence})}),/*#__PURE__*/_jsx(PinIcon,{$isPinned:pinnedSentences.has(sentence.id),onClick:e=>{e.stopPropagation();togglePin(sentence.id);}})]}),/*#__PURE__*/_jsxs(SentenceMetaExternal,{children:[/*#__PURE__*/_jsx(PersonaLabel,{children:getPersonaName(sentence)}),/*#__PURE__*/_jsx(DateLabel,{children:new Date(sentence.created_at).toLocaleDateString('ko-KR')})]})]},sentence.id))})}),contextMenu&&/*#__PURE__*/_jsxs(ContextMenuContainer,{$x:contextMenu.x,$y:contextMenu.y,children:[/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('interact',contextMenu.sentence),children:\"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"}),/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('navigate',contextMenu.sentence),children:\"\\uD574\\uB2F9 \\uAE30\\uB85D\\uC73C\\uB85C \\uC774\\uB3D9\"}),/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('delete',contextMenu.sentence),children:\"\\uC0AD\\uC81C\"})]}),confirmationModal&&modalContent&&/*#__PURE__*/_jsx(ModalOverlay,{onClick:()=>setConfirmationModal(null),children:/*#__PURE__*/_jsxs(ModalContent,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(ModalTitle,{children:modalContent.title}),/*#__PURE__*/_jsx(ModalMessage,{children:modalContent.message}),/*#__PURE__*/_jsxs(ModalButtons,{children:[/*#__PURE__*/_jsx(ModalButton,{$variant:\"secondary\",onClick:()=>setConfirmationModal(null),children:modalContent.cancelText}),/*#__PURE__*/_jsx(ModalButton,{$variant:\"primary\",onClick:handleConfirmAction,children:modalContent.confirmText})]})]})})]});};export default SentenceVaultView;","map":{"version":3,"names":["React","useState","useEffect","styled","sentenceApi","chatApi","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","FilterDropdownButton","button","_templateObject3","props","$isOpen","FilterDropdownMenu","_templateObject4","FilterDropdownItem","_templateObject5","$isSelected","FilterContainer","_templateObject6","NavigationButton","_templateObject7","ContentArea","_templateObject8","SentenceGrid","_templateObject9","SentenceContainer","_templateObject0","SentenceRow","_templateObject1","$isPinned","SentenceContent","_templateObject10","SentenceText","_templateObject11","SentenceMetaExternal","_templateObject12","PersonaLabel","span","_templateObject13","DateLabel","_templateObject14","PinIcon","_templateObject15","EmptyState","_templateObject16","ContextMenuContainer","_templateObject17","$y","$x","ContextMenuItem","_templateObject18","ModalOverlay","_templateObject19","ModalContent","_templateObject20","ModalTitle","h3","_templateObject21","ModalMessage","p","_templateObject22","ModalButtons","_templateObject23","ModalButton","_templateObject24","$variant","SentenceVaultView","_ref","onNavigateToPersona","onNavigateToThread","onNavigateToPersonaWithSentence","sentences","setSentences","filteredSentences","setFilteredSentences","personas","setPersonas","currentFilter","setCurrentFilter","loading","setLoading","pinnedSentences","setPinnedSentences","Set","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","showFilterDropdown","setShowFilterDropdown","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadData","applyFilter","handleClickOutside","console","log","document","addEventListener","removeEventListener","event","target","closest","sentenceData","getVaultSentences","personaResponse","getPersonas","data","personaNames","Object","values","map","name","error","filtered","filter","s","_s$source_message_id","tags","includes","source_message_id","personaId","keys","find","id","pinned","has","unpinned","sort","a","b","Date","created_at","getTime","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","handleSentenceClick","sentence","preventDefault","stopPropagation","substring","clientX","clientY","x","y","handleContextMenuAction","action","type","togglePin","handleConfirmAction","extractPersonaIdFromSentence","navigatePersonaId","deleteVaultSentence","prev","sentenceId","newSet","delete","add","tag","getPersonaName","_sentence$source_mess","persona","getModalContent","personaName","title","message","concat","confirmText","cancelText","toggleFilterDropdown","children","style","padding","textAlign","modalContent","onClick","disabled","className","option","e","toLocaleDateString"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/vault/components/SentenceVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, SentenceVaultItem } from '../../training/api/sentenceApi';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { Persona } from '../../shared/types';\n\ninterface SentenceVaultViewProps {\n  onNavigateToPersona: (personaId: string, mode: 'sentence') => void;\n  onNavigateToThread: (threadId: string, threadType: string) => void;\n  onNavigateToPersonaWithSentence?: (personaId: string, mode: 'sentence', selectedSentence: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  sentence: SentenceVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'navigate' | 'delete';\n  sentence: SentenceVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterDropdownButton = styled.button<{ $isOpen: boolean }>`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n\nconst FilterDropdownMenu = styled.div<{ $isOpen: boolean }>`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n\nconst FilterDropdownItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst SentenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst SentenceRow = styled.div<{ $isPinned: boolean }>`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  ${props => props.$isPinned && `\n    /* 고정된 경우에도 기본 회색 그라데이션 유지 */\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    border-color: #dee2e6;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: #adb5bd;\n    }\n  `}\n`;\n\nconst SentenceContent = styled.div`\n  flex: 1;\n`;\n\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n\nconst SentenceMetaExternal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n\nconst PinIcon = styled.div<{ $isPinned: boolean }>`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#333' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #333;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#333' : '#666'};\n  }\n  \n  &::before {\n    content: \"📌\";\n    filter: grayscale(100%);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst SentenceVaultView: React.FC<SentenceVaultViewProps> = ({\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  const [sentences, setSentences] = useState<SentenceVaultItem[]>([]);\n  const [filteredSentences, setFilteredSentences] = useState<SentenceVaultItem[]>([]);\n  const [personas, setPersonas] = useState<Record<string, Persona>>({});\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedSentences, setPinnedSentences] = useState<Set<string>>(new Set());\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '언어화', '편지']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 페르소나 데이터 로드\n      const personaResponse = await chatApi.getPersonas();\n      if (personaResponse.data) {\n        setPersonas(personaResponse.data);\n        \n        // 필터 옵션에 페르소나들 추가\n        const personaNames = Object.values(personaResponse.data).map(p => p.name);\n        setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n      }\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilter = () => {\n    let filtered = [...sentences];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => \n          s.tags.includes('verbalization') || \n          s.tags.includes('언어화') ||\n          s.source_message_id?.includes('verbalization')\n        );\n      } else if (currentFilter === '편지') {\n        filtered = filtered.filter(s => s.tags.includes('letter'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n    \n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n    setFilteredSentences([...pinned, ...unpinned]);\n  };\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const handleSentenceClick = (event: React.MouseEvent, sentence: SentenceVaultItem) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    console.log('문장 클릭됨:', sentence.sentence.substring(0, 50));\n    console.log('클릭 위치:', event.clientX, event.clientY);\n    \n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n    \n    console.log('컨텍스트 메뉴 설정됨');\n  };\n\n  const handleContextMenuAction = (action: string, sentence: SentenceVaultItem) => {\n    console.log('컨텍스트 메뉴 액션:', action);\n    setContextMenu(null);\n    \n    switch (action) {\n      case 'interact':\n      case 'navigate':\n      case 'delete':\n        setConfirmationModal({ type: action as any, sentence });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    \n    const { type, sentence } = confirmationModal;\n    \n    try {\n      switch (type) {\n        case 'interact':\n          // 새로운 문장 스레드 생성하고 입력창에 해당 문장 설정\n          const personaId = extractPersonaIdFromSentence(sentence);\n          if (personaId && onNavigateToPersonaWithSentence) {\n            // 페르소나의 문장 모드로 이동하면서 선택된 문장 전달\n            onNavigateToPersonaWithSentence(personaId, 'sentence', sentence.sentence);\n            console.log('새 문장 스레드 생성 및 입력창 설정:', sentence.sentence);\n          } else if (personaId && onNavigateToPersona) {\n            // 폴백: 기존 방식\n            onNavigateToPersona(personaId, 'sentence');\n            console.log('새 문장 스레드 생성 및 입력창 설정:', sentence.sentence);\n          }\n          break;\n        case 'navigate':\n          // 기존 기록으로 이동 (기존 상호작용하기 기능)\n          const navigatePersonaId = extractPersonaIdFromSentence(sentence);\n          if (navigatePersonaId && onNavigateToPersona) {\n            onNavigateToPersona(navigatePersonaId, 'sentence');\n          }\n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n    }\n    \n    setConfirmationModal(null);\n  };\n\n  const togglePin = (sentenceId: string) => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n\n  const extractPersonaIdFromSentence = (sentence: SentenceVaultItem): string | null => {\n    console.log('라벨 추출 중:', sentence);\n    console.log('tags:', sentence.tags);\n    console.log('source_message_id:', sentence.source_message_id);\n    console.log('사용 가능한 페르소나들:', Object.keys(personas));\n    \n    // tags에서 페르소나 ID 찾기\n    for (const tag of sentence.tags) {\n      if (personas[tag]) {\n        console.log('태그에서 페르소나 발견:', tag, personas[tag].name);\n        return tag;\n      }\n    }\n    return null;\n  };\n\n  const getPersonaName = (sentence: SentenceVaultItem): string => {\n    // 언어화 태그 체크\n    if (sentence.tags.includes('언어화') || \n        sentence.tags.includes('verbalization') ||\n        sentence.source_message_id?.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    // 편지 태그 체크\n    if (sentence.tags.includes('letter')) {\n      return '편지';\n    }\n    \n    // 페르소나 이름 찾기\n    for (const tag of sentence.tags) {\n      const persona = personas[tag];\n      if (persona) {\n        return persona.name;\n      }\n    }\n    \n    return '시스템';\n  };\n\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    \n    const { type, sentence } = confirmationModal;\n    const personaName = getPersonaName(sentence);\n    \n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 인물(${personaName})의 새로운 문장 스레드를 생성하고 이 문장으로 상호작용을 시작하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'navigate':\n        return {\n          title: '해당 기록으로 이동',\n          message: `해당 인물(${personaName})의 페이지로 이동하시겠습니까?`,\n          confirmText: '이동',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: '40px', textAlign: 'center' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  const modalContent = getModalContent();\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <FilterContainer className=\"filter-dropdown\">\n          <FilterDropdownButton\n            $isOpen={showFilterDropdown}\n            onClick={toggleFilterDropdown}\n          >\n            {currentFilter}\n            <span className=\"arrow\">▼</span>\n          </FilterDropdownButton>\n          <FilterDropdownMenu $isOpen={showFilterDropdown}>\n            {filterOptions.map(option => (\n              <FilterDropdownItem\n                key={option}\n                $isSelected={option === currentFilter}\n                onClick={() => handleFilterChange(option)}\n              >\n                {option}\n              </FilterDropdownItem>\n            ))}\n          </FilterDropdownMenu>\n        </FilterContainer>\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n      </Header>\n\n      <ContentArea>\n        {filteredSentences.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 문장이 없습니다</div>\n            <div className=\"description\">\n              훈습 페이지에서 문장을 저장고에 저장해보세요\n            </div>\n          </EmptyState>\n        ) : (\n          <SentenceGrid>\n            {filteredSentences.map(sentence => (\n              <SentenceContainer key={sentence.id}>\n                <SentenceRow\n                  $isPinned={pinnedSentences.has(sentence.id)}\n                  onClick={(e) => handleSentenceClick(e, sentence)}\n                >\n                  <SentenceContent>\n                    <SentenceText>{sentence.sentence}</SentenceText>\n                  </SentenceContent>\n                  <PinIcon\n                    $isPinned={pinnedSentences.has(sentence.id)}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      togglePin(sentence.id);\n                    }}\n                  />\n                </SentenceRow>\n                <SentenceMetaExternal>\n                  <PersonaLabel>{getPersonaName(sentence)}</PersonaLabel>\n                  <DateLabel>{new Date(sentence.created_at).toLocaleDateString('ko-KR')}</DateLabel>\n                </SentenceMetaExternal>\n              </SentenceContainer>\n            ))}\n          </SentenceGrid>\n        )}\n      </ContentArea>\n\n      {/* 컨텍스트 메뉴 */}\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem onClick={() => handleContextMenuAction('interact', contextMenu.sentence)}>\n            상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('navigate', contextMenu.sentence)}>\n            해당 기록으로 이동\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('delete', contextMenu.sentence)}>\n            삭제\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {/* 확인 모달 */}\n      {confirmationModal && modalContent && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>{modalContent.title}</ModalTitle>\n            <ModalMessage>{modalContent.message}</ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                {modalContent.cancelText}\n              </ModalButton>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {modalContent.confirmText}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default SentenceVaultView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}