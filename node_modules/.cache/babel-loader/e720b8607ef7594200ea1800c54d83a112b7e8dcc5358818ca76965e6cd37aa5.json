{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useRef,useEffect}from'react';import styled from'styled-components';import QuickPhraseSettingsModal from'./QuickPhraseSettingsModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuickPhraseContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n\"])));const QuickPhraseBtn=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 40px;\\n  border-radius: 16px; /* \\uBB38\\uC7A5\\uC120\\uD0DD \\uBC84\\uD2BC\\uACFC \\uB3D9\\uC77C\\uD55C \\uB77C\\uC6B4\\uB529 */\\n  border: 1px solid #ccc;\\n  background: linear-gradient(90deg, #ffffff 0%, #f0f0f0 100%); /* \\uC67C\\uCABD\\uC5D0\\uC11C \\uC624\\uB978\\uCABD\\uC73C\\uB85C \\uD770\\uC0C9\\u2192\\uC5F0\\uD55C\\uD68C\\uC0C9 */\\n  color: #333;\\n  font-size: 11px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n  line-height: 1.2;\\n  transition: all 0.2s ease;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* \\uC0B4\\uC9DD\\uC758 \\uC74C\\uC601 \\uCC98\\uB9AC */\\n  \\n  &:hover {\\n    background: linear-gradient(90deg, #f8f8f8 0%, #e8e8e8 100%);\\n    transform: translateY(-1px);\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\\n  }\\n  \\n  &:active {\\n    transform: translateY(0);\\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\\n  }\\n\"])));const DropdownMenu=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 50px;\\n  right: 0; /* \\uC624\\uB978\\uCABD\\uC5D0\\uC11C \\uC2DC\\uC791\\uD558\\uC5EC \\uC67C\\uCABD\\uC73C\\uB85C \\uD655\\uC7A5 */\\n  width: 250px; /* 200px\\uC5D0\\uC11C 250px\\uB85C \\uD655\\uB300 */\\n  background: #f5f5f5;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\\n  overflow: hidden;\\n  z-index: 1000;\\n  max-height: 450px; /* 400px\\uC5D0\\uC11C 450px\\uB85C \\uD655\\uB300 */\\n  overflow-y: auto;\\n  transform: \",\";\\n  transform-origin: bottom right; /* \\uAF2D\\uC9C0\\uC810\\uC744 \\uC624\\uB978\\uCABD \\uC544\\uB798\\uB85C \\uC124\\uC815 */\\n  transition: transform 0.2s ease;\\n\"])),props=>props.show?'scale(1)':'scale(0)');const MenuItem=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 14px 18px; /* 12px 16px\\uC5D0\\uC11C 14px 18px\\uB85C \\uD655\\uB300 */\\n  border: none;\\n  background: transparent;\\n  text-align: left;\\n  cursor: \",\";\\n  font-size: 14px; /* 14px\\uC5D0\\uC11C 12px\\uB85C \\uD3F0\\uD2B8 \\uD06C\\uAE30 \\uCD95\\uC18C */\\n  color: \",\";\\n  border-bottom: none;\\n  transition: background-color 0.2s ease;\\n  \\n  &:hover {\\n    background: \",\";\\n  }\\n  \\n  &:active {\\n    background: \",\";\\n  }\\n\"])),props=>props.isTodo?'not-allowed':'pointer',props=>props.isTodo?'#999':'#333',props=>props.isTodo?'transparent':'#e9ecef',props=>props.isTodo?'transparent':'#dee2e6');const Divider=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  height: 1px;\\n  background: #ddd;\\n  margin: 4px 0;\\n\"])));const QuickPhraseButton=_ref=>{let{quickPhrases,onPhraseSelect,onPhrasesUpdate,currentInterpretation,personaId,onGenerateProceed,onGenerateSentence}=_ref;const[showMenu,setShowMenu]=useState(false);const[showSettingsModal,setShowSettingsModal]=useState(false);const menuRef=useRef(null);const handleButtonClick=()=>{setShowMenu(!showMenu);};const handlePhraseClick=function(text){let isTodo=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(isTodo)return;// TODO 항목은 클릭 불가\nonPhraseSelect(text);setShowMenu(false);};const handleGenerateProceed=async()=>{if(onGenerateProceed){onGenerateProceed();setShowMenu(false);}};const handleGenerateSentence=async()=>{if(onGenerateSentence){onGenerateSentence();setShowMenu(false);}};const isGenerationAvailable=!!(currentInterpretation&&personaId);const handleSettingsClick=()=>{setShowMenu(false);setShowSettingsModal(true);};// 메뉴 외부 클릭 시 메뉴 닫기\nuseEffect(()=>{const handleClickOutside=event=>{if(menuRef.current&&!menuRef.current.contains(event.target)){setShowMenu(false);}};if(showMenu){document.addEventListener('mousedown',handleClickOutside);}return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[showMenu]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(QuickPhraseContainer,{ref:menuRef,children:[/*#__PURE__*/_jsxs(QuickPhraseBtn,{onClick:handleButtonClick,children:[\"\\uC790\\uC8FC\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uC4F0\\uB294\"]}),/*#__PURE__*/_jsxs(DropdownMenu,{show:showMenu,children:[/*#__PURE__*/_jsxs(MenuItem,{isTodo:!isGenerationAvailable,onClick:isGenerationAvailable?handleGenerateProceed:undefined,children:[\"[\\uB098\\uC544\\uAC00\\uAE30] \\uC0DD\\uC131 \",!isGenerationAvailable&&'(해석 필요)']}),/*#__PURE__*/_jsxs(MenuItem,{isTodo:!isGenerationAvailable,onClick:isGenerationAvailable?handleGenerateSentence:undefined,children:[\"[\\uBB38\\uC7A5] \\uC0DD\\uC131 \",!isGenerationAvailable&&'(해석 필요)']}),/*#__PURE__*/_jsx(Divider,{}),quickPhrases.map(phrase=>/*#__PURE__*/_jsx(MenuItem,{onClick:()=>handlePhraseClick(phrase.text),children:phrase.text},phrase.id)),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(MenuItem,{isSettings:true,onClick:handleSettingsClick,children:\"\\uC124\\uC815 (\\uD3B8\\uC9D1 \\uCC3D \\uD638\\uCD9C)\"})]})]}),showSettingsModal&&/*#__PURE__*/_jsx(QuickPhraseSettingsModal,{quickPhrases:quickPhrases,onClose:()=>setShowSettingsModal(false),onUpdate:onPhrasesUpdate})]});};export default QuickPhraseButton;","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","QuickPhraseSettingsModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuickPhraseContainer","div","_templateObject","_taggedTemplateLiteral","QuickPhraseBtn","button","_templateObject2","DropdownMenu","_templateObject3","props","show","MenuItem","_templateObject4","isTodo","Divider","_templateObject5","QuickPhraseButton","_ref","quickPhrases","onPhraseSelect","onPhrasesUpdate","currentInterpretation","personaId","onGenerateProceed","onGenerateSentence","showMenu","setShowMenu","showSettingsModal","setShowSettingsModal","menuRef","handleButtonClick","handlePhraseClick","text","arguments","length","undefined","handleGenerateProceed","handleGenerateSentence","isGenerationAvailable","handleSettingsClick","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","ref","onClick","map","phrase","id","isSettings","onClose","onUpdate"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/QuickPhraseButton.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { QuickPhrase } from '../api/quickPhraseApi';\nimport QuickPhraseSettingsModal from './QuickPhraseSettingsModal';\n\ninterface QuickPhraseButtonProps {\n  quickPhrases: QuickPhrase[];\n  onPhraseSelect: (text: string) => void;\n  onPhrasesUpdate: () => void;\n  currentInterpretation?: string;\n  personaId?: string;\n  onGenerateProceed?: () => void;\n  onGenerateSentence?: () => void;\n}\n\nconst QuickPhraseContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst QuickPhraseBtn = styled.button`\n  width: 100%;\n  height: 40px;\n  border-radius: 16px; /* 문장선택 버튼과 동일한 라운딩 */\n  border: 1px solid #ccc;\n  background: linear-gradient(90deg, #ffffff 0%, #f0f0f0 100%); /* 왼쪽에서 오른쪽으로 흰색→연한회색 */\n  color: #333;\n  font-size: 11px;\n  font-weight: bold;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  line-height: 1.2;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 살짝의 음영 처리 */\n  \n  &:hover {\n    background: linear-gradient(90deg, #f8f8f8 0%, #e8e8e8 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst DropdownMenu = styled.div<{ show: boolean }>`\n  position: absolute;\n  bottom: 50px;\n  right: 0; /* 오른쪽에서 시작하여 왼쪽으로 확장 */\n  width: 250px; /* 200px에서 250px로 확대 */\n  background: #f5f5f5;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  z-index: 1000;\n  max-height: 450px; /* 400px에서 450px로 확대 */\n  overflow-y: auto;\n  transform: ${props => props.show ? 'scale(1)' : 'scale(0)'};\n  transform-origin: bottom right; /* 꼭지점을 오른쪽 아래로 설정 */\n  transition: transform 0.2s ease;\n`;\n\nconst MenuItem = styled.button<{ isTodo?: boolean; isSettings?: boolean }>`\n  width: 100%;\n  padding: 14px 18px; /* 12px 16px에서 14px 18px로 확대 */\n  border: none;\n  background: transparent;\n  text-align: left;\n  cursor: ${props => props.isTodo ? 'not-allowed' : 'pointer'};\n  font-size: 14px; /* 14px에서 12px로 폰트 크기 축소 */\n  color: ${props => props.isTodo ? '#999' : '#333'};\n  border-bottom: none;\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.isTodo ? 'transparent' : '#e9ecef'};\n  }\n  \n  &:active {\n    background: ${props => props.isTodo ? 'transparent' : '#dee2e6'};\n  }\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 4px 0;\n`;\n\nconst QuickPhraseButton: React.FC<QuickPhraseButtonProps> = ({\n  quickPhrases,\n  onPhraseSelect,\n  onPhrasesUpdate,\n  currentInterpretation,\n  personaId,\n  onGenerateProceed,\n  onGenerateSentence\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleButtonClick = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handlePhraseClick = (text: string, isTodo: boolean = false) => {\n    if (isTodo) return; // TODO 항목은 클릭 불가\n    \n    onPhraseSelect(text);\n    setShowMenu(false);\n  };\n\n  const handleGenerateProceed = async () => {\n    if (onGenerateProceed) {\n      onGenerateProceed();\n      setShowMenu(false);\n    }\n  };\n\n  const handleGenerateSentence = async () => {\n    if (onGenerateSentence) {\n      onGenerateSentence();\n      setShowMenu(false);\n    }\n  };\n\n  const isGenerationAvailable = !!(currentInterpretation && personaId);\n\n  const handleSettingsClick = () => {\n    setShowMenu(false);\n    setShowSettingsModal(true);\n  };\n\n  // 메뉴 외부 클릭 시 메뉴 닫기\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setShowMenu(false);\n      }\n    };\n\n    if (showMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showMenu]);\n\n  return (\n    <>\n      <QuickPhraseContainer ref={menuRef}>\n        <QuickPhraseBtn onClick={handleButtonClick}>\n          자주<br/>쓰는\n        </QuickPhraseBtn>\n        \n        <DropdownMenu show={showMenu}>\n          {/* 나아가기, 문장 생성 항목들 */}\n          <MenuItem \n            isTodo={!isGenerationAvailable}\n            onClick={isGenerationAvailable ? handleGenerateProceed : undefined}\n          >\n            [나아가기] 생성 {!isGenerationAvailable && '(해석 필요)'}\n          </MenuItem>\n          <MenuItem \n            isTodo={!isGenerationAvailable}\n            onClick={isGenerationAvailable ? handleGenerateSentence : undefined}\n          >\n            [문장] 생성 {!isGenerationAvailable && '(해석 필요)'}\n          </MenuItem>\n          \n          <Divider />\n          \n          {/* 실제 자주쓰는 문장들 */}\n          {quickPhrases.map((phrase) => (\n            <MenuItem \n              key={phrase.id}\n              onClick={() => handlePhraseClick(phrase.text)}\n            >\n              {phrase.text}\n            </MenuItem>\n          ))}\n          \n          <Divider />\n          \n          {/* 설정 메뉴 */}\n          <MenuItem isSettings onClick={handleSettingsClick}>\n            설정 (편집 창 호출)\n          </MenuItem>\n        </DropdownMenu>\n      </QuickPhraseContainer>\n\n      {/* 설정 모달 */}\n      {showSettingsModal && (\n        <QuickPhraseSettingsModal\n          quickPhrases={quickPhrases}\n          onClose={() => setShowSettingsModal(false)}\n          onUpdate={onPhrasesUpdate}\n        />\n      )}\n    </>\n  );\n};\n\nexport default QuickPhraseButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}