{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useChat } from './hooks/useChat';\nimport ConversationSidebar from './components/ConversationSidebar';\nimport PersonaSidebar from './components/PersonaSidebar';\nimport ChatArea from './components/ChatArea';\nimport { GlobalStyle, AppContainer } from './styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isPersonaSidebarCollapsed, setIsPersonaSidebarCollapsed] = useState(false);\n  const [isConversationSidebarCollapsed, setIsConversationSidebarCollapsed] = useState(false);\n  const [selectedPersonaItem, setSelectedPersonaItem] = useState(null);\n  const [selectedConversationItem, setSelectedConversationItem] = useState(null);\n\n  // 해석 관련 상태\n  const [currentInterpretation, setCurrentInterpretation] = useState(null);\n  const {\n    // State\n    personas,\n    globalMessages,\n    conversations,\n    selectedConversation,\n    selectedPersona,\n    isLoading,\n    error,\n    // Actions\n    sendInitialMessage,\n    continueConversation,\n    selectConversation,\n    selectPersona,\n    clearError\n  } = useChat();\n\n  // 페르소나 메뉴 아이템 선택 핸들러\n  const handleSelectPersonaItem = itemId => {\n    setSelectedPersonaItem(itemId);\n\n    // 훈습을 선택했을 때 ConversationSidebar 접기\n    if (itemId === 'training') {\n      setIsConversationSidebarCollapsed(true);\n      setCurrentInterpretation(null); // 기존 해석 초기화\n    } else {\n      setIsConversationSidebarCollapsed(false);\n    }\n\n    // 각 메뉴 아이템에 따른 로직을 여기에 추가할 수 있습니다\n    console.log('Selected persona item:', itemId);\n  };\n\n  // 대화 메뉴 아이템 선택 핸들러\n  const handleSelectConversationItem = itemId => {\n    setSelectedConversationItem(itemId);\n    // 각 메뉴 아이템에 따른 로직을 여기에 추가할 수 있습니다\n    console.log('Selected conversation item:', itemId);\n  };\n\n  // 해석 완료 핸들러\n  const handleInterpretationComplete = (personaId, interpretation) => {\n    const persona = personas[personaId];\n    setCurrentInterpretation({\n      personaId,\n      personaName: (persona === null || persona === void 0 ? void 0 : persona.name) || '',\n      content: interpretation,\n      messages: []\n    });\n\n    // ConversationSidebar 펼치기 및 해석 탭 선택\n    setIsConversationSidebarCollapsed(false);\n    setSelectedConversationItem('interpretation');\n  };\n\n  // 해석 채팅 메시지 전송 핸들러\n  const handleInterpretationMessage = async message => {\n    if (!currentInterpretation) return false;\n\n    // 사용자 메시지 추가\n    const userMessage = {\n      role: 'user',\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n    setCurrentInterpretation(prev => prev ? {\n      ...prev,\n      messages: [...prev.messages, userMessage]\n    } : null);\n\n    // 가짜 응답 생성 (실제로는 백엔드 API 호출)\n    setTimeout(() => {\n      const assistantMessage = {\n        role: 'assistant',\n        content: `${currentInterpretation.personaName}의 관점에서 답변드리겠습니다.\\n\\n당신의 질문 \"${message}\"에 대해 더 깊이 탐구해보면, 이는 앞서 제시한 해석과도 밀접한 연관이 있습니다. 특히 심리적 역동 측면에서 보면, 이러한 의문은 자연스러운 성찰 과정의 일부로 볼 수 있습니다.`,\n        timestamp: new Date().toISOString()\n      };\n      setCurrentInterpretation(prev => prev ? {\n        ...prev,\n        messages: [...prev.messages, assistantMessage]\n      } : null);\n    }, 1500);\n    return true;\n  };\n\n  // 페르소나 사이드바 토글 - 두 사이드바 모두 제어\n  const togglePersonaSidebar = () => {\n    const newCollapsedState = !isPersonaSidebarCollapsed;\n    setIsPersonaSidebarCollapsed(newCollapsedState);\n\n    // 페르소나 사이드바를 접을 때는 대화 목록 사이드바도 함께 접기\n    if (newCollapsedState) {\n      setIsConversationSidebarCollapsed(true);\n    } else {\n      // 페르소나 사이드바를 펼칠 때는 대화 목록 사이드바도 함께 펼치기\n      setIsConversationSidebarCollapsed(false);\n    }\n  };\n\n  // 대화 목록 사이드바 토글 - 자기 자신만 제어\n  const toggleConversationSidebar = () => {\n    setIsConversationSidebarCollapsed(!isConversationSidebarCollapsed);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PersonaSidebar, {\n        selectedItem: selectedPersonaItem,\n        onSelectItem: handleSelectPersonaItem,\n        isCollapsed: isPersonaSidebarCollapsed,\n        onToggle: togglePersonaSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConversationSidebar, {\n        selectedItem: selectedConversationItem,\n        onSelectItem: handleSelectConversationItem,\n        isCollapsed: isConversationSidebarCollapsed,\n        onToggle: toggleConversationSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        selectedConversation: selectedConversation,\n        conversations: conversations,\n        personas: personas,\n        globalMessages: globalMessages,\n        isLoading: isLoading,\n        error: error,\n        onSendInitialMessage: sendInitialMessage,\n        onContinueConversation: continueConversation,\n        onClearError: clearError,\n        selectedPersonaItem: selectedPersonaItem,\n        onSelectPersona: selectPersona\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"YPNo3dtOUFDI5J5vypcxV1te0GY=\", false, function () {\n  return [useChat];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useChat","ConversationSidebar","PersonaSidebar","ChatArea","GlobalStyle","AppContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isPersonaSidebarCollapsed","setIsPersonaSidebarCollapsed","isConversationSidebarCollapsed","setIsConversationSidebarCollapsed","selectedPersonaItem","setSelectedPersonaItem","selectedConversationItem","setSelectedConversationItem","currentInterpretation","setCurrentInterpretation","personas","globalMessages","conversations","selectedConversation","selectedPersona","isLoading","error","sendInitialMessage","continueConversation","selectConversation","selectPersona","clearError","handleSelectPersonaItem","itemId","console","log","handleSelectConversationItem","handleInterpretationComplete","personaId","interpretation","persona","personaName","name","content","messages","handleInterpretationMessage","message","userMessage","role","timestamp","Date","toISOString","prev","setTimeout","assistantMessage","togglePersonaSidebar","newCollapsedState","toggleConversationSidebar","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedItem","onSelectItem","isCollapsed","onToggle","onSendInitialMessage","onContinueConversation","onClearError","onSelectPersona","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useChat } from './hooks/useChat';\r\nimport ConversationSidebar from './components/ConversationSidebar';\r\nimport PersonaSidebar from './components/PersonaSidebar';\r\nimport ChatArea from './components/ChatArea';\r\nimport { GlobalStyle, AppContainer } from './styles/GlobalStyle';\r\n\r\nconst App: React.FC = () => {\r\n  const [isPersonaSidebarCollapsed, setIsPersonaSidebarCollapsed] = useState(false);\r\n  const [isConversationSidebarCollapsed, setIsConversationSidebarCollapsed] = useState(false);\r\n  const [selectedPersonaItem, setSelectedPersonaItem] = useState<string | null>(null);\r\n  const [selectedConversationItem, setSelectedConversationItem] = useState<string | null>(null);\r\n  \r\n  // 해석 관련 상태\r\n  const [currentInterpretation, setCurrentInterpretation] = useState<{\r\n    personaId: string;\r\n    personaName: string;\r\n    content: string;\r\n    messages: Array<{\r\n      role: 'user' | 'assistant';\r\n      content: string;\r\n      timestamp: string;\r\n    }>;\r\n  } | null>(null);\r\n\r\n  const {\r\n    // State\r\n    personas,\r\n    globalMessages,\r\n    conversations,\r\n    selectedConversation,\r\n    selectedPersona,\r\n    isLoading,\r\n    error,\r\n\r\n    // Actions\r\n    sendInitialMessage,\r\n    continueConversation,\r\n    selectConversation,\r\n    selectPersona,\r\n    clearError,\r\n  } = useChat();\r\n\r\n  // 페르소나 메뉴 아이템 선택 핸들러\r\n  const handleSelectPersonaItem = (itemId: string | null) => {\r\n    setSelectedPersonaItem(itemId);\r\n    \r\n    // 훈습을 선택했을 때 ConversationSidebar 접기\r\n    if (itemId === 'training') {\r\n      setIsConversationSidebarCollapsed(true);\r\n      setCurrentInterpretation(null); // 기존 해석 초기화\r\n    } else {\r\n      setIsConversationSidebarCollapsed(false);\r\n    }\r\n    \r\n    // 각 메뉴 아이템에 따른 로직을 여기에 추가할 수 있습니다\r\n    console.log('Selected persona item:', itemId);\r\n  };\r\n\r\n  // 대화 메뉴 아이템 선택 핸들러\r\n  const handleSelectConversationItem = (itemId: string | null) => {\r\n    setSelectedConversationItem(itemId);\r\n    // 각 메뉴 아이템에 따른 로직을 여기에 추가할 수 있습니다\r\n    console.log('Selected conversation item:', itemId);\r\n  };\r\n\r\n  // 해석 완료 핸들러\r\n  const handleInterpretationComplete = (personaId: string, interpretation: string) => {\r\n    const persona = personas[personaId];\r\n    setCurrentInterpretation({\r\n      personaId,\r\n      personaName: persona?.name || '',\r\n      content: interpretation,\r\n      messages: [],\r\n    });\r\n    \r\n    // ConversationSidebar 펼치기 및 해석 탭 선택\r\n    setIsConversationSidebarCollapsed(false);\r\n    setSelectedConversationItem('interpretation');\r\n  };\r\n\r\n  // 해석 채팅 메시지 전송 핸들러\r\n  const handleInterpretationMessage = async (message: string): Promise<boolean> => {\r\n    if (!currentInterpretation) return false;\r\n\r\n    // 사용자 메시지 추가\r\n    const userMessage = {\r\n      role: 'user' as const,\r\n      content: message,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    setCurrentInterpretation(prev => prev ? {\r\n      ...prev,\r\n      messages: [...prev.messages, userMessage],\r\n    } : null);\r\n\r\n    // 가짜 응답 생성 (실제로는 백엔드 API 호출)\r\n    setTimeout(() => {\r\n      const assistantMessage = {\r\n        role: 'assistant' as const,\r\n        content: `${currentInterpretation.personaName}의 관점에서 답변드리겠습니다.\\n\\n당신의 질문 \"${message}\"에 대해 더 깊이 탐구해보면, 이는 앞서 제시한 해석과도 밀접한 연관이 있습니다. 특히 심리적 역동 측면에서 보면, 이러한 의문은 자연스러운 성찰 과정의 일부로 볼 수 있습니다.`,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      setCurrentInterpretation(prev => prev ? {\r\n        ...prev,\r\n        messages: [...prev.messages, assistantMessage],\r\n      } : null);\r\n    }, 1500);\r\n\r\n    return true;\r\n  };\r\n\r\n  // 페르소나 사이드바 토글 - 두 사이드바 모두 제어\r\n  const togglePersonaSidebar = () => {\r\n    const newCollapsedState = !isPersonaSidebarCollapsed;\r\n    setIsPersonaSidebarCollapsed(newCollapsedState);\r\n    \r\n    // 페르소나 사이드바를 접을 때는 대화 목록 사이드바도 함께 접기\r\n    if (newCollapsedState) {\r\n      setIsConversationSidebarCollapsed(true);\r\n    } else {\r\n      // 페르소나 사이드바를 펼칠 때는 대화 목록 사이드바도 함께 펼치기\r\n      setIsConversationSidebarCollapsed(false);\r\n    }\r\n  };\r\n\r\n  // 대화 목록 사이드바 토글 - 자기 자신만 제어\r\n  const toggleConversationSidebar = () => {\r\n    setIsConversationSidebarCollapsed(!isConversationSidebarCollapsed);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AppContainer>\r\n        {/* 왼쪽 첫 번째 사이드바 - 페르소나 메뉴 */}\r\n        <PersonaSidebar\r\n          selectedItem={selectedPersonaItem}\r\n          onSelectItem={handleSelectPersonaItem}\r\n          isCollapsed={isPersonaSidebarCollapsed}\r\n          onToggle={togglePersonaSidebar}\r\n        />\r\n\r\n        {/* 왼쪽 두 번째 사이드바 - 대화 메뉴 */}\r\n        <ConversationSidebar\r\n          selectedItem={selectedConversationItem}\r\n          onSelectItem={handleSelectConversationItem}\r\n          isCollapsed={isConversationSidebarCollapsed}\r\n          onToggle={toggleConversationSidebar}\r\n        />\r\n\r\n        {/* 메인 채팅 영역 */}\r\n        <ChatArea\r\n          selectedConversation={selectedConversation}\r\n          conversations={conversations}\r\n          personas={personas}\r\n          globalMessages={globalMessages}\r\n          isLoading={isLoading}\r\n          error={error}\r\n          onSendInitialMessage={sendInitialMessage}\r\n          onContinueConversation={continueConversation}\r\n          onClearError={clearError}\r\n          selectedPersonaItem={selectedPersonaItem}\r\n          onSelectPersona={selectPersona}\r\n        />\r\n      </AppContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}