{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\ConversationSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sidebar, SidebarHeader, SidebarTitle, SidebarContent, SidebarMenuContent, SidebarToggleButton } from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 새로운 스타일 컴포넌트들\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n_c = AccordionContainer;\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n_c2 = AccordionItem;\nconst AccordionHeader = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.isSelected ? '600' : '500'};\n  border-radius: ${props => props.isSelected ? '8px' : '0'};\n  margin: ${props => props.isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n_c3 = AccordionHeader;\nconst AccordionIcon = styled.span`\n  transform: rotate(${props => props.isExpanded ? '90deg' : '0deg'});\n  transition: transform 0.2s ease;\n  font-size: 12px;\n`;\nconst ThreadsList = styled.div`\n  max-height: ${props => props.isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n_c4 = ThreadsList;\nconst ThreadItem = styled.div`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n_c5 = ThreadItem;\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n_c6 = ThreadItemContent;\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n_c7 = DeleteThreadButton;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n_c8 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n_c9 = ThreadTime;\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [threads, setThreads] = useState({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [selectedThreadId, setSelectedThreadId] = useState(null);\n  const menuItems = [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n\n  // 스레드 데이터 로드\n  useEffect(() => {\n    const loadThreads = async () => {\n      if (!selectedPersonaId) {\n        setThreads({\n          interpretation: [],\n          proceed: [],\n          sentence: []\n        });\n        return;\n      }\n      try {\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (response.data) {\n          const threadsByType = {\n            interpretation: response.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: response.data.filter(t => t.thread_type === 'proceed'),\n            sentence: response.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n\n          // 스레드가 있으면 자동으로 첫 번째 스레드 확장\n          ['interpretation', 'proceed', 'sentence'].forEach(type => {\n            if (threadsByType[type].length > 0) {\n              setExpandedItems(prev => new Set(prev).add(type));\n            }\n          });\n        }\n      } catch (error) {\n        console.error('스레드 로드 실패:', error);\n        // 에러 시 빈 상태로 설정\n        setThreads({\n          interpretation: [],\n          proceed: [],\n          sentence: []\n        });\n      }\n    };\n    loadThreads();\n  }, [selectedPersonaId]);\n  const handleAccordionToggle = itemId => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n\n    // 아코디언 토글 시에만 메인 아이템 선택 (스레드가 없는 경우에만)\n    const itemThreads = threads[itemId] || [];\n    if (itemThreads.length === 0) {\n      onSelectItem(itemId);\n    }\n  };\n  const handleThreadSelect = (threadId, itemType) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleDeleteThread = async (threadId, e) => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      // TODO: 백엔드 API 호출로 스레드 삭제\n      console.log('스레드 삭제:', threadId);\n      // 임시로 로컬 상태에서 제거\n      const updatedThreads = {\n        ...threads\n      };\n      Object.keys(updatedThreads).forEach(key => {\n        updatedThreads[key] = updatedThreads[key].filter(t => t.id !== threadId);\n      });\n      setThreads(updatedThreads);\n\n      // 선택된 스레드가 삭제된 경우 선택 해제\n      if (selectedThreadId === threadId) {\n        setSelectedThreadId(null);\n      }\n    }\n  };\n  const renderThreads = itemId => {\n    const itemThreads = threads[itemId] || [];\n    const isExpanded = expandedItems.has(itemId);\n    return /*#__PURE__*/_jsxDEV(ThreadsList, {\n      isExpanded: isExpanded,\n      children: [itemThreads.map((thread, index) => /*#__PURE__*/_jsxDEV(ThreadItem, {\n        isSelected: selectedThreadId === thread.id,\n        onClick: () => handleThreadSelect(thread.id, itemId),\n        children: [/*#__PURE__*/_jsxDEV(ThreadItemContent, {\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: [itemId === 'interpretation' && `해석 #${index + 1}`, itemId === 'proceed' && `나아가기 #${index + 1}`, itemId === 'sentence' && `문장 #${index + 1}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteThreadButton, {\n          onClick: e => handleDeleteThread(thread.id, e),\n          title: \"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)), itemThreads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px 32px',\n          fontSize: '14px',\n          color: '#999'\n        },\n        children: \"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"250px\",\n    isCollapsed: isCollapsed,\n    variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle,\n      children: isCollapsed ? '▷' : '◁'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarHeader, {\n      isCollapsed: isCollapsed,\n      children: selectedPersonaName && /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        isCollapsed: isCollapsed,\n        children: selectedPersonaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      isCollapsed: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarMenuContent, {\n        variant: \"conversation\",\n        children: /*#__PURE__*/_jsxDEV(AccordionContainer, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n              isSelected: selectedItem === item.id,\n              isExpanded: expandedItems.has(item.id),\n              onClick: () => handleAccordionToggle(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), item.id !== 'interaction_history' && renderThreads(item.id)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationSidebar, \"+626fDynEIqIoU31nv5daz00KcE=\");\n_c0 = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"AccordionContainer\");\n$RefreshReg$(_c2, \"AccordionItem\");\n$RefreshReg$(_c3, \"AccordionHeader\");\n$RefreshReg$(_c4, \"ThreadsList\");\n$RefreshReg$(_c5, \"ThreadItem\");\n$RefreshReg$(_c6, \"ThreadItemContent\");\n$RefreshReg$(_c7, \"DeleteThreadButton\");\n$RefreshReg$(_c8, \"ThreadTitle\");\n$RefreshReg$(_c9, \"ThreadTime\");\n$RefreshReg$(_c0, \"ConversationSidebar\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxDEV","_jsxDEV","AccordionContainer","div","_c","AccordionItem","_c2","AccordionHeader","props","isSelected","_c3","AccordionIcon","span","isExpanded","ThreadsList","_c4","ThreadItem","_c5","ThreadItemContent","_c6","DeleteThreadButton","button","_c7","ThreadTitle","_c8","ThreadTime","_c9","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","_s","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","selectedThreadId","setSelectedThreadId","menuItems","id","name","loadThreads","response","getPersonaThreads","data","threadsByType","filter","t","thread_type","forEach","type","length","prev","add","error","console","handleAccordionToggle","itemId","newExpanded","has","delete","itemThreads","handleThreadSelect","threadId","itemType","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","handleDeleteThread","e","stopPropagation","window","confirm","log","updatedThreads","Object","keys","key","renderThreads","children","map","thread","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","created_at","messages","title","style","padding","fontSize","color","width","variant","item","_c0","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n}\n\n// 새로운 스타일 컴포넌트들\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ isSelected: boolean; isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.isSelected ? '600' : '500'};\n  border-radius: ${props => props.isSelected ? '8px' : '0'};\n  margin: ${props => props.isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst AccordionIcon = styled.span<{ isExpanded: boolean }>`\n  transform: rotate(${props => props.isExpanded ? '90deg' : '0deg'});\n  transition: transform 0.2s ease;\n  font-size: 12px;\n`;\n\nconst ThreadsList = styled.div<{ isExpanded: boolean }>`\n  max-height: ${props => props.isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst ThreadItem = styled.div<{ isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n\n  const menuItems = [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  // 스레드 데이터 로드\n  useEffect(() => {\n    const loadThreads = async () => {\n      if (!selectedPersonaId) {\n        setThreads({\n          interpretation: [],\n          proceed: [],\n          sentence: []\n        });\n        return;\n      }\n\n      try {\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (response.data) {\n          const threadsByType = {\n            interpretation: response.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: response.data.filter(t => t.thread_type === 'proceed'),\n            sentence: response.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n          \n          // 스레드가 있으면 자동으로 첫 번째 스레드 확장\n          ['interpretation', 'proceed', 'sentence'].forEach(type => {\n            if (threadsByType[type as keyof typeof threadsByType].length > 0) {\n              setExpandedItems(prev => new Set(prev).add(type));\n            }\n          });\n        }\n      } catch (error) {\n        console.error('스레드 로드 실패:', error);\n        // 에러 시 빈 상태로 설정\n        setThreads({\n          interpretation: [],\n          proceed: [],\n          sentence: []\n        });\n      }\n    };\n\n    loadThreads();\n  }, [selectedPersonaId]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    // 아코디언 토글 시에만 메인 아이템 선택 (스레드가 없는 경우에만)\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    if (itemThreads.length === 0) {\n      onSelectItem(itemId);\n    }\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      // TODO: 백엔드 API 호출로 스레드 삭제\n      console.log('스레드 삭제:', threadId);\n      // 임시로 로컬 상태에서 제거\n      const updatedThreads = { ...threads };\n      Object.keys(updatedThreads).forEach(key => {\n        updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter(t => t.id !== threadId);\n      });\n      setThreads(updatedThreads);\n      \n      // 선택된 스레드가 삭제된 경우 선택 해제\n      if (selectedThreadId === threadId) {\n        setSelectedThreadId(null);\n      }\n    }\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList isExpanded={isExpanded}>\n        {itemThreads.map((thread, index) => (\n          <ThreadItem\n            key={thread.id}\n            isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${index + 1}`}\n                {itemId === 'proceed' && `나아가기 #${index + 1}`}\n                {itemId === 'sentence' && `문장 #${index + 1}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  return (\n    <Sidebar width=\"250px\" isCollapsed={isCollapsed} variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n          {isCollapsed ? '▷' : '◁'}\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader isCollapsed={isCollapsed}>\n        {selectedPersonaName && (\n          <SidebarTitle isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        )}\n      </SidebarHeader>\n\n      <SidebarContent isCollapsed={isCollapsed}>\n        <SidebarMenuContent variant=\"conversation\">\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                  isSelected={selectedItem === item.id}\n                  isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                  <span>\n                    {item.name}\n                  </span>\n                </AccordionHeader>\n                \n                {item.id !== 'interaction_history' && renderThreads(item.id)}\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}