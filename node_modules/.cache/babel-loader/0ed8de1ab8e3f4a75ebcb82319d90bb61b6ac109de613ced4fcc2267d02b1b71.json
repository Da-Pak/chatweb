{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\MessageInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { InputContainer, InputWrapper, MessageInput as StyledMessageInput, SendButton } from '../styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageInput = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  onSendMessage,\n  disabled = false,\n  placeholder = \"메시지를 입력하세요...\",\n  onToggleSentenceMode,\n  isSentenceModeActive = false\n}, ref) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const textareaRef = useRef(null);\n\n  // ref를 통해 외부에서 텍스트 삽입 가능하도록 함\n  useImperativeHandle(ref, () => ({\n    insertText: text => {\n      setMessage(prev => prev + text);\n      // 텍스트 삽입 후 높이 조절\n      setTimeout(() => {\n        if (textareaRef.current) {\n          textareaRef.current.style.height = 'auto';\n          textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n          textareaRef.current.focus();\n        }\n      }, 0);\n    }\n  }));\n  const handleSubmit = async () => {\n    if (!message.trim() || disabled || isSending) return;\n    setIsSending(true);\n    const success = await onSendMessage(message.trim());\n    if (success) {\n      setMessage('');\n      // 텍스트영역 높이 초기화\n      if (textareaRef.current) {\n        textareaRef.current.style.height = 'auto';\n      }\n    }\n    setIsSending(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n  const handleChange = e => {\n    setMessage(e.target.value);\n\n    // 자동 높이 조절\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  };\n\n  // 컴포넌트가 마운트될 때 포커스\n  useEffect(() => {\n    if (textareaRef.current && !disabled) {\n      textareaRef.current.focus();\n    }\n  }, [disabled]);\n  const isButtonDisabled = disabled || isSending || !message.trim();\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(StyledMessageInput, {\n        ref: textareaRef,\n        value: message,\n        onChange: handleChange,\n        onKeyPress: handleKeyPress,\n        placeholder: placeholder,\n        disabled: disabled || isSending,\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n        onClick: handleSubmit,\n        disabled: isButtonDisabled,\n        title: isSending ? '전송 중...' : '전송',\n        children: isSending ? '⏳' : '↑'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}, \"eqla1kB5wO2kHtNWzIQrwU649+o=\")), \"eqla1kB5wO2kHtNWzIQrwU649+o=\");\n_c2 = MessageInput;\nexport default MessageInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageInput$forwardRef\");\n$RefreshReg$(_c2, \"MessageInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useImperativeHandle","forwardRef","InputContainer","InputWrapper","MessageInput","StyledMessageInput","SendButton","jsxDEV","_jsxDEV","_s","_c","onSendMessage","disabled","placeholder","onToggleSentenceMode","isSentenceModeActive","ref","message","setMessage","isSending","setIsSending","textareaRef","insertText","text","prev","setTimeout","current","style","height","scrollHeight","focus","handleSubmit","trim","success","handleKeyPress","e","key","shiftKey","preventDefault","handleChange","target","value","isButtonDisabled","children","onChange","onKeyPress","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","_c2","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/MessageInput.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport {\r\n  InputContainer,\r\n  InputWrapper,\r\n  MessageInputContainer,\r\n  MessageInput as StyledMessageInput,\r\n  SendButton,\r\n  SentenceModeButton,\r\n} from '../styles/GlobalStyle';\r\n\r\ninterface MessageInputProps {\r\n  onSendMessage: (message: string) => Promise<boolean>;\r\n  disabled?: boolean;\r\n  placeholder?: string;\r\n  onToggleSentenceMode?: () => void;\r\n  isSentenceModeActive?: boolean;\r\n}\r\n\r\nexport interface MessageInputRef {\r\n  insertText: (text: string) => void;\r\n}\r\n\r\nconst MessageInput = forwardRef<MessageInputRef, MessageInputProps>(({\r\n  onSendMessage,\r\n  disabled = false,\r\n  placeholder = \"메시지를 입력하세요...\",\r\n  onToggleSentenceMode,\r\n  isSentenceModeActive = false,\r\n}, ref) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  // ref를 통해 외부에서 텍스트 삽입 가능하도록 함\r\n  useImperativeHandle(ref, () => ({\r\n    insertText: (text: string) => {\r\n      setMessage(prev => prev + text);\r\n      // 텍스트 삽입 후 높이 조절\r\n      setTimeout(() => {\r\n        if (textareaRef.current) {\r\n          textareaRef.current.style.height = 'auto';\r\n          textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n          textareaRef.current.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n  }));\r\n\r\n  const handleSubmit = async () => {\r\n    if (!message.trim() || disabled || isSending) return;\r\n\r\n    setIsSending(true);\r\n    const success = await onSendMessage(message.trim());\r\n    \r\n    if (success) {\r\n      setMessage('');\r\n      // 텍스트영역 높이 초기화\r\n      if (textareaRef.current) {\r\n        textareaRef.current.style.height = 'auto';\r\n      }\r\n    }\r\n    \r\n    setIsSending(false);\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setMessage(e.target.value);\r\n    \r\n    // 자동 높이 조절\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n    }\r\n  };\r\n\r\n  // 컴포넌트가 마운트될 때 포커스\r\n  useEffect(() => {\r\n    if (textareaRef.current && !disabled) {\r\n      textareaRef.current.focus();\r\n    }\r\n  }, [disabled]);\r\n\r\n  const isButtonDisabled = disabled || isSending || !message.trim();\r\n\r\n  return (\r\n    <InputContainer>\r\n      <InputWrapper>\r\n        <StyledMessageInput\r\n          ref={textareaRef}\r\n          value={message}\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder={placeholder}\r\n          disabled={disabled || isSending}\r\n          rows={1}\r\n        />\r\n        <SendButton\r\n          onClick={handleSubmit}\r\n          disabled={isButtonDisabled}\r\n          title={isSending ? '전송 중...' : '전송'}\r\n        >\r\n          {isSending ? '⏳' : '↑'}\r\n        </SendButton>\r\n      </InputWrapper>\r\n    </InputContainer>\r\n  );\r\n});\r\n\r\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}