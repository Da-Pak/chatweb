{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\shared\\\\components\\\\RecentInteractionsView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { chatApi } from '../api/chatApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  flex: 1;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c = Container;\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = Header;\nconst Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n`;\n_c3 = Title;\nconst NavigateButton = styled.button`\n  padding: 10px 20px;\n  background: linear-gradient(90deg, #ffffff 0%, #f0f0f0 100%);\n  border: 1px solid #ccc;\n  border-radius: 12px;\n  color: #333;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  \n  &:hover {\n    background: linear-gradient(90deg, #f8f8f8 0%, #e8e8e8 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c4 = NavigateButton;\nconst Content = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n`;\nconst ThreadList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n_c5 = ThreadList;\nconst ThreadItem = styled.div`\n  padding: 16px;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? '#f0f8ff' : 'white'};\n  border-color: ${props => props.$isSelected ? '#6c757d' : '#e0e0e0'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #f8f9fa;\n    border-color: #6c757d;\n    transform: translateY(-1px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c6 = ThreadItem;\nconst ThreadHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n`;\n_c7 = ThreadHeader;\nconst PersonaLabel = styled.span`\n  padding: 4px 8px;\n  background: #ffffff;\n  color: #000000;\n  border: 1px solid #000000;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 600;\n`;\n_c8 = PersonaLabel;\nconst ThreadTypeLabel = styled.span`\n  padding: 4px 8px;\n  background: #6c757d;\n  color: white;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 600;\n`;\n_c9 = ThreadTypeLabel;\nconst ThreadTitle = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n  line-height: 1.4;\n`;\n_c0 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #666;\n  opacity: 0.8;\n`;\n_c1 = ThreadTime;\nconst ThreadContent = styled.div`\n  flex: 1;\n  background: white;\n  padding: 20px;\n  overflow-y: auto;\n  border-left: 1px solid #e0e0e0;\n`;\n_c10 = ThreadContent;\nconst MessageContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n_c11 = MessageContainer;\nconst Message = styled.div`\n  margin-bottom: 20px;\n  padding: 16px 20px;\n  border-radius: ${props => props.$isUser ? '20px 20px 4px 20px' : '20px 20px 20px 4px'};\n  background: ${props => props.$isUser ? '#f0f8ff' : '#f8f9fa'};\n  color: #333;\n  line-height: 1.6;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  align-self: ${props => props.$isUser ? 'flex-end' : 'flex-start'};\n  max-width: 70%;\n  ${props => props.$isUser ? 'margin-left: auto;' : 'margin-right: auto;'}\n`;\n_c12 = Message;\nconst MessageInfo = styled.div`\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 8px;\n  text-align: ${props => props.$isUser ? 'right' : 'left'};\n`;\n_c13 = MessageInfo;\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 300px;\n  color: #666;\n  text-align: center;\n`;\n_c14 = EmptyState;\nconst LoadingState = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  color: #666;\n`;\n_c15 = LoadingState;\nconst SplitView = styled.div`\n  display: flex;\n  height: 100%;\n`;\n_c16 = SplitView;\nconst ThreadListContainer = styled.div`\n  width: 400px;\n  border-right: 1px solid #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\n_c17 = ThreadListContainer;\nconst ThreadListHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n  font-weight: 600;\n  color: #333;\n`;\n_c18 = ThreadListHeader;\nconst ThreadListContent = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n`;\n_c19 = ThreadListContent;\nconst RecentInteractionsView = ({\n  personas,\n  onSelectPersona,\n  onThreadSelect\n}) => {\n  _s();\n  const [allThreads, setAllThreads] = useState([]);\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadAllThreads = async () => {\n      setIsLoading(true);\n      try {\n        const allPersonaThreads = [];\n\n        // 모든 페르소나의 스레드 로드\n        for (const [personaId, persona] of Object.entries(personas)) {\n          try {\n            const response = await chatApi.getPersonaThreads(personaId);\n            if (response.data) {\n              const threadsWithPersonaInfo = response.data.map(thread => ({\n                ...thread,\n                persona_id: personaId,\n                persona_name: persona.name\n              }));\n              allPersonaThreads.push(...threadsWithPersonaInfo);\n            }\n          } catch (error) {\n            console.error(`페르소나 ${personaId} 스레드 로드 실패:`, error);\n          }\n        }\n\n        // 최신순으로 정렬\n        const sortedThreads = allPersonaThreads.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n        setAllThreads(sortedThreads);\n      } catch (error) {\n        console.error('전체 스레드 로드 실패:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (Object.keys(personas).length > 0) {\n      loadAllThreads();\n    }\n  }, [personas]);\n  const getThreadTypeLabel = type => {\n    switch (type) {\n      case 'interpretation':\n        return '해석';\n      case 'proceed':\n        return '나아가기';\n      case 'sentence':\n        return '문장';\n      default:\n        return type;\n    }\n  };\n  const getThreadTitle = thread => {\n    let content = '';\n    if (thread.messages && thread.messages.length > 0) {\n      content = thread.messages[0].content;\n    } else if (thread.content) {\n      content = thread.content;\n    }\n    if (content.length > 50) {\n      return content.substring(0, 50) + '...';\n    }\n    return content || '내용 없음';\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleThreadClick = thread => {\n    setSelectedThread(thread);\n  };\n  const handleNavigateToThread = () => {\n    if (selectedThread) {\n      onThreadSelect(selectedThread, selectedThread.persona_id);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(LoadingState, {\n        children: \"\\uCD5C\\uADFC \\uC0C1\\uD638\\uC791\\uC6A9\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uCD5C\\uADFC \\uC0C1\\uD638\\uC791\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), selectedThread && /*#__PURE__*/_jsxDEV(NavigateButton, {\n        onClick: handleNavigateToThread,\n        children: \"\\uD574\\uB2F9 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SplitView, {\n      children: [/*#__PURE__*/_jsxDEV(ThreadListContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ThreadListHeader, {\n          children: [\"\\uC804\\uCCB4 \\uC2A4\\uB808\\uB4DC (\", allThreads.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThreadListContent, {\n          children: allThreads.length > 0 ? /*#__PURE__*/_jsxDEV(ThreadList, {\n            children: allThreads.map(thread => /*#__PURE__*/_jsxDEV(ThreadItem, {\n              $isSelected: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.id) === thread.id,\n              onClick: () => handleThreadClick(thread),\n              children: [/*#__PURE__*/_jsxDEV(ThreadHeader, {\n                children: [/*#__PURE__*/_jsxDEV(PersonaLabel, {\n                  children: thread.persona_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ThreadTypeLabel, {\n                  children: getThreadTypeLabel(thread.thread_type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ThreadTitle, {\n                children: getThreadTitle(thread)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n                children: formatTime(thread.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)]\n            }, `${thread.persona_id}-${thread.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD6C8\\uC2B5\\uC5D0\\uC11C \\uD574\\uC11D, \\uB098\\uC544\\uAC00\\uAE30, \\uBB38\\uC7A5\\uC744 \\uC0DD\\uC131\\uD574\\uBCF4\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreadContent, {\n        children: selectedThread ? /*#__PURE__*/_jsxDEV(MessageContainer, {\n          children: selectedThread.messages && selectedThread.messages.length > 0 ? selectedThread.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MessageInfo, {\n              $isUser: message.role === 'user',\n              children: [message.role === 'user' ? '사용자' : selectedThread.persona_name, \" \\u2022 \", formatTime(message.timestamp)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              $isUser: message.role === 'user',\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(Message, {\n            $isUser: false,\n            children: selectedThread.content || '내용이 없습니다.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uC2A4\\uB808\\uB4DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC67C\\uCABD\\uC5D0\\uC11C \\uBCF4\\uACE0 \\uC2F6\\uC740 \\uB300\\uD654\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(RecentInteractionsView, \"SOQ1eCcnuQOoNvgA6ZpyDPPdG4s=\");\n_c20 = RecentInteractionsView;\nexport default RecentInteractionsView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NavigateButton\");\n$RefreshReg$(_c5, \"ThreadList\");\n$RefreshReg$(_c6, \"ThreadItem\");\n$RefreshReg$(_c7, \"ThreadHeader\");\n$RefreshReg$(_c8, \"PersonaLabel\");\n$RefreshReg$(_c9, \"ThreadTypeLabel\");\n$RefreshReg$(_c0, \"ThreadTitle\");\n$RefreshReg$(_c1, \"ThreadTime\");\n$RefreshReg$(_c10, \"ThreadContent\");\n$RefreshReg$(_c11, \"MessageContainer\");\n$RefreshReg$(_c12, \"Message\");\n$RefreshReg$(_c13, \"MessageInfo\");\n$RefreshReg$(_c14, \"EmptyState\");\n$RefreshReg$(_c15, \"LoadingState\");\n$RefreshReg$(_c16, \"SplitView\");\n$RefreshReg$(_c17, \"ThreadListContainer\");\n$RefreshReg$(_c18, \"ThreadListHeader\");\n$RefreshReg$(_c19, \"ThreadListContent\");\n$RefreshReg$(_c20, \"RecentInteractionsView\");","map":{"version":3,"names":["React","useState","useEffect","styled","chatApi","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","Title","h2","_c3","NavigateButton","button","_c4","Content","ThreadList","_c5","ThreadItem","props","$isSelected","_c6","ThreadHeader","_c7","PersonaLabel","span","_c8","ThreadTypeLabel","_c9","ThreadTitle","_c0","ThreadTime","_c1","ThreadContent","_c10","MessageContainer","_c11","Message","$isUser","_c12","MessageInfo","_c13","EmptyState","_c14","LoadingState","_c15","SplitView","_c16","ThreadListContainer","_c17","ThreadListHeader","_c18","ThreadListContent","_c19","RecentInteractionsView","personas","onSelectPersona","onThreadSelect","_s","allThreads","setAllThreads","selectedThread","setSelectedThread","isLoading","setIsLoading","loadAllThreads","allPersonaThreads","personaId","persona","Object","entries","response","getPersonaThreads","data","threadsWithPersonaInfo","map","thread","persona_id","persona_name","name","push","error","console","sortedThreads","sort","a","b","Date","created_at","getTime","keys","length","getThreadTypeLabel","type","getThreadTitle","content","messages","substring","formatTime","timestamp","date","toLocaleString","month","day","hour","minute","handleThreadClick","handleNavigateToThread","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","thread_type","message","index","role","_c20","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/RecentInteractionsView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, Persona } from '../types';\n\nconst Container = styled.div`\n  flex: 1;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n`;\n\nconst NavigateButton = styled.button`\n  padding: 10px 20px;\n  background: linear-gradient(90deg, #ffffff 0%, #f0f0f0 100%);\n  border: 1px solid #ccc;\n  border-radius: 12px;\n  color: #333;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  \n  &:hover {\n    background: linear-gradient(90deg, #f8f8f8 0%, #e8e8e8 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n`;\n\nconst ThreadList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 16px;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? '#f0f8ff' : 'white'};\n  border-color: ${props => props.$isSelected ? '#6c757d' : '#e0e0e0'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #f8f9fa;\n    border-color: #6c757d;\n    transform: translateY(-1px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ThreadHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n`;\n\nconst PersonaLabel = styled.span`\n  padding: 4px 8px;\n  background: #ffffff;\n  color: #000000;\n  border: 1px solid #000000;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nconst ThreadTypeLabel = styled.span`\n  padding: 4px 8px;\n  background: #6c757d;\n  color: white;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nconst ThreadTitle = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n  line-height: 1.4;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #666;\n  opacity: 0.8;\n`;\n\nconst ThreadContent = styled.div`\n  flex: 1;\n  background: white;\n  padding: 20px;\n  overflow-y: auto;\n  border-left: 1px solid #e0e0e0;\n`;\n\nconst MessageContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst Message = styled.div<{ $isUser: boolean }>`\n  margin-bottom: 20px;\n  padding: 16px 20px;\n  border-radius: ${props => props.$isUser ? '20px 20px 4px 20px' : '20px 20px 20px 4px'};\n  background: ${props => props.$isUser ? '#f0f8ff' : '#f8f9fa'};\n  color: #333;\n  line-height: 1.6;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  align-self: ${props => props.$isUser ? 'flex-end' : 'flex-start'};\n  max-width: 70%;\n  ${props => props.$isUser ? 'margin-left: auto;' : 'margin-right: auto;'}\n`;\n\nconst MessageInfo = styled.div<{ $isUser: boolean }>`\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 8px;\n  text-align: ${props => props.$isUser ? 'right' : 'left'};\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 300px;\n  color: #666;\n  text-align: center;\n`;\n\nconst LoadingState = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  color: #666;\n`;\n\nconst SplitView = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nconst ThreadListContainer = styled.div`\n  width: 400px;\n  border-right: 1px solid #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ThreadListHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ThreadListContent = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n`;\n\ninterface RecentInteractionsViewProps {\n  personas: Record<string, Persona>;\n  onSelectPersona: (personaId: string) => void;\n  onThreadSelect: (thread: TrainingThread, personaId: string) => void;\n}\n\nconst RecentInteractionsView: React.FC<RecentInteractionsViewProps> = ({\n  personas,\n  onSelectPersona,\n  onThreadSelect,\n}) => {\n  const [allThreads, setAllThreads] = useState<Array<TrainingThread & { persona_id: string; persona_name: string }>>([]);\n  const [selectedThread, setSelectedThread] = useState<(TrainingThread & { persona_id: string; persona_name: string }) | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadAllThreads = async () => {\n      setIsLoading(true);\n      try {\n        const allPersonaThreads: Array<TrainingThread & { persona_id: string; persona_name: string }> = [];\n        \n        // 모든 페르소나의 스레드 로드\n        for (const [personaId, persona] of Object.entries(personas)) {\n          try {\n            const response = await chatApi.getPersonaThreads(personaId);\n            if (response.data) {\n              const threadsWithPersonaInfo = response.data.map((thread: TrainingThread) => ({\n                ...thread,\n                persona_id: personaId,\n                persona_name: persona.name,\n              }));\n              allPersonaThreads.push(...threadsWithPersonaInfo);\n            }\n          } catch (error) {\n            console.error(`페르소나 ${personaId} 스레드 로드 실패:`, error);\n          }\n        }\n        \n        // 최신순으로 정렬\n        const sortedThreads = allPersonaThreads.sort((a, b) => \n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n        );\n        \n        setAllThreads(sortedThreads);\n      } catch (error) {\n        console.error('전체 스레드 로드 실패:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (Object.keys(personas).length > 0) {\n      loadAllThreads();\n    }\n  }, [personas]);\n\n  const getThreadTypeLabel = (type: string) => {\n    switch (type) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      default: return type;\n    }\n  };\n\n  const getThreadTitle = (thread: TrainingThread) => {\n    let content = '';\n    \n    if (thread.messages && thread.messages.length > 0) {\n      content = thread.messages[0].content;\n    } else if (thread.content) {\n      content = thread.content;\n    }\n    \n    if (content.length > 50) {\n      return content.substring(0, 50) + '...';\n    }\n    return content || '내용 없음';\n  };\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const handleThreadClick = (thread: TrainingThread & { persona_id: string; persona_name: string }) => {\n    setSelectedThread(thread);\n  };\n\n  const handleNavigateToThread = () => {\n    if (selectedThread) {\n      onThreadSelect(selectedThread, selectedThread.persona_id);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Container>\n        <LoadingState>\n          최근 상호작용을 불러오는 중...\n        </LoadingState>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Header>\n        <Title>최근 상호작용</Title>\n        {selectedThread && (\n          <NavigateButton onClick={handleNavigateToThread}>\n            해당 페이지로 이동\n          </NavigateButton>\n        )}\n      </Header>\n      \n      <SplitView>\n        <ThreadListContainer>\n          <ThreadListHeader>\n            전체 스레드 ({allThreads.length})\n          </ThreadListHeader>\n          <ThreadListContent>\n            {allThreads.length > 0 ? (\n              <ThreadList>\n                {allThreads.map((thread) => (\n                  <ThreadItem\n                    key={`${thread.persona_id}-${thread.id}`}\n                    $isSelected={selectedThread?.id === thread.id}\n                    onClick={() => handleThreadClick(thread)}\n                  >\n                    <ThreadHeader>\n                      <PersonaLabel>{thread.persona_name}</PersonaLabel>\n                      <ThreadTypeLabel>{getThreadTypeLabel(thread.thread_type)}</ThreadTypeLabel>\n                    </ThreadHeader>\n                    <ThreadTitle>{getThreadTitle(thread)}</ThreadTitle>\n                    <ThreadTime>{formatTime(thread.created_at)}</ThreadTime>\n                  </ThreadItem>\n                ))}\n              </ThreadList>\n            ) : (\n              <EmptyState>\n                <h3>상호작용 기록이 없습니다</h3>\n                <p>훈습에서 해석, 나아가기, 문장을 생성해보세요.</p>\n              </EmptyState>\n            )}\n          </ThreadListContent>\n        </ThreadListContainer>\n        \n        <ThreadContent>\n          {selectedThread ? (\n            <MessageContainer>\n              {selectedThread.messages && selectedThread.messages.length > 0 ? (\n                selectedThread.messages.map((message, index) => (\n                  <div key={index}>\n                    <MessageInfo $isUser={message.role === 'user'}>\n                      {message.role === 'user' ? '사용자' : selectedThread.persona_name} • {formatTime(message.timestamp)}\n                    </MessageInfo>\n                    <Message $isUser={message.role === 'user'}>\n                      {message.content}\n                    </Message>\n                  </div>\n                ))\n              ) : (\n                <Message $isUser={false}>\n                  {selectedThread.content || '내용이 없습니다.'}\n                </Message>\n              )}\n            </MessageContainer>\n          ) : (\n            <EmptyState>\n              <h3>스레드를 선택해주세요</h3>\n              <p>왼쪽에서 보고 싶은 대화를 클릭하세요.</p>\n            </EmptyState>\n          )}\n        </ThreadContent>\n      </SplitView>\n    </Container>\n  );\n};\n\nexport default RecentInteractionsView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}