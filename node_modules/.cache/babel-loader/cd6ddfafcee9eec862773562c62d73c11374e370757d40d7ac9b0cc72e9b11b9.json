{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\training\\\\components\\\\SelectableSentence.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentenceContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  gap: ${props => props.$hasSelector ? '8px' : '0'};\n  margin: 4px 0;\n  cursor: ${props => props.$isHoverable ? 'pointer' : 'default'};\n  padding: 2px 4px;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  ㅇㅇ\n  ${props => props.$isHoverable && `\n    &:hover {\n      background-color: #f0f8ff;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n  `}\n`;\n_c = SentenceContainer;\nconst SelectButton = styled.button`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  border: 2px solid #ccc;\n  background: ${props => props.$isSelected ? '#333' : 'white'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n  margin-top: 2px;\n  \n  &:hover {\n    border-color: #666;\n  }\n  \n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\n_c2 = SelectButton;\nconst SentenceText = styled.span`\n  background: ${props => props.$isHighlighted ? '#ffff00' : 'transparent'};\n  padding: ${props => props.$isHighlighted ? '2px 4px' : '0'};\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  line-height: 1.6;\n  flex: 1;\n  cursor: ${props => props.$isClickable ? 'pointer' : 'default'};\n  \n  ${props => props.$isClickable && `\n    &:hover {\n      background: ${props.$isHighlighted ? '#ffff99' : '#f0f8ff'};\n    }\n  `}\n`;\n_c3 = SentenceText;\nconst MemoBox = styled.div`\n  position: absolute;\n  left: calc(100% + 20px);\n  top: 0;\n  width: 180px;\n  background: ${props => props.$isEditing ? 'white' : '#f5f5f5'};\n  border: 2px solid ${props => props.$isEditing ? '#ddd' : '#ccc'};\n  border-radius: 8px;\n  padding: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  transition: all 0.2s ease;\n  \n  /* 화면 오른쪽을 벗어나지 않도록 조정 */\n  @media (max-width: 768px) {\n    left: auto;\n    right: -10px;\n    width: 150px;\n  }\n`;\n_c4 = MemoBox;\nconst MemoTextarea = styled.textarea`\n  width: calc(100% - 10px);\n  height: 60px;\n  border: none;\n  outline: none;\n  resize: none;\n  font-size: 12px;\n  line-height: 1.4;\n  padding: 4px;\n  background: ${props => props.$isEditing ? 'white' : '#f5f5f5'};\n  color: ${props => props.$isEditing ? '#333' : '#666'};\n  cursor: ${props => props.$isEditing ? 'text' : 'pointer'};\n  \n  &:focus {\n    background: white;\n    color: #333;\n  }\n`;\n_c5 = MemoTextarea;\nconst DeleteMemoButton = styled.button`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  width: 20px;\n  height: 20px;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  color: #999;\n  \n  &:hover {\n    color: #f00;\n  }\n`;\n_c6 = DeleteMemoButton;\nconst SaveMemoButton = styled.button`\n  position: absolute;\n  bottom: 4px;\n  right: 4px;\n  width: 50px;\n  height: 20px;\n  border: none;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  color: #495057;\n  cursor: pointer;\n  font-size: 9px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  &:disabled {\n    background: #6c757d;\n    color: white;\n    cursor: not-allowed;\n  }\n`;\n_c7 = SaveMemoButton;\nconst SelectableSentence = ({\n  sentence,\n  sentenceId,\n  isSelected,\n  isHighlighted,\n  hasMemo,\n  memo = '',\n  showSelector = true,\n  onToggleSelect,\n  onMemoChange,\n  onDeleteMemo\n}) => {\n  _s();\n  const [localMemo, setLocalMemo] = useState(memo);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState(!memo); // 메모가 없으면 편집 모드로 시작\n\n  // 외부에서 전달된 memo가 변경되면 로컬 상태도 업데이트\n  useEffect(() => {\n    setLocalMemo(memo);\n  }, [memo]);\n  const handleMemoInputChange = event => {\n    setLocalMemo(event.target.value);\n  };\n  const handleSaveMemo = async () => {\n    if (!onMemoChange || !localMemo.trim()) return;\n    setIsSaving(true);\n    try {\n      await onMemoChange(sentenceId, localMemo);\n      setIsEditing(false); // 저장 후 편집 모드 종료\n    } catch (error) {\n      console.error('메모 저장 실패:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDeleteMemo = () => {\n    if (onDeleteMemo) {\n      setLocalMemo(''); // 로컬 상태도 초기화\n      setIsEditing(true); // 삭제 후 편집 모드로 전환\n      onDeleteMemo(sentenceId);\n    }\n  };\n  const handleContainerClick = () => {\n    if (showSelector) {\n      onToggleSelect(sentenceId);\n    }\n  };\n  const handleSelectButtonClick = event => {\n    // 이벤트 전파 방지 (컨테이너 클릭과 중복 실행 방지)\n    event.stopPropagation();\n    onToggleSelect(sentenceId);\n  };\n  const handleMemoBoxClick = event => {\n    // 메모박스 클릭 시 이벤트 전파 방지\n    event.stopPropagation();\n  };\n  const handleDeleteMemoClick = event => {\n    // 삭제 버튼 클릭 시 이벤트 전파 방지\n    event.stopPropagation();\n    handleDeleteMemo();\n  };\n  return /*#__PURE__*/_jsxDEV(SentenceContainer, {\n    $hasSelector: showSelector,\n    $isHoverable: showSelector,\n    onClick: handleContainerClick,\n    children: [showSelector && /*#__PURE__*/_jsxDEV(SelectButton, {\n      $isSelected: isSelected,\n      onClick: handleSelectButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SentenceText, {\n      $isHighlighted: isHighlighted,\n      $isClickable: showSelector,\n      children: sentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), hasMemo && /*#__PURE__*/_jsxDEV(MemoBox, {\n      $isEditing: isEditing,\n      onClick: handleMemoBoxClick,\n      children: [/*#__PURE__*/_jsxDEV(DeleteMemoButton, {\n        onClick: handleDeleteMemoClick,\n        children: \"\\uD83D\\uDDD1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MemoTextarea, {\n        $isEditing: isEditing,\n        value: localMemo || '',\n        onChange: handleMemoInputChange,\n        placeholder: \"\\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        autoFocus: isEditing,\n        readOnly: !isEditing,\n        onClick: () => setIsEditing(true),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSaveMemo();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(SaveMemoButton, {\n        onClick: handleSaveMemo,\n        disabled: isSaving,\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectableSentence, \"5zcBdYKQDvYui4a+RROXBm+B/mI=\");\n_c8 = SelectableSentence;\nexport default SelectableSentence;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"SentenceContainer\");\n$RefreshReg$(_c2, \"SelectButton\");\n$RefreshReg$(_c3, \"SentenceText\");\n$RefreshReg$(_c4, \"MemoBox\");\n$RefreshReg$(_c5, \"MemoTextarea\");\n$RefreshReg$(_c6, \"DeleteMemoButton\");\n$RefreshReg$(_c7, \"SaveMemoButton\");\n$RefreshReg$(_c8, \"SelectableSentence\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","SentenceContainer","div","props","$hasSelector","$isHoverable","_c","SelectButton","button","$isSelected","_c2","SentenceText","span","$isHighlighted","$isClickable","_c3","MemoBox","$isEditing","_c4","MemoTextarea","textarea","_c5","DeleteMemoButton","_c6","SaveMemoButton","_c7","SelectableSentence","sentence","sentenceId","isSelected","isHighlighted","hasMemo","memo","showSelector","onToggleSelect","onMemoChange","onDeleteMemo","_s","localMemo","setLocalMemo","isSaving","setIsSaving","isEditing","setIsEditing","handleMemoInputChange","event","target","value","handleSaveMemo","trim","error","console","handleDeleteMemo","handleContainerClick","handleSelectButtonClick","stopPropagation","handleMemoBoxClick","handleDeleteMemoClick","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","autoFocus","readOnly","onKeyDown","e","key","shiftKey","preventDefault","disabled","_c8","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/training/components/SelectableSentence.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\ninterface SelectableSentenceProps {\n  sentence: string;\n  sentenceId: string;\n  isSelected: boolean;\n  isHighlighted: boolean;\n  hasMemo: boolean;\n  memo?: string;\n  showSelector?: boolean;\n  onToggleSelect: (sentenceId: string) => void;\n  onMemoChange?: (sentenceId: string, memo: string) => void;\n  onDeleteMemo?: (sentenceId: string) => void;\n}\n\nconst SentenceContainer = styled.div<{ $hasSelector: boolean; $isHoverable: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  gap: ${props => props.$hasSelector ? '8px' : '0'};\n  margin: 4px 0;\n  cursor: ${props => props.$isHoverable ? 'pointer' : 'default'};\n  padding: 2px 4px;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  ㅇㅇ\n  ${props => props.$isHoverable && `\n    &:hover {\n      background-color: #f0f8ff;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n  `}\n`;\n\nconst SelectButton = styled.button<{ $isSelected: boolean }>`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  border: 2px solid #ccc;\n  background: ${props => props.$isSelected ? '#333' : 'white'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n  margin-top: 2px;\n  \n  &:hover {\n    border-color: #666;\n  }\n  \n  &:before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\n\nconst SentenceText = styled.span<{ $isHighlighted: boolean; $isClickable: boolean }>`\n  background: ${props => props.$isHighlighted ? '#ffff00' : 'transparent'};\n  padding: ${props => props.$isHighlighted ? '2px 4px' : '0'};\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  line-height: 1.6;\n  flex: 1;\n  cursor: ${props => props.$isClickable ? 'pointer' : 'default'};\n  \n  ${props => props.$isClickable && `\n    &:hover {\n      background: ${props.$isHighlighted ? '#ffff99' : '#f0f8ff'};\n    }\n  `}\n`;\n\nconst MemoBox = styled.div<{ $isEditing: boolean }>`\n  position: absolute;\n  left: calc(100% + 20px);\n  top: 0;\n  width: 180px;\n  background: ${props => props.$isEditing ? 'white' : '#f5f5f5'};\n  border: 2px solid ${props => props.$isEditing ? '#ddd' : '#ccc'};\n  border-radius: 8px;\n  padding: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  transition: all 0.2s ease;\n  \n  /* 화면 오른쪽을 벗어나지 않도록 조정 */\n  @media (max-width: 768px) {\n    left: auto;\n    right: -10px;\n    width: 150px;\n  }\n`;\n\nconst MemoTextarea = styled.textarea<{ $isEditing: boolean }>`\n  width: calc(100% - 10px);\n  height: 60px;\n  border: none;\n  outline: none;\n  resize: none;\n  font-size: 12px;\n  line-height: 1.4;\n  padding: 4px;\n  background: ${props => props.$isEditing ? 'white' : '#f5f5f5'};\n  color: ${props => props.$isEditing ? '#333' : '#666'};\n  cursor: ${props => props.$isEditing ? 'text' : 'pointer'};\n  \n  &:focus {\n    background: white;\n    color: #333;\n  }\n`;\n\nconst DeleteMemoButton = styled.button`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  width: 20px;\n  height: 20px;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 14px;\n  color: #999;\n  \n  &:hover {\n    color: #f00;\n  }\n`;\n\nconst SaveMemoButton = styled.button`\n  position: absolute;\n  bottom: 4px;\n  right: 4px;\n  width: 50px;\n  height: 20px;\n  border: none;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  color: #495057;\n  cursor: pointer;\n  font-size: 9px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  &:disabled {\n    background: #6c757d;\n    color: white;\n    cursor: not-allowed;\n  }\n`;\n\nconst SelectableSentence: React.FC<SelectableSentenceProps> = ({\n  sentence,\n  sentenceId,\n  isSelected,\n  isHighlighted,\n  hasMemo,\n  memo = '',\n  showSelector = true,\n  onToggleSelect,\n  onMemoChange,\n  onDeleteMemo\n}) => {\n  const [localMemo, setLocalMemo] = useState(memo);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState(!memo); // 메모가 없으면 편집 모드로 시작\n\n  // 외부에서 전달된 memo가 변경되면 로컬 상태도 업데이트\n  useEffect(() => {\n    setLocalMemo(memo);\n  }, [memo]);\n\n  const handleMemoInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setLocalMemo(event.target.value);\n  };\n\n  const handleSaveMemo = async () => {\n    if (!onMemoChange || !localMemo.trim()) return;\n    \n    setIsSaving(true);\n    try {\n      await onMemoChange(sentenceId, localMemo);\n      setIsEditing(false); // 저장 후 편집 모드 종료\n    } catch (error) {\n      console.error('메모 저장 실패:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleDeleteMemo = () => {\n    if (onDeleteMemo) {\n      setLocalMemo(''); // 로컬 상태도 초기화\n      setIsEditing(true); // 삭제 후 편집 모드로 전환\n      onDeleteMemo(sentenceId);\n    }\n  };\n\n  const handleContainerClick = () => {\n    if (showSelector) {\n      onToggleSelect(sentenceId);\n    }\n  };\n\n  const handleSelectButtonClick = (event: React.MouseEvent) => {\n    // 이벤트 전파 방지 (컨테이너 클릭과 중복 실행 방지)\n    event.stopPropagation();\n    onToggleSelect(sentenceId);\n  };\n\n  const handleMemoBoxClick = (event: React.MouseEvent) => {\n    // 메모박스 클릭 시 이벤트 전파 방지\n    event.stopPropagation();\n  };\n\n  const handleDeleteMemoClick = (event: React.MouseEvent) => {\n    // 삭제 버튼 클릭 시 이벤트 전파 방지\n    event.stopPropagation();\n    handleDeleteMemo();\n  };\n\n  return (\n    <SentenceContainer \n      $hasSelector={showSelector} \n      $isHoverable={showSelector}\n      onClick={handleContainerClick}\n    >\n      {showSelector && (\n        <SelectButton \n          $isSelected={isSelected}\n          onClick={handleSelectButtonClick}\n        />\n      )}\n      <SentenceText $isHighlighted={isHighlighted} $isClickable={showSelector}>\n        {sentence}\n      </SentenceText>\n      {hasMemo && (\n        <MemoBox $isEditing={isEditing} onClick={handleMemoBoxClick}>\n          <DeleteMemoButton onClick={handleDeleteMemoClick}>\n            🗑\n          </DeleteMemoButton>\n          <MemoTextarea\n            $isEditing={isEditing}\n            value={localMemo || ''}\n            onChange={handleMemoInputChange}\n            placeholder=\"메모를 입력하세요...\"\n            autoFocus={isEditing}\n            readOnly={!isEditing}\n            onClick={() => setIsEditing(true)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSaveMemo();\n              }\n            }}\n          />\n          {isEditing && (\n            <SaveMemoButton onClick={handleSaveMemo} disabled={isSaving}>저장</SaveMemoButton>\n          )}\n        </MemoBox>\n      )}\n    </SentenceContainer>\n  );\n};\n\nexport default SelectableSentence; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}