{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\training\\\\components\\\\TrainingCategoryView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport InterpretationPopup from './InterpretationPopup';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  padding: 20px;\n  height: 100%;\n  overflow-y: auto;\n`;\n_c = CategoryContainer;\nconst CategorySection = styled.div`\n  margin-bottom: 24px;\n`;\nconst CategoryHeader = styled.div`\n  background: linear-gradient(135deg, #f0f0f0 0%, #d0d0d0 100%);\n  color: #333;\n  padding: 16px 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n    background: linear-gradient(135deg, #e8e8e8 0%, #c8c8c8 100%);\n  }\n`;\n_c2 = CategoryHeader;\nconst CategoryIcon = styled.span`\n  transform: ${props => props.$isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.3s ease;\n  font-size: 16px;\n`;\n_c3 = CategoryIcon;\nconst SubcategoryContainer = styled.div`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  max-height: ${props => props.$isExpanded ? '1000px' : '0'};\n  background: white;\n  border-radius: 0 0 12px 12px;\n  box-shadow: ${props => props.$isExpanded ? '0 4px 12px rgba(0, 0, 0, 0.1)' : 'none'};\n`;\n_c4 = SubcategoryContainer;\nconst SubcategorySection = styled.div`\n  padding: 16px;\n  border-left: 3px solid #e0e0e0;\n  margin: 8px 16px;\n`;\nconst SubcategoryTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\nconst PersonaCard = styled.div`\n  background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n    border-color: #ccc;\n    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n_c5 = PersonaCard;\nconst CheckIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n`;\n_c6 = CheckIcon;\nconst PersonaName = styled.h4`\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n`;\n_c7 = PersonaName;\nconst PersonaDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n  margin-bottom: 8px;\n`;\n\n// 직접 표시 카테고리용 스타일 (들여쓰기)\n_c8 = PersonaDescription;\nconst DirectCategorySection = styled.div`\n  margin-left: 24px;\n  margin-bottom: 24px;\n`;\n_c9 = DirectCategorySection;\nconst DirectCategoryTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #444;\n  margin-bottom: 16px;\n  padding-left: 8px;\n  border-left: 4px solid #ddd;\n`;\n_c0 = DirectCategoryTitle;\nconst HeaderSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n`;\nconst HeaderTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: #343a40;\n  margin: 0;\n`;\nconst GenerateAllButton = styled.button`\n  background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 24px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: ${props => props.$isLoading ? 'not-allowed' : 'pointer'};\n  transition: all 0.2s ease;\n  opacity: ${props => props.$isLoading ? 0.7 : 1};\n  \n  &:hover {\n    transform: ${props => props.$isLoading ? 'none' : 'translateY(-1px)'};\n    box-shadow: ${props => props.$isLoading ? 'none' : '0 4px 12px rgba(0, 123, 255, 0.3)'};\n  }\n  \n  &:active {\n    transform: ${props => props.$isLoading ? 'none' : 'translateY(0)'};\n  }\n`;\nconst ProgressInfo = styled.div`\n  font-size: 12px;\n  color: #6c757d;\n  margin-top: 4px;\n`;\nconst TrainingCategoryView = ({\n  personas,\n  onSelectPersona,\n  onInterpretationComplete\n}) => {\n  _s();\n  const [selectedPersonaForInterpretation, setSelectedPersonaForInterpretation] = useState(null);\n  const [interpretationStatuses, setInterpretationStatuses] = useState({});\n  const [isGeneratingAll, setIsGeneratingAll] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState({\n    current: 0,\n    total: 0\n  });\n\n  // 해석 상태 가져오기\n  useEffect(() => {\n    const fetchInterpretationStatus = async () => {\n      const response = await chatApi.getInterpretationStatus();\n      if (response.data) {\n        const statusMap = {};\n        response.data.forEach(status => {\n          statusMap[status.persona_id] = status.has_interpretation;\n        });\n        setInterpretationStatuses(statusMap);\n      }\n    };\n    fetchInterpretationStatus();\n  }, []);\n\n  // 페르소나 정보가 로드되고 해석 상태가 확인되면 자동으로 첫 번째 해석이 있는 페르소나 선택\n  useEffect(() => {\n    if (Object.keys(personas).length > 0 && Object.keys(interpretationStatuses).length > 0) {\n      // 해석이 있는 첫 번째 페르소나 찾기\n      const personaWithInterpretation = Object.entries(interpretationStatuses).find(([personaId, hasInterpretation]) => hasInterpretation && personas[personaId]);\n      if (personaWithInterpretation) {\n        const [personaId] = personaWithInterpretation;\n        const persona = personas[personaId];\n        console.log('자동으로 첫 번째 해석이 있는 페르소나 선택:', persona.name);\n        handlePersonaClick(personaId, persona.name);\n      }\n    }\n  }, [personas, interpretationStatuses]);\n\n  // 카테고리별로 페르소나 그룹화\n  const groupedPersonas = Object.entries(personas).reduce((acc, [id, persona]) => {\n    if (!acc[persona.category]) {\n      acc[persona.category] = {};\n    }\n    if (!acc[persona.category][persona.subcategory]) {\n      acc[persona.category][persona.subcategory] = [];\n    }\n    acc[persona.category][persona.subcategory].push({\n      id,\n      ...persona\n    });\n    return acc;\n  }, {});\n\n  // 최상위 카테고리들 (심리학, 철학)은 아코디언 없이 계속 표시\n  const topLevelCategories = ['심리학', '철학'];\n\n  // 하위 카테고리별 아코디언 상태 관리\n  const [expandedSubcategories, setExpandedSubcategories] = useState({});\n  const toggleSubcategory = subcategory => {\n    setExpandedSubcategories(prev => ({\n      ...prev,\n      [subcategory]: !prev[subcategory]\n    }));\n  };\n  const handlePersonaClick = async (personaId, personaName) => {\n    const hasInterpretation = interpretationStatuses[personaId];\n    if (hasInterpretation) {\n      // 해석이 있으면 바로 채팅 모드로\n      const response = await chatApi.getInterpretation(personaId);\n      if (response.data) {\n        onInterpretationComplete(personaId, response.data.interpretation);\n        onSelectPersona(personaId);\n      }\n    } else {\n      // 해석이 없으면 생성 팝업 표시\n      setSelectedPersonaForInterpretation({\n        id: personaId,\n        name: personaName\n      });\n    }\n  };\n  const handleInterpretationConfirm = async () => {\n    if (!selectedPersonaForInterpretation) return;\n\n    // 백엔드에서 해석 생성 요청\n    const response = await chatApi.generateInterpretation({\n      persona_id: selectedPersonaForInterpretation.id,\n      user_input: \"기본 심리 해석 요청\"\n    });\n    if (response.data) {\n      // 해석 상태 업데이트\n      setInterpretationStatuses(prev => ({\n        ...prev,\n        [selectedPersonaForInterpretation.id]: true\n      }));\n    }\n  };\n  const handleInterpretationCancel = () => {\n    setSelectedPersonaForInterpretation(null);\n  };\n  const handleInterpretationComplete = interpretation => {\n    if (selectedPersonaForInterpretation) {\n      onInterpretationComplete(selectedPersonaForInterpretation.id, interpretation);\n      onSelectPersona(selectedPersonaForInterpretation.id);\n      setSelectedPersonaForInterpretation(null);\n    }\n  };\n\n  // 모든 페르소나 해석 생성\n  const handleGenerateAllInterpretations = async () => {\n    if (isGeneratingAll) return;\n    const totalPersonas = Object.keys(personas).length;\n    setIsGeneratingAll(true);\n    setGenerationProgress({\n      current: 0,\n      total: totalPersonas\n    });\n    try {\n      const response = await chatApi.generateAllInterpretations();\n      if (response.data) {\n        // 성공적으로 생성된 해석들의 상태 업데이트\n        const newStatuses = {};\n        response.data.interpretations.forEach(interpretation => {\n          newStatuses[interpretation.persona_id] = true;\n        });\n        setInterpretationStatuses(prev => ({\n          ...prev,\n          ...newStatuses\n        }));\n        setGenerationProgress({\n          current: response.data.total_count,\n          total: totalPersonas\n        });\n\n        // 잠시 후 완료 상태 표시\n        setTimeout(() => {\n          setIsGeneratingAll(false);\n          setGenerationProgress({\n            current: 0,\n            total: 0\n          });\n        }, 2000);\n      } else {\n        console.error('전체 해석 생성 실패:', response.error);\n        setIsGeneratingAll(false);\n        setGenerationProgress({\n          current: 0,\n          total: 0\n        });\n      }\n    } catch (error) {\n      console.error('전체 해석 생성 오류:', error);\n      setIsGeneratingAll(false);\n      setGenerationProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: topLevelCategories.map(topCategory => {\n        const subcategories = groupedPersonas[topCategory];\n        if (!subcategories) return null;\n        return /*#__PURE__*/_jsxDEV(DirectCategorySection, {\n          children: [/*#__PURE__*/_jsxDEV(DirectCategoryTitle, {\n            children: topCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), Object.entries(subcategories).map(([subcategory, personaList]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CategoryHeader, {\n              $isExpanded: expandedSubcategories[subcategory] || false,\n              onClick: () => toggleSubcategory(subcategory),\n              style: {\n                marginLeft: '16px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: subcategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CategoryIcon, {\n                $isExpanded: expandedSubcategories[subcategory] || false,\n                children: \"\\u25B6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(SubcategoryContainer, {\n              $isExpanded: expandedSubcategories[subcategory] || false,\n              style: {\n                marginLeft: '32px'\n              },\n              children: personaList.map(persona => /*#__PURE__*/_jsxDEV(PersonaCard, {\n                $hasInterpretation: interpretationStatuses[persona.id] || false,\n                onClick: () => handlePersonaClick(persona.id, persona.name),\n                children: [interpretationStatuses[persona.id] && /*#__PURE__*/_jsxDEV(CheckIcon, {\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(PersonaName, {\n                  children: persona.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PersonaDescription, {\n                  dangerouslySetInnerHTML: {\n                    __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 25\n                }, this)]\n              }, persona.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)]\n          }, subcategory, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this))]\n        }, topCategory, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), selectedPersonaForInterpretation && /*#__PURE__*/_jsxDEV(InterpretationPopup, {\n      isOpen: !!selectedPersonaForInterpretation,\n      personaId: selectedPersonaForInterpretation.id,\n      personaName: selectedPersonaForInterpretation.name,\n      onConfirm: handleInterpretationConfirm,\n      onCancel: handleInterpretationCancel,\n      onComplete: handleInterpretationComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(TrainingCategoryView, \"xXvlewNHSZPRQvPUBElSGBW4ue4=\");\n_c1 = TrainingCategoryView;\nexport default TrainingCategoryView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"CategoryContainer\");\n$RefreshReg$(_c2, \"CategoryHeader\");\n$RefreshReg$(_c3, \"CategoryIcon\");\n$RefreshReg$(_c4, \"SubcategoryContainer\");\n$RefreshReg$(_c5, \"PersonaCard\");\n$RefreshReg$(_c6, \"CheckIcon\");\n$RefreshReg$(_c7, \"PersonaName\");\n$RefreshReg$(_c8, \"PersonaDescription\");\n$RefreshReg$(_c9, \"DirectCategorySection\");\n$RefreshReg$(_c0, \"DirectCategoryTitle\");\n$RefreshReg$(_c1, \"TrainingCategoryView\");","map":{"version":3,"names":["React","useState","useEffect","styled","InterpretationPopup","chatApi","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryContainer","div","_c","CategorySection","CategoryHeader","_c2","CategoryIcon","span","props","$isExpanded","_c3","SubcategoryContainer","_c4","SubcategorySection","SubcategoryTitle","h3","PersonaCard","_c5","CheckIcon","_c6","PersonaName","h4","_c7","PersonaDescription","p","_c8","DirectCategorySection","_c9","DirectCategoryTitle","_c0","HeaderSection","HeaderTitle","h2","GenerateAllButton","button","$isLoading","ProgressInfo","TrainingCategoryView","personas","onSelectPersona","onInterpretationComplete","_s","selectedPersonaForInterpretation","setSelectedPersonaForInterpretation","interpretationStatuses","setInterpretationStatuses","isGeneratingAll","setIsGeneratingAll","generationProgress","setGenerationProgress","current","total","fetchInterpretationStatus","response","getInterpretationStatus","data","statusMap","forEach","status","persona_id","has_interpretation","Object","keys","length","personaWithInterpretation","entries","find","personaId","hasInterpretation","persona","console","log","name","handlePersonaClick","groupedPersonas","reduce","acc","id","category","subcategory","push","topLevelCategories","expandedSubcategories","setExpandedSubcategories","toggleSubcategory","prev","personaName","getInterpretation","interpretation","handleInterpretationConfirm","generateInterpretation","user_input","handleInterpretationCancel","handleInterpretationComplete","handleGenerateAllInterpretations","totalPersonas","generateAllInterpretations","newStatuses","interpretations","total_count","setTimeout","error","children","map","topCategory","subcategories","fileName","_jsxFileName","lineNumber","columnNumber","personaList","style","marginBottom","onClick","marginLeft","$hasInterpretation","dangerouslySetInnerHTML","__html","description","replace","isOpen","onConfirm","onCancel","onComplete","_c1","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/training/components/TrainingCategoryView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Persona, InterpretationStatus } from '../../shared/types';\nimport styled from 'styled-components';\nimport InterpretationPopup from './InterpretationPopup';\nimport { chatApi } from '../../shared/api/chatApi';\n\ninterface TrainingCategoryViewProps {\n  personas: Record<string, Persona>;\n  onSelectPersona: (personaId: string) => void;\n  onInterpretationComplete: (personaId: string, interpretation: string) => void;\n}\n\nconst CategoryContainer = styled.div`\n  padding: 20px;\n  height: 100%;\n  overflow-y: auto;\n`;\n\nconst CategorySection = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst CategoryHeader = styled.div<{ $isExpanded: boolean }>`\n  background: linear-gradient(135deg, #f0f0f0 0%, #d0d0d0 100%);\n  color: #333;\n  padding: 16px 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n    background: linear-gradient(135deg, #e8e8e8 0%, #c8c8c8 100%);\n  }\n`;\n\nconst CategoryIcon = styled.span<{ $isExpanded: boolean }>`\n  transform: ${props => props.$isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.3s ease;\n  font-size: 16px;\n`;\n\nconst SubcategoryContainer = styled.div<{ $isExpanded: boolean }>`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  max-height: ${props => props.$isExpanded ? '1000px' : '0'};\n  background: white;\n  border-radius: 0 0 12px 12px;\n  box-shadow: ${props => props.$isExpanded ? '0 4px 12px rgba(0, 0, 0, 0.1)' : 'none'};\n`;\n\nconst SubcategorySection = styled.div`\n  padding: 16px;\n  border-left: 3px solid #e0e0e0;\n  margin: 8px 16px;\n`;\n\nconst SubcategoryTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst PersonaCard = styled.div<{ $hasInterpretation: boolean }>`\n  background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n    border-color: #ccc;\n    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst CheckIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst PersonaName = styled.h4`\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n`;\n\nconst PersonaDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n  margin-bottom: 8px;\n`;\n\n\n\n// 직접 표시 카테고리용 스타일 (들여쓰기)\nconst DirectCategorySection = styled.div`\n  margin-left: 24px;\n  margin-bottom: 24px;\n`;\n\nconst DirectCategoryTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #444;\n  margin-bottom: 16px;\n  padding-left: 8px;\n  border-left: 4px solid #ddd;\n`;\n\nconst HeaderSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n`;\n\nconst HeaderTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: #343a40;\n  margin: 0;\n`;\n\nconst GenerateAllButton = styled.button<{ $isLoading: boolean }>`\n  background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 24px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: ${props => props.$isLoading ? 'not-allowed' : 'pointer'};\n  transition: all 0.2s ease;\n  opacity: ${props => props.$isLoading ? 0.7 : 1};\n  \n  &:hover {\n    transform: ${props => props.$isLoading ? 'none' : 'translateY(-1px)'};\n    box-shadow: ${props => props.$isLoading ? 'none' : '0 4px 12px rgba(0, 123, 255, 0.3)'};\n  }\n  \n  &:active {\n    transform: ${props => props.$isLoading ? 'none' : 'translateY(0)'};\n  }\n`;\n\nconst ProgressInfo = styled.div`\n  font-size: 12px;\n  color: #6c757d;\n  margin-top: 4px;\n`;\n\nconst TrainingCategoryView: React.FC<TrainingCategoryViewProps> = ({\n  personas,\n  onSelectPersona,\n  onInterpretationComplete,\n}) => {\n  const [selectedPersonaForInterpretation, setSelectedPersonaForInterpretation] = useState<{\n    id: string;\n    name: string;\n  } | null>(null);\n  const [interpretationStatuses, setInterpretationStatuses] = useState<Record<string, boolean>>({});\n  const [isGeneratingAll, setIsGeneratingAll] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState({ current: 0, total: 0 });\n\n  // 해석 상태 가져오기\n  useEffect(() => {\n    const fetchInterpretationStatus = async () => {\n      const response = await chatApi.getInterpretationStatus();\n      if (response.data) {\n        const statusMap: Record<string, boolean> = {};\n        response.data.forEach(status => {\n          statusMap[status.persona_id] = status.has_interpretation;\n        });\n        setInterpretationStatuses(statusMap);\n      }\n    };\n\n    fetchInterpretationStatus();\n  }, []);\n\n  // 페르소나 정보가 로드되고 해석 상태가 확인되면 자동으로 첫 번째 해석이 있는 페르소나 선택\n  useEffect(() => {\n    if (Object.keys(personas).length > 0 && Object.keys(interpretationStatuses).length > 0) {\n      // 해석이 있는 첫 번째 페르소나 찾기\n      const personaWithInterpretation = Object.entries(interpretationStatuses).find(\n        ([personaId, hasInterpretation]) => hasInterpretation && personas[personaId]\n      );\n\n      if (personaWithInterpretation) {\n        const [personaId] = personaWithInterpretation;\n        const persona = personas[personaId];\n        console.log('자동으로 첫 번째 해석이 있는 페르소나 선택:', persona.name);\n        handlePersonaClick(personaId, persona.name);\n      }\n    }\n  }, [personas, interpretationStatuses]);\n\n  // 카테고리별로 페르소나 그룹화\n  const groupedPersonas = Object.entries(personas).reduce((acc, [id, persona]) => {\n    if (!acc[persona.category]) {\n      acc[persona.category] = {};\n    }\n    if (!acc[persona.category][persona.subcategory]) {\n      acc[persona.category][persona.subcategory] = [];\n    }\n    acc[persona.category][persona.subcategory].push({ id, ...persona });\n    return acc;\n  }, {} as Record<string, Record<string, Array<{ id: string } & Persona>>>);\n\n  // 최상위 카테고리들 (심리학, 철학)은 아코디언 없이 계속 표시\n  const topLevelCategories = ['심리학', '철학'];\n  \n  // 하위 카테고리별 아코디언 상태 관리\n  const [expandedSubcategories, setExpandedSubcategories] = useState<Record<string, boolean>>({});\n\n  const toggleSubcategory = (subcategory: string) => {\n    setExpandedSubcategories(prev => ({\n      ...prev,\n      [subcategory]: !prev[subcategory]\n    }));\n  };\n\n  const handlePersonaClick = async (personaId: string, personaName: string) => {\n    const hasInterpretation = interpretationStatuses[personaId];\n    \n    if (hasInterpretation) {\n      // 해석이 있으면 바로 채팅 모드로\n      const response = await chatApi.getInterpretation(personaId);\n      if (response.data) {\n        onInterpretationComplete(personaId, response.data.interpretation);\n        onSelectPersona(personaId);\n      }\n    } else {\n      // 해석이 없으면 생성 팝업 표시\n      setSelectedPersonaForInterpretation({ id: personaId, name: personaName });\n    }\n  };\n\n  const handleInterpretationConfirm = async () => {\n    if (!selectedPersonaForInterpretation) return;\n    \n    // 백엔드에서 해석 생성 요청\n    const response = await chatApi.generateInterpretation({\n      persona_id: selectedPersonaForInterpretation.id,\n      user_input: \"기본 심리 해석 요청\"\n    });\n    \n    if (response.data) {\n      // 해석 상태 업데이트\n      setInterpretationStatuses(prev => ({\n        ...prev,\n        [selectedPersonaForInterpretation.id]: true\n      }));\n    }\n  };\n\n  const handleInterpretationCancel = () => {\n    setSelectedPersonaForInterpretation(null);\n  };\n\n  const handleInterpretationComplete = (interpretation: string) => {\n    if (selectedPersonaForInterpretation) {\n      onInterpretationComplete(selectedPersonaForInterpretation.id, interpretation);\n      onSelectPersona(selectedPersonaForInterpretation.id);\n      setSelectedPersonaForInterpretation(null);\n    }\n  };\n\n  // 모든 페르소나 해석 생성\n  const handleGenerateAllInterpretations = async () => {\n    if (isGeneratingAll) return;\n    \n    const totalPersonas = Object.keys(personas).length;\n    setIsGeneratingAll(true);\n    setGenerationProgress({ current: 0, total: totalPersonas });\n    \n    try {\n      const response = await chatApi.generateAllInterpretations();\n      \n      if (response.data) {\n        // 성공적으로 생성된 해석들의 상태 업데이트\n        const newStatuses: Record<string, boolean> = {};\n        response.data.interpretations.forEach(interpretation => {\n          newStatuses[interpretation.persona_id] = true;\n        });\n        \n        setInterpretationStatuses(prev => ({\n          ...prev,\n          ...newStatuses\n        }));\n        \n        setGenerationProgress({ current: response.data.total_count, total: totalPersonas });\n        \n        // 잠시 후 완료 상태 표시\n        setTimeout(() => {\n          setIsGeneratingAll(false);\n          setGenerationProgress({ current: 0, total: 0 });\n        }, 2000);\n      } else {\n        console.error('전체 해석 생성 실패:', response.error);\n        setIsGeneratingAll(false);\n        setGenerationProgress({ current: 0, total: 0 });\n      }\n    } catch (error) {\n      console.error('전체 해석 생성 오류:', error);\n      setIsGeneratingAll(false);\n      setGenerationProgress({ current: 0, total: 0 });\n    }\n  };\n\n  return (\n    <>\n      <CategoryContainer>\n        {/* 최상위 카테고리들 (심리학, 철학) - 계속 표시 */}\n        {topLevelCategories.map(topCategory => {\n          const subcategories = groupedPersonas[topCategory];\n          if (!subcategories) return null;\n          \n          return (\n            <DirectCategorySection key={topCategory}>\n              <DirectCategoryTitle>{topCategory}</DirectCategoryTitle>\n              \n              {/* 하위 카테고리들 (정신분석, 인지행동 등) - 아코디언 */}\n              {Object.entries(subcategories).map(([subcategory, personaList]) => (\n                <div key={subcategory} style={{ marginBottom: '16px' }}>\n                  <CategoryHeader\n                    $isExpanded={expandedSubcategories[subcategory] || false}\n                    onClick={() => toggleSubcategory(subcategory)}\n                    style={{ marginLeft: '16px' }}\n                  >\n                    <span>{subcategory}</span>\n                    <CategoryIcon $isExpanded={expandedSubcategories[subcategory] || false}>\n                      ▶\n                    </CategoryIcon>\n                  </CategoryHeader>\n                  \n                  <SubcategoryContainer \n                    $isExpanded={expandedSubcategories[subcategory] || false}\n                    style={{ marginLeft: '32px' }}\n                  >\n                    {personaList.map((persona) => (\n                      <PersonaCard \n                        key={persona.id}\n                        $hasInterpretation={interpretationStatuses[persona.id] || false}\n                        onClick={() => handlePersonaClick(persona.id, persona.name)}\n                      >\n                        {interpretationStatuses[persona.id] && (\n                          <CheckIcon>✓</CheckIcon>\n                        )}\n                        <PersonaName>{persona.name}</PersonaName>\n                        <PersonaDescription \n                          dangerouslySetInnerHTML={{\n                            __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                          }}\n                        />\n                      </PersonaCard>\n                    ))}\n                  </SubcategoryContainer>\n                </div>\n              ))}\n            </DirectCategorySection>\n          );\n        })}\n      </CategoryContainer>\n\n      {selectedPersonaForInterpretation && (\n        <InterpretationPopup\n          isOpen={!!selectedPersonaForInterpretation}\n          personaId={selectedPersonaForInterpretation.id}\n          personaName={selectedPersonaForInterpretation.name}\n          onConfirm={handleInterpretationConfirm}\n          onCancel={handleInterpretationCancel}\n          onComplete={handleInterpretationComplete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TrainingCategoryView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}