{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work_ver2/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23,_templateObject24,_templateObject25,_templateObject26,_templateObject27;import React,{useState,useEffect,useCallback}from'react';import styled from'styled-components';import{sentenceApi}from'../../training/api/sentenceApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 20px;\\n  border-bottom: 1px solid #e9ecef;\\n  background: #fff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const FilterDropdownButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #333;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  min-width: 120px;\\n  justify-content: space-between;\\n  \\n  &:hover {\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  }\\n  \\n  .arrow {\\n    font-size: 12px;\\n    transition: transform 0.2s;\\n    transform: \",\";\\n  }\\n\"])),props=>props.$isOpen?'rotate(180deg)':'rotate(0deg)');const FilterDropdownMenu=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 100%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  z-index: 1000;\\n  max-height: 200px;\\n  overflow-y: auto;\\n  display: \",\";\\n  margin-top: 4px;\\n  min-width: 150px;\\n\"])),props=>props.$isOpen?'block':'none');const FilterDropdownItem=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  color: #333;\\n  background: \",\";\\n  font-weight: \",\";\\n  \\n  &:hover {\\n    background: #e9ecef;\\n  }\\n  \\n  &:first-child {\\n    border-radius: 8px 8px 0 0;\\n  }\\n  \\n  &:last-child {\\n    border-radius: 0 0 8px 8px;\\n  }\\n\"])),props=>props.$isSelected?'#e9ecef':'transparent',props=>props.$isSelected?'500':'normal');const FilterContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const NavigationButton=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 50%;\\n  width: 32px;\\n  height: 32px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 14px;\\n  color: #333;\\n  \\n  &:hover {\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n  }\\n\"])));const ContentArea=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 20px;\\n  overflow-y: auto;\\n  background: #ffffff;\\n\"])));const SentenceGrid=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px;\\n\"])));const SentenceContainer=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n\"])));const SentenceRow=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background: \",\";\\n  border: 1px solid \",\";\\n  border-radius: 16px;\\n  padding: 16px 20px;\\n  cursor: pointer;\\n  position: relative;\\n  transition: all 0.2s ease;\\n  min-height: 60px;\\n  display: flex;\\n  align-items: center;\\n  \\n  &:hover {\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n    transform: translateY(-1px);\\n    border-color: \",\";\\n    background: \",\";\\n  }\\n  \\n  \",\"\\n\"])),props=>props.$isHighlighted?'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)':'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)',props=>props.$isHighlighted?'#ffc107':'#dee2e6',props=>props.$isHighlighted?'#ffb300':'#adb5bd',props=>props.$isHighlighted?'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)':'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)',props=>props.$isPinned&&\"\\n    background: \".concat(props.$isHighlighted?'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)':'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)',\";\\n    border-color: \").concat(props.$isHighlighted?'#ffc107':'#dee2e6',\";\\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n    \\n    &:hover {\\n      background: \").concat(props.$isHighlighted?'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)':'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)',\";\\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n      border-color: \").concat(props.$isHighlighted?'#ffb300':'#adb5bd',\";\\n    }\\n  \"));const SentenceContent=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding-bottom: \",\";\\n\"])),props=>// 메모가 있으면 하단 여백 추가\n'var(--has-memo, 0px)');const SentenceText=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-size: 15px;\\n  line-height: 1.6;\\n  color: #333;\\n  word-break: break-word;\\n  font-weight: 500;\\n\"])));const SentenceMetaExternal=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  font-size: 12px;\\n  color: #6c757d;\\n  gap: 8px;\\n\"])));const PersonaLabel=styled.span(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  background: #e9ecef;\\n  padding: 3px 8px;\\n  border-radius: 6px;\\n  font-weight: 500;\\n  color: #495057;\\n\"])));const DateLabel=styled.span(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  font-style: italic;\\n  opacity: 0.8;\\n\"])));const PinIcon=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 12px;\\n  right: 16px;\\n  width: 24px;\\n  height: 24px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 14px;\\n  color: \",\";\\n  cursor: pointer;\\n  z-index: 2;\\n  border-radius: 50%;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    color: #333;\\n    background: rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  \",\":hover & {\\n    color: \",\";\\n  }\\n  \\n  &::before {\\n    content: \\\"\\uD83D\\uDCCC\\\";\\n    filter: grayscale(100%);\\n  }\\n\"])),props=>props.$isPinned?'#333':'transparent',SentenceRow,props=>props.$isPinned?'#333':'#666');const EmptyState=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: 60px 20px;\\n  color: #6c757d;\\n  \\n  .icon {\\n    font-size: 48px;\\n    margin-bottom: 16px;\\n  }\\n  \\n  .title {\\n    font-size: 18px;\\n    font-weight: 500;\\n    margin-bottom: 8px;\\n  }\\n  \\n  .description {\\n    font-size: 14px;\\n  }\\n\"])));const ContextMenuContainer=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: \",\"px;\\n  left: \",\"px;\\n  background: white;\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n  z-index: 1000;\\n  min-width: 160px;\\n  overflow: hidden;\\n\"])),props=>props.$y,props=>props.$x);const ContextMenuItem=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  padding: 12px 16px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #333;\\n  \\n  &:hover {\\n    background-color: #f8f9fa;\\n  }\\n  \\n  &:not(:last-child) {\\n    border-bottom: 1px solid #f1f3f4;\\n  }\\n\"])));const ModalOverlay=styled.div(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 2000;\\n\"])));const ModalContent=styled.div(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 12px;\\n  padding: 24px;\\n  max-width: 400px;\\n  width: 90%;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\\n\"])));const ModalTitle=styled.h3(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  margin: 0 0 16px 0;\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #333;\\n\"])));const ModalMessage=styled.p(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  margin: 0 0 24px 0;\\n  font-size: 14px;\\n  color: #666;\\n  line-height: 1.5;\\n\"])));const ModalButtons=styled.div(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 12px;\\n  justify-content: space-between;\\n\"])));const ModalButton=styled.button(_templateObject24||(_templateObject24=_taggedTemplateLiteral([\"\\n  padding: 10px 20px;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: 1px solid;\\n  \\n  \",\"\\n\"])),props=>props.$variant==='primary'?\"\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n    color: #495057;\\n    border-color: #adb5bd;\\n    \\n    &:hover {\\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\\n      border-color: #6c757d;\\n    }\\n  \":\"\\n    background: white;\\n    color: #6c757d;\\n    border-color: #dee2e6;\\n    \\n    &:hover {\\n      background: #f8f9fa;\\n    }\\n  \");const StatusIndicators=styled.div(_templateObject25||(_templateObject25=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 8px;\\n  right: 40px;\\n  display: flex;\\n  gap: 4px;\\n  z-index: 1;\\n\"])));const StatusIndicator=styled.div(_templateObject26||(_templateObject26=_taggedTemplateLiteral([\"\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 10px;\\n  color: white;\\n  font-weight: bold;\\n  background: \",\";\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\n  \\n  &::before {\\n    content: \",\";\\n  }\\n\"])),props=>{if(props.$type==='highlight'){return props.$color==='yellow'?'#ffc107':props.$color==='green'?'#28a745':props.$color==='blue'?'#007bff':'#ffc107';}return'#6c757d';// 메모 색상\n},props=>props.$type==='highlight'?'\"H\"':'\"M\"');const MemoPreview=styled.div(_templateObject27||(_templateObject27=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 8px;\\n  left: 20px;\\n  right: 60px;\\n  background: rgba(108, 117, 125, 0.1);\\n  border-radius: 8px;\\n  padding: 6px 10px;\\n  font-size: 12px;\\n  color: #6c757d;\\n  font-style: italic;\\n  max-height: 40px;\\n  overflow: hidden;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n\"])));const SentenceVaultView=_ref=>{let{personas,onNavigateToPersona,onNavigateToThread,onNavigateToPersonaWithSentence}=_ref;const[sentences,setSentences]=useState([]);const[filteredSentences,setFilteredSentences]=useState([]);const[currentFilter,setCurrentFilter]=useState('전체');const[loading,setLoading]=useState(true);const[pinnedSentences,setPinnedSentences]=useState(new Set());const[contextMenu,setContextMenu]=useState(null);const[confirmationModal,setConfirmationModal]=useState(null);const[showFilterDropdown,setShowFilterDropdown]=useState(false);// 필터 옵션들\nconst[filterOptions,setFilterOptions]=useState(['전체','언어화','편지']);const[currentFilterIndex,setCurrentFilterIndex]=useState(0);const loadData=useCallback(async()=>{setLoading(true);try{// 저장고 문장들 로드\nconst sentenceData=await sentenceApi.getVaultSentences();console.log('저장고 데이터:',sentenceData);setSentences(sentenceData);// 필터 옵션에 페르소나들 추가 (props로 받은 personas 사용)\nconst personaNames=Object.values(personas).map(p=>p.name);setFilterOptions(['전체','언어화','편지',...personaNames]);}catch(error){console.error('데이터 로딩 실패:',error);}finally{setLoading(false);}},[personas]);const applyFilter=useCallback(()=>{let filtered=[...sentences];if(currentFilter!=='전체'){if(currentFilter==='언어화'){filtered=filtered.filter(s=>{var _s$source_message_id;return s.tags.includes('verbalization')||s.tags.includes('언어화')||((_s$source_message_id=s.source_message_id)===null||_s$source_message_id===void 0?void 0:_s$source_message_id.includes('verbalization'));});}else if(currentFilter==='편지'){filtered=filtered.filter(s=>s.tags.includes('letter'));}else{// 페르소나 이름으로 필터링\nconst personaId=Object.keys(personas).find(id=>personas[id].name===currentFilter);if(personaId){filtered=filtered.filter(s=>s.tags.includes(personaId)||s.source_message_id.includes(personaId));}}}// 고정된 문장들을 맨 위로\nconst pinned=filtered.filter(s=>pinnedSentences.has(s.id));const unpinned=filtered.filter(s=>!pinnedSentences.has(s.id));// 날짜순 정렬 (최신순)\npinned.sort((a,b)=>new Date(b.created_at).getTime()-new Date(a.created_at).getTime());unpinned.sort((a,b)=>new Date(b.created_at).getTime()-new Date(a.created_at).getTime());setFilteredSentences([...pinned,...unpinned]);},[sentences,currentFilter,pinnedSentences,personas]);useEffect(()=>{loadData();},[loadData]);useEffect(()=>{applyFilter();},[sentences,currentFilter,pinnedSentences,applyFilter]);// 컨텍스트 메뉴 외부 클릭 감지\nuseEffect(()=>{const handleClickOutside=()=>{console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');setContextMenu(null);};if(contextMenu){document.addEventListener('click',handleClickOutside);return()=>document.removeEventListener('click',handleClickOutside);}},[contextMenu]);// 드롭다운 외부 클릭 감지\nuseEffect(()=>{const handleClickOutside=event=>{const target=event.target;if(!target.closest('.filter-dropdown')){setShowFilterDropdown(false);}};if(showFilterDropdown){document.addEventListener('click',handleClickOutside);return()=>document.removeEventListener('click',handleClickOutside);}},[showFilterDropdown]);const handleFilterChange=filter=>{setCurrentFilter(filter);setCurrentFilterIndex(filterOptions.indexOf(filter));setShowFilterDropdown(false);};const handleNavigateFilter=direction=>{const newIndex=direction==='prev'?Math.max(0,currentFilterIndex-1):Math.min(filterOptions.length-1,currentFilterIndex+1);setCurrentFilterIndex(newIndex);setCurrentFilter(filterOptions[newIndex]);};const handleSentenceClick=(event,sentence)=>{event.preventDefault();event.stopPropagation();console.log('문장 클릭됨:',sentence.sentence.substring(0,50));console.log('클릭 위치:',event.clientX,event.clientY);setContextMenu({x:event.clientX,y:event.clientY,sentence});console.log('컨텍스트 메뉴 설정됨');};const handleContextMenuAction=(action,sentence)=>{console.log('컨텍스트 메뉴 액션:',action);setContextMenu(null);switch(action){case'interact':case'delete':setConfirmationModal({type:action,sentence});break;case'pin':togglePin(sentence.id);break;}};const handleConfirmAction=async()=>{var _sentence$source_mess;if(!confirmationModal)return;const{type,sentence}=confirmationModal;try{switch(type){case'interact':console.log('=== 상호작용 하기 시작 ===');console.log('문장 데이터:',sentence);console.log('tags:',sentence.tags);console.log('source_message_id:',sentence.source_message_id);console.log('source_conversation_id:',sentence.source_conversation_id);console.log('source_thread_id:',sentence.source_thread_id);console.log('source_thread_type:',sentence.source_thread_type);console.log('사용 가능한 페르소나들:',Object.keys(personas));// 해당 문장의 출처 스레드로 이동하면서 입력창에 \\\"문장에 대해\\\" 형태로 설정\nif(sentence.tags.includes('verbalization')||sentence.tags.includes('언어화')||(_sentence$source_mess=sentence.source_message_id)!==null&&_sentence$source_mess!==void 0&&_sentence$source_mess.includes('verbalization')){console.log('언어화 문장으로 인식됨');// 언어화에서 온 문장인 경우 - 언어화 스레드로 이동\nif(sentence.source_conversation_id&&sentence.source_conversation_id!=='verbalization_chat'){console.log('언어화 스레드 ID가 있음:',sentence.source_conversation_id);sessionStorage.setItem('selectedSentenceForInput',\"\\\"\".concat(sentence.sentence,\"\\\"\\uC5D0 \\uB300\\uD574 \"));if(onNavigateToThread){console.log('언어화 스레드로 이동 중...');onNavigateToThread(sentence.source_conversation_id,'verbalization');}}else{console.log('언어화 스레드 ID가 없어서 언어화 모드로만 전환');// source_conversation_id가 없으면 언어화 모드로만 전환\nsessionStorage.setItem('selectedSentenceForInput',\"\\\"\".concat(sentence.sentence,\"\\\"\\uC5D0 \\uB300\\uD574 \"));if(onNavigateToPersona){console.log('언어화 페르소나로 이동 중...');// 언어화는 verbalization ID 사용\nonNavigateToPersona('verbalization','sentence');}}}else{var _sentence$source_mess2,_sentence$source_mess3,_sentence$source_mess4;console.log('훈습 문장으로 인식됨');// 훈습에서 온 문장인 경우 - source_message_id에서 스레드 타입 식별\nlet threadType='interpretation';// 기본값\nif((_sentence$source_mess2=sentence.source_message_id)!==null&&_sentence$source_mess2!==void 0&&_sentence$source_mess2.includes('sentence_')||sentence.tags.includes('sentence')){threadType='sentence';}else if((_sentence$source_mess3=sentence.source_message_id)!==null&&_sentence$source_mess3!==void 0&&_sentence$source_mess3.includes('proceed_')||sentence.tags.includes('proceed')){threadType='proceed';}else if((_sentence$source_mess4=sentence.source_message_id)!==null&&_sentence$source_mess4!==void 0&&_sentence$source_mess4.includes('interpretation_')||sentence.tags.includes('interpretation')){threadType='interpretation';}console.log('식별된 스레드 타입:',threadType);// 스레드 ID 우선순위: source_thread_id > source_conversation_id\nconst threadId=sentence.source_thread_id||sentence.source_conversation_id;if(threadId){console.log('훈습 스레드 ID가 있음:',threadId,'(from:',sentence.source_thread_id?'source_thread_id':'source_conversation_id',')');sessionStorage.setItem('selectedSentenceForInput',\"\\\"\".concat(sentence.sentence,\"\\\"\\uC5D0 \\uB300\\uD574 \"));if(onNavigateToThread){console.log('훈습 스레드로 이동 중...');onNavigateToThread(threadId,threadType);}}else{console.log('훈습 스레드 ID가 없음, 페르소나 정보 찾는 중...');// 1단계: source_message_id에서 페르소나 ID 추출 시도\nlet personaId=null;if(sentence.source_message_id){const parts=sentence.source_message_id.split('_');if(parts.length>1){const candidatePersonaId=parts[1];if(personas[candidatePersonaId]){personaId=candidatePersonaId;console.log('source_message_id에서 페르소나 발견:',personaId);}}}// 2단계: tags에서 페르소나 ID 찾기\nif(!personaId){personaId=sentence.tags.find(tag=>tag!==threadType&&tag!=='sentence'&&tag!=='proceed'&&tag!=='interpretation'&&tag!=='verbalization'&&tag!=='letter'&&personas[tag]);if(personaId){console.log('태그에서 페르소나 발견:',personaId);}}if(personaId&&personas[personaId]){console.log('페르소나로 이동 준비:',personaId,'타입:',threadType);sessionStorage.setItem('selectedSentenceForInput',\"\\\"\".concat(sentence.sentence,\"\\\"\\uC5D0 \\uB300\\uD574 \"));// 해석 타입인 경우 특별 표시를 sessionStorage에 저장하여 App.tsx에서 처리하도록 함\nif(threadType==='interpretation'){sessionStorage.setItem('navigateToInterpretationMode','true');}if(onNavigateToPersona){console.log('페르소나로 이동 실행:',personaId);onNavigateToPersona(personaId,'sentence');}}else{console.error('페르소나 정보도 찾을 수 없음');console.error('sentence.tags:',sentence.tags);console.error('sentence.source_message_id:',sentence.source_message_id);console.error('사용 가능한 페르소나들:',Object.keys(personas));alert('해당 문장의 원본 위치를 찾을 수 없습니다. 페르소나 정보를 확인할 수 없습니다.');}}}break;case'delete':// 문장 삭제\nawait sentenceApi.deleteVaultSentence(sentence.id);setSentences(prev=>prev.filter(s=>s.id!==sentence.id));break;}}catch(error){console.error('액션 실행 실패:',error);alert('작업 실행 중 오류가 발생했습니다: '+error);}setConfirmationModal(null);};const togglePin=sentenceId=>{setPinnedSentences(prev=>{const newSet=new Set(prev);if(newSet.has(sentenceId)){newSet.delete(sentenceId);}else{newSet.add(sentenceId);}return newSet;});};const getPersonaName=sentence=>{var _sentence$source_mess5;// 언어화 태그 체크\nif(sentence.tags.includes('언어화')||sentence.tags.includes('verbalization')||(_sentence$source_mess5=sentence.source_message_id)!==null&&_sentence$source_mess5!==void 0&&_sentence$source_mess5.includes('verbalization')){return'언어화';}// 편지 태그 체크\nif(sentence.tags.includes('letter')){return'편지';}// source_message_id에서 페르소나 ID 추출 시도\nif(sentence.source_message_id){const parts=sentence.source_message_id.split('_');if(parts.length>1){const personaId=parts[1];const persona=personas[personaId];if(persona){return persona.name;}}}// tags에서 페르소나 이름 찾기 (thread_type이 아닌 것들만)\nconst excludeTypes=['interpretation','proceed','sentence','verbalization','letter'];for(const tag of sentence.tags){if(!excludeTypes.includes(tag)){const persona=personas[tag];if(persona){return persona.name;}}}return'시스템';};const getThreadTypeLabel=sentence=>{var _sentence$source_mess6,_sentence$source_mess7,_sentence$source_mess8,_sentence$source_mess9;// source_message_id나 tags에서 스레드 타입 추출\nif((_sentence$source_mess6=sentence.source_message_id)!==null&&_sentence$source_mess6!==void 0&&_sentence$source_mess6.includes('interpretation_')||sentence.tags.includes('interpretation')){return'해석';}else if((_sentence$source_mess7=sentence.source_message_id)!==null&&_sentence$source_mess7!==void 0&&_sentence$source_mess7.includes('proceed_')||sentence.tags.includes('proceed')){return'나아가기';}else if((_sentence$source_mess8=sentence.source_message_id)!==null&&_sentence$source_mess8!==void 0&&_sentence$source_mess8.includes('sentence_')||sentence.tags.includes('sentence')){return'문장';}else if((_sentence$source_mess9=sentence.source_message_id)!==null&&_sentence$source_mess9!==void 0&&_sentence$source_mess9.includes('verbalization')||sentence.tags.includes('verbalization')){return'언어화';}return'알수없음';};const getModalContent=()=>{if(!confirmationModal)return null;const{type}=confirmationModal;switch(type){case'interact':return{title:'상호작용 하기',message:\"\\uD574\\uB2F9 \\uBB38\\uC7A5\\uC774 \\uC628 \\uC2A4\\uB808\\uB4DC\\uB85C \\uC774\\uB3D9\\uD558\\uC5EC \\uC774 \\uBB38\\uC7A5\\uC5D0 \\uB300\\uD574 \\uC0C1\\uD638\\uC791\\uC6A9\\uC744 \\uC2DC\\uC791\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",confirmText:'상호작용',cancelText:'취소'};case'delete':return{title:'문장 삭제',message:'이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',confirmText:'삭제',cancelText:'취소'};default:return null;}};const toggleFilterDropdown=()=>{setShowFilterDropdown(!showFilterDropdown);};if(loading){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"div\",{style:{padding:'40px',textAlign:'center'},children:\"\\uB85C\\uB529 \\uC911...\"})});}const modalContent=getModalContent();return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(NavigationButton,{onClick:()=>handleNavigateFilter('prev'),disabled:currentFilterIndex===0,children:\"\\u2039\"}),/*#__PURE__*/_jsxs(FilterContainer,{className:\"filter-dropdown\",children:[/*#__PURE__*/_jsxs(FilterDropdownButton,{$isOpen:showFilterDropdown,onClick:toggleFilterDropdown,children:[currentFilter,/*#__PURE__*/_jsx(\"span\",{className:\"arrow\",children:\"\\u25BC\"})]}),/*#__PURE__*/_jsx(FilterDropdownMenu,{$isOpen:showFilterDropdown,children:filterOptions.map(option=>/*#__PURE__*/_jsx(FilterDropdownItem,{$isSelected:option===currentFilter,onClick:()=>handleFilterChange(option),children:option},option))})]}),/*#__PURE__*/_jsx(NavigationButton,{onClick:()=>handleNavigateFilter('next'),disabled:currentFilterIndex===filterOptions.length-1,children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(ContentArea,{children:filteredSentences.length===0?/*#__PURE__*/_jsxs(EmptyState,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"\\uC800\\uC7A5\\uB41C \\uBB38\\uC7A5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:\"\\uD6C8\\uC2B5 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC7A5\\uC744 \\uC800\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uD574\\uBCF4\\uC138\\uC694\"})]}):/*#__PURE__*/_jsx(SentenceGrid,{children:filteredSentences.map(sentence=>/*#__PURE__*/_jsxs(SentenceContainer,{children:[/*#__PURE__*/_jsxs(SentenceRow,{$isPinned:pinnedSentences.has(sentence.id),$isHighlighted:sentence.is_highlighted,onClick:e=>handleSentenceClick(e,sentence),style:{'--has-memo':sentence.memo_content?'50px':'0px'},children:[/*#__PURE__*/_jsxs(SentenceContent,{children:[/*#__PURE__*/_jsx(SentenceText,{children:sentence.sentence}),sentence.memo_content&&/*#__PURE__*/_jsxs(MemoPreview,{children:[\"\\uD83D\\uDCDD \",sentence.memo_content]})]}),/*#__PURE__*/_jsxs(StatusIndicators,{children:[sentence.is_highlighted&&/*#__PURE__*/_jsx(StatusIndicator,{$type:\"highlight\",$color:sentence.highlight_color||'yellow',title:\"\\uD558\\uC774\\uB77C\\uC774\\uD2B8 (\".concat(sentence.highlight_color||'yellow',\")\")}),sentence.memo_content&&/*#__PURE__*/_jsx(StatusIndicator,{$type:\"memo\",title:\"\\uBA54\\uBAA8 \\uC788\\uC74C\"})]}),/*#__PURE__*/_jsx(PinIcon,{$isPinned:pinnedSentences.has(sentence.id),onClick:e=>{e.stopPropagation();togglePin(sentence.id);}})]}),/*#__PURE__*/_jsxs(SentenceMetaExternal,{children:[/*#__PURE__*/_jsxs(PersonaLabel,{children:[getPersonaName(sentence),\" - \",getThreadTypeLabel(sentence)]}),/*#__PURE__*/_jsx(DateLabel,{children:new Date(sentence.created_at).toLocaleDateString('ko-KR')})]})]},sentence.id))})}),contextMenu&&/*#__PURE__*/_jsxs(ContextMenuContainer,{$x:contextMenu.x,$y:contextMenu.y,children:[/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('interact',contextMenu.sentence),children:\"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"}),/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('delete',contextMenu.sentence),children:\"\\uC0AD\\uC81C\"})]}),confirmationModal&&modalContent&&/*#__PURE__*/_jsx(ModalOverlay,{onClick:()=>setConfirmationModal(null),children:/*#__PURE__*/_jsxs(ModalContent,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(ModalTitle,{children:modalContent.title}),/*#__PURE__*/_jsx(ModalMessage,{children:modalContent.message}),/*#__PURE__*/_jsxs(ModalButtons,{children:[/*#__PURE__*/_jsx(ModalButton,{$variant:\"primary\",onClick:handleConfirmAction,children:modalContent.confirmText}),/*#__PURE__*/_jsx(ModalButton,{$variant:\"secondary\",onClick:()=>setConfirmationModal(null),children:modalContent.cancelText})]})]})})]});};export default SentenceVaultView;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","sentenceApi","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","FilterDropdownButton","button","_templateObject3","props","$isOpen","FilterDropdownMenu","_templateObject4","FilterDropdownItem","_templateObject5","$isSelected","FilterContainer","_templateObject6","NavigationButton","_templateObject7","ContentArea","_templateObject8","SentenceGrid","_templateObject9","SentenceContainer","_templateObject0","SentenceRow","_templateObject1","$isHighlighted","$isPinned","concat","SentenceContent","_templateObject10","SentenceText","_templateObject11","SentenceMetaExternal","_templateObject12","PersonaLabel","span","_templateObject13","DateLabel","_templateObject14","PinIcon","_templateObject15","EmptyState","_templateObject16","ContextMenuContainer","_templateObject17","$y","$x","ContextMenuItem","_templateObject18","ModalOverlay","_templateObject19","ModalContent","_templateObject20","ModalTitle","h3","_templateObject21","ModalMessage","p","_templateObject22","ModalButtons","_templateObject23","ModalButton","_templateObject24","$variant","StatusIndicators","_templateObject25","StatusIndicator","_templateObject26","$type","$color","MemoPreview","_templateObject27","SentenceVaultView","_ref","personas","onNavigateToPersona","onNavigateToThread","onNavigateToPersonaWithSentence","sentences","setSentences","filteredSentences","setFilteredSentences","currentFilter","setCurrentFilter","loading","setLoading","pinnedSentences","setPinnedSentences","Set","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","showFilterDropdown","setShowFilterDropdown","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadData","sentenceData","getVaultSentences","console","log","personaNames","Object","values","map","name","error","applyFilter","filtered","filter","s","_s$source_message_id","tags","includes","source_message_id","personaId","keys","find","id","pinned","has","unpinned","sort","a","b","Date","created_at","getTime","handleClickOutside","document","addEventListener","removeEventListener","event","target","closest","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","handleSentenceClick","sentence","preventDefault","stopPropagation","substring","clientX","clientY","x","y","handleContextMenuAction","action","type","togglePin","handleConfirmAction","_sentence$source_mess","source_conversation_id","source_thread_id","source_thread_type","sessionStorage","setItem","_sentence$source_mess2","_sentence$source_mess3","_sentence$source_mess4","threadType","threadId","parts","split","candidatePersonaId","tag","alert","deleteVaultSentence","prev","sentenceId","newSet","delete","add","getPersonaName","_sentence$source_mess5","persona","excludeTypes","getThreadTypeLabel","_sentence$source_mess6","_sentence$source_mess7","_sentence$source_mess8","_sentence$source_mess9","getModalContent","title","message","confirmText","cancelText","toggleFilterDropdown","children","style","padding","textAlign","modalContent","onClick","disabled","className","option","is_highlighted","e","memo_content","highlight_color","toLocaleDateString"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/vault/components/SentenceVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, SentenceVaultItem } from '../../training/api/sentenceApi';\n\nimport { Persona } from '../../shared/types';\n\ninterface SentenceVaultViewProps {\n  personas: Record<string, Persona>;\n  onNavigateToPersona: (personaId: string, mode: 'sentence') => void;\n  onNavigateToThread: (threadId: string, threadType: string, interactionMessage?: string) => void;\n  onNavigateToPersonaWithSentence?: (personaId: string, mode: 'sentence', selectedSentence: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  sentence: SentenceVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'delete';\n  sentence: SentenceVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterDropdownButton = styled.button<{ $isOpen: boolean }>`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n\nconst FilterDropdownMenu = styled.div<{ $isOpen: boolean }>`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n\nconst FilterDropdownItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst SentenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst SentenceRow = styled.div<{ $isPinned: boolean; $isHighlighted?: boolean }>`\n  width: 100%;\n  background: ${props => props.$isHighlighted \n    ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' \n    : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'\n  };\n  border: 1px solid ${props => props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: ${props => props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    background: ${props => props.$isHighlighted\n      ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)'\n      : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'\n    };\n  }\n  \n  ${props => props.$isPinned && `\n    background: ${props.$isHighlighted \n      ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' \n      : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'\n    };\n    border-color: ${props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: ${props.$isHighlighted\n        ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)'\n        : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'\n      };\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: ${props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    }\n  `}\n`;\n\nconst SentenceContent = styled.div`\n  flex: 1;\n  padding-bottom: ${props => \n    // 메모가 있으면 하단 여백 추가\n    'var(--has-memo, 0px)'\n  };\n`;\n\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n\nconst SentenceMetaExternal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n\nconst PinIcon = styled.div<{ $isPinned: boolean }>`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#333' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #333;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#333' : '#666'};\n  }\n  \n  &::before {\n    content: \"📌\";\n    filter: grayscale(100%);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    color: #495057;\n    border-color: #adb5bd;\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      border-color: #6c757d;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst StatusIndicators = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 40px;\n  display: flex;\n  gap: 4px;\n  z-index: 1;\n`;\n\nconst StatusIndicator = styled.div<{ $type: 'highlight' | 'memo'; $color?: string }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  color: white;\n  font-weight: bold;\n  background: ${props => {\n    if (props.$type === 'highlight') {\n      return props.$color === 'yellow' ? '#ffc107' : \n             props.$color === 'green' ? '#28a745' :\n             props.$color === 'blue' ? '#007bff' : '#ffc107';\n    }\n    return '#6c757d'; // 메모 색상\n  }};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  \n  &::before {\n    content: ${props => props.$type === 'highlight' ? '\"H\"' : '\"M\"'};\n  }\n`;\n\nconst MemoPreview = styled.div`\n  position: absolute;\n  bottom: 8px;\n  left: 20px;\n  right: 60px;\n  background: rgba(108, 117, 125, 0.1);\n  border-radius: 8px;\n  padding: 6px 10px;\n  font-size: 12px;\n  color: #6c757d;\n  font-style: italic;\n  max-height: 40px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nconst SentenceVaultView: React.FC<SentenceVaultViewProps> = ({\n  personas,\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  const [sentences, setSentences] = useState<SentenceVaultItem[]>([]);\n  const [filteredSentences, setFilteredSentences] = useState<SentenceVaultItem[]>([]);\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedSentences, setPinnedSentences] = useState<Set<string>>(new Set());\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '언어화', '편지']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 필터 옵션에 페르소나들 추가 (props로 받은 personas 사용)\n      const personaNames = Object.values(personas).map(p => p.name);\n      setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [personas]);\n\n  const applyFilter = useCallback(() => {\n    let filtered = [...sentences];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => \n          s.tags.includes('verbalization') || \n          s.tags.includes('언어화') ||\n          s.source_message_id?.includes('verbalization')\n        );\n      } else if (currentFilter === '편지') {\n        filtered = filtered.filter(s => s.tags.includes('letter'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n    \n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n    setFilteredSentences([...pinned, ...unpinned]);\n  }, [sentences, currentFilter, pinnedSentences, personas]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences, applyFilter]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const handleSentenceClick = (event: React.MouseEvent, sentence: SentenceVaultItem) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    console.log('문장 클릭됨:', sentence.sentence.substring(0, 50));\n    console.log('클릭 위치:', event.clientX, event.clientY);\n    \n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n    \n    console.log('컨텍스트 메뉴 설정됨');\n  };\n\n  const handleContextMenuAction = (action: string, sentence: SentenceVaultItem) => {\n    console.log('컨텍스트 메뉴 액션:', action);\n    setContextMenu(null);\n    \n    switch (action) {\n      case 'interact':\n      case 'delete':\n        setConfirmationModal({ type: action as any, sentence });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    \n    const { type, sentence } = confirmationModal;\n    \n    try {\n      switch (type) {\n        case 'interact':\n          console.log('=== 상호작용 하기 시작 ===');\n          console.log('문장 데이터:', sentence);\n          console.log('tags:', sentence.tags);\n          console.log('source_message_id:', sentence.source_message_id);\n          console.log('source_conversation_id:', sentence.source_conversation_id);\n          console.log('source_thread_id:', sentence.source_thread_id);\n          console.log('source_thread_type:', sentence.source_thread_type);\n          console.log('사용 가능한 페르소나들:', Object.keys(personas));\n          \n          // 해당 문장의 출처 스레드로 이동하면서 입력창에 \\\"문장에 대해\\\" 형태로 설정\n          if (sentence.tags.includes('verbalization') || sentence.tags.includes('언어화') || sentence.source_message_id?.includes('verbalization')) {\n            console.log('언어화 문장으로 인식됨');\n            // 언어화에서 온 문장인 경우 - 언어화 스레드로 이동\n            if (sentence.source_conversation_id && sentence.source_conversation_id !== 'verbalization_chat') {\n              console.log('언어화 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToThread) {\n                console.log('언어화 스레드로 이동 중...');\n                onNavigateToThread(sentence.source_conversation_id, 'verbalization');\n              }\n            } else {\n              console.log('언어화 스레드 ID가 없어서 언어화 모드로만 전환');\n              // source_conversation_id가 없으면 언어화 모드로만 전환\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToPersona) {\n                console.log('언어화 페르소나로 이동 중...');\n                // 언어화는 verbalization ID 사용\n                onNavigateToPersona('verbalization', 'sentence');\n              }\n            }\n          } else {\n            console.log('훈습 문장으로 인식됨');\n            // 훈습에서 온 문장인 경우 - source_message_id에서 스레드 타입 식별\n            let threadType = 'interpretation'; // 기본값\n            \n            if (sentence.source_message_id?.includes('sentence_') || sentence.tags.includes('sentence')) {\n              threadType = 'sentence';\n            } else if (sentence.source_message_id?.includes('proceed_') || sentence.tags.includes('proceed')) {\n              threadType = 'proceed';\n            } else if (sentence.source_message_id?.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n              threadType = 'interpretation';\n            }\n            \n            console.log('식별된 스레드 타입:', threadType);\n            \n            // 스레드 ID 우선순위: source_thread_id > source_conversation_id\n            const threadId = sentence.source_thread_id || sentence.source_conversation_id;\n            \n            if (threadId) {\n              console.log('훈습 스레드 ID가 있음:', threadId, '(from:', sentence.source_thread_id ? 'source_thread_id' : 'source_conversation_id', ')');\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToThread) {\n                console.log('훈습 스레드로 이동 중...');\n                onNavigateToThread(threadId, threadType);\n              }\n            } else {\n              console.log('훈습 스레드 ID가 없음, 페르소나 정보 찾는 중...');\n              \n              // 1단계: source_message_id에서 페르소나 ID 추출 시도\n              let personaId = null;\n              if (sentence.source_message_id) {\n                const parts = sentence.source_message_id.split('_');\n                if (parts.length > 1) {\n                  const candidatePersonaId = parts[1];\n                  if (personas[candidatePersonaId]) {\n                    personaId = candidatePersonaId;\n                    console.log('source_message_id에서 페르소나 발견:', personaId);\n                  }\n                }\n              }\n              \n              // 2단계: tags에서 페르소나 ID 찾기\n              if (!personaId) {\n                personaId = sentence.tags.find(tag => \n                  tag !== threadType && \n                  tag !== 'sentence' && \n                  tag !== 'proceed' && \n                  tag !== 'interpretation' && \n                  tag !== 'verbalization' &&\n                  tag !== 'letter' &&\n                  personas[tag]\n                );\n                if (personaId) {\n                  console.log('태그에서 페르소나 발견:', personaId);\n                }\n              }\n              \n              if (personaId && personas[personaId]) {\n                console.log('페르소나로 이동 준비:', personaId, '타입:', threadType);\n                sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n                \n                // 해석 타입인 경우 특별 표시를 sessionStorage에 저장하여 App.tsx에서 처리하도록 함\n                if (threadType === 'interpretation') {\n                  sessionStorage.setItem('navigateToInterpretationMode', 'true');\n                }\n                \n                if (onNavigateToPersona) {\n                  console.log('페르소나로 이동 실행:', personaId);\n                  onNavigateToPersona(personaId, 'sentence');\n                }\n              } else {\n                console.error('페르소나 정보도 찾을 수 없음');\n                console.error('sentence.tags:', sentence.tags);\n                console.error('sentence.source_message_id:', sentence.source_message_id);\n                console.error('사용 가능한 페르소나들:', Object.keys(personas));\n                alert('해당 문장의 원본 위치를 찾을 수 없습니다. 페르소나 정보를 확인할 수 없습니다.');\n              }\n            }\n          }\n          \n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n      alert('작업 실행 중 오류가 발생했습니다: ' + error);\n    }\n    \n    setConfirmationModal(null);\n  };\n\n  const togglePin = (sentenceId: string) => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n\n\n\n  const getPersonaName = (sentence: SentenceVaultItem): string => {\n    // 언어화 태그 체크\n    if (sentence.tags.includes('언어화') || \n        sentence.tags.includes('verbalization') ||\n        sentence.source_message_id?.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    // 편지 태그 체크\n    if (sentence.tags.includes('letter')) {\n      return '편지';\n    }\n    \n    // source_message_id에서 페르소나 ID 추출 시도\n    if (sentence.source_message_id) {\n      const parts = sentence.source_message_id.split('_');\n      if (parts.length > 1) {\n        const personaId = parts[1];\n        const persona = personas[personaId];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n    \n    // tags에서 페르소나 이름 찾기 (thread_type이 아닌 것들만)\n    const excludeTypes = ['interpretation', 'proceed', 'sentence', 'verbalization', 'letter'];\n    for (const tag of sentence.tags) {\n      if (!excludeTypes.includes(tag)) {\n      const persona = personas[tag];\n      if (persona) {\n        return persona.name;\n        }\n      }\n    }\n    \n    return '시스템';\n  };\n\n  const getThreadTypeLabel = (sentence: SentenceVaultItem): string => {\n    // source_message_id나 tags에서 스레드 타입 추출\n    if (sentence.source_message_id?.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n      return '해석';\n    } else if (sentence.source_message_id?.includes('proceed_') || sentence.tags.includes('proceed')) {\n      return '나아가기';\n    } else if (sentence.source_message_id?.includes('sentence_') || sentence.tags.includes('sentence')) {\n      return '문장';\n    } else if (sentence.source_message_id?.includes('verbalization') || sentence.tags.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    return '알수없음';\n  };\n\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    \n    const { type } = confirmationModal;\n    \n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 문장이 온 스레드로 이동하여 이 문장에 대해 상호작용을 시작하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: '40px', textAlign: 'center' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  const modalContent = getModalContent();\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <FilterContainer className=\"filter-dropdown\">\n          <FilterDropdownButton\n            $isOpen={showFilterDropdown}\n            onClick={toggleFilterDropdown}\n          >\n            {currentFilter}\n            <span className=\"arrow\">▼</span>\n          </FilterDropdownButton>\n          <FilterDropdownMenu $isOpen={showFilterDropdown}>\n            {filterOptions.map(option => (\n              <FilterDropdownItem\n                key={option}\n                $isSelected={option === currentFilter}\n                onClick={() => handleFilterChange(option)}\n              >\n                {option}\n              </FilterDropdownItem>\n            ))}\n          </FilterDropdownMenu>\n        </FilterContainer>\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n      </Header>\n\n      <ContentArea>\n        {filteredSentences.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 문장이 없습니다</div>\n            <div className=\"description\">\n              훈습 페이지에서 문장을 저장고에 저장해보세요\n            </div>\n          </EmptyState>\n        ) : (\n          <SentenceGrid>\n            {filteredSentences.map(sentence => (\n              <SentenceContainer key={sentence.id}>\n                <SentenceRow\n                  $isPinned={pinnedSentences.has(sentence.id)}\n                  $isHighlighted={sentence.is_highlighted}\n                  onClick={(e) => handleSentenceClick(e, sentence)}\n                  style={{\n                    '--has-memo': sentence.memo_content ? '50px' : '0px'\n                  } as any}\n                >\n                  <SentenceContent>\n                    <SentenceText>{sentence.sentence}</SentenceText>\n                    {sentence.memo_content && (\n                      <MemoPreview>\n                        📝 {sentence.memo_content}\n                      </MemoPreview>\n                    )}\n                  </SentenceContent>\n                  \n                  <StatusIndicators>\n                    {sentence.is_highlighted && (\n                      <StatusIndicator \n                        $type=\"highlight\" \n                        $color={sentence.highlight_color || 'yellow'}\n                        title={`하이라이트 (${sentence.highlight_color || 'yellow'})`}\n                      />\n                    )}\n                    {sentence.memo_content && (\n                      <StatusIndicator \n                        $type=\"memo\" \n                        title=\"메모 있음\"\n                      />\n                    )}\n                  </StatusIndicators>\n                  \n                  <PinIcon\n                    $isPinned={pinnedSentences.has(sentence.id)}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      togglePin(sentence.id);\n                    }}\n                  />\n                </SentenceRow>\n                <SentenceMetaExternal>\n                  <PersonaLabel>{getPersonaName(sentence)} - {getThreadTypeLabel(sentence)}</PersonaLabel>\n                  <DateLabel>{new Date(sentence.created_at).toLocaleDateString('ko-KR')}</DateLabel>\n                </SentenceMetaExternal>\n              </SentenceContainer>\n            ))}\n          </SentenceGrid>\n        )}\n      </ContentArea>\n\n      {/* 컨텍스트 메뉴 */}\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem onClick={() => handleContextMenuAction('interact', contextMenu.sentence)}>\n            상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('delete', contextMenu.sentence)}>\n            삭제\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {/* 확인 모달 */}\n      {confirmationModal && modalContent && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>{modalContent.title}</ModalTitle>\n            <ModalMessage>{modalContent.message}</ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {modalContent.confirmText}\n              </ModalButton>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                {modalContent.cancelText}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default SentenceVaultView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}