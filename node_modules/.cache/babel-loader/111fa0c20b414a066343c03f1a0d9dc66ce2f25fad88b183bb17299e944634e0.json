{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useChat } from './hooks/useChat';\nimport ConversationSidebar from './components/ConversationSidebar';\nimport PersonaSidebar from './components/PersonaSidebar';\nimport ChatArea from './components/ChatArea';\nimport { GlobalStyle, AppContainer } from './styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isPersonaSidebarCollapsed, setIsPersonaSidebarCollapsed] = useState(false);\n  const [isConversationSidebarCollapsed, setIsConversationSidebarCollapsed] = useState(false);\n  const {\n    // State\n    personas,\n    globalMessages,\n    conversations,\n    selectedConversation,\n    selectedPersona,\n    isLoading,\n    error,\n    // Actions\n    sendInitialMessage,\n    continueConversation,\n    selectConversation,\n    selectPersona,\n    clearError\n  } = useChat();\n\n  // 페르소나 사이드바 토글 - 두 사이드바 모두 제어\n  const togglePersonaSidebar = () => {\n    const newCollapsedState = !isPersonaSidebarCollapsed;\n    setIsPersonaSidebarCollapsed(newCollapsedState);\n\n    // 페르소나 사이드바를 접을 때는 대화 목록 사이드바도 함께 접기\n    if (newCollapsedState) {\n      setIsConversationSidebarCollapsed(true);\n    } else {\n      // 페르소나 사이드바를 펼칠 때는 대화 목록 사이드바도 함께 펼치기\n      setIsConversationSidebarCollapsed(false);\n    }\n  };\n\n  // 대화 목록 사이드바 토글 - 자기 자신만 제어\n  const toggleConversationSidebar = () => {\n    setIsConversationSidebarCollapsed(!isConversationSidebarCollapsed);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PersonaSidebar, {\n        personas: personas,\n        selectedPersona: selectedPersona,\n        onSelectPersona: selectPersona,\n        conversations: conversations,\n        onSelectConversation: selectConversation,\n        selectedConversation: selectedConversation,\n        isCollapsed: isPersonaSidebarCollapsed,\n        onToggle: togglePersonaSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConversationSidebar, {\n        globalMessages: globalMessages,\n        selectedConversation: selectedConversation,\n        onSelectConversation: selectConversation,\n        isCollapsed: isConversationSidebarCollapsed,\n        onToggle: toggleConversationSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        selectedConversation: selectedConversation,\n        conversations: conversations,\n        personas: personas,\n        globalMessages: globalMessages,\n        isLoading: isLoading,\n        error: error,\n        onSendInitialMessage: sendInitialMessage,\n        onContinueConversation: continueConversation,\n        onClearError: clearError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"Xk6+EfxuMEjs2Rl8HsVpz7+L8XY=\", false, function () {\n  return [useChat];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useChat","ConversationSidebar","PersonaSidebar","ChatArea","GlobalStyle","AppContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isPersonaSidebarCollapsed","setIsPersonaSidebarCollapsed","isConversationSidebarCollapsed","setIsConversationSidebarCollapsed","personas","globalMessages","conversations","selectedConversation","selectedPersona","isLoading","error","sendInitialMessage","continueConversation","selectConversation","selectPersona","clearError","togglePersonaSidebar","newCollapsedState","toggleConversationSidebar","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectPersona","onSelectConversation","isCollapsed","onToggle","onSendInitialMessage","onContinueConversation","onClearError","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useChat } from './hooks/useChat';\r\nimport ConversationSidebar from './components/ConversationSidebar';\r\nimport PersonaSidebar from './components/PersonaSidebar';\r\nimport ChatArea from './components/ChatArea';\r\nimport { GlobalStyle, AppContainer } from './styles/GlobalStyle';\r\n\r\nconst App: React.FC = () => {\r\n  const [isPersonaSidebarCollapsed, setIsPersonaSidebarCollapsed] = useState(false);\r\n  const [isConversationSidebarCollapsed, setIsConversationSidebarCollapsed] = useState(false);\r\n\r\n  const {\r\n    // State\r\n    personas,\r\n    globalMessages,\r\n    conversations,\r\n    selectedConversation,\r\n    selectedPersona,\r\n    isLoading,\r\n    error,\r\n\r\n    // Actions\r\n    sendInitialMessage,\r\n    continueConversation,\r\n    selectConversation,\r\n    selectPersona,\r\n    clearError,\r\n  } = useChat();\r\n\r\n  // 페르소나 사이드바 토글 - 두 사이드바 모두 제어\r\n  const togglePersonaSidebar = () => {\r\n    const newCollapsedState = !isPersonaSidebarCollapsed;\r\n    setIsPersonaSidebarCollapsed(newCollapsedState);\r\n    \r\n    // 페르소나 사이드바를 접을 때는 대화 목록 사이드바도 함께 접기\r\n    if (newCollapsedState) {\r\n      setIsConversationSidebarCollapsed(true);\r\n    } else {\r\n      // 페르소나 사이드바를 펼칠 때는 대화 목록 사이드바도 함께 펼치기\r\n      setIsConversationSidebarCollapsed(false);\r\n    }\r\n  };\r\n\r\n  // 대화 목록 사이드바 토글 - 자기 자신만 제어\r\n  const toggleConversationSidebar = () => {\r\n    setIsConversationSidebarCollapsed(!isConversationSidebarCollapsed);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AppContainer>\r\n        {/* 왼쪽 첫 번째 사이드바 - 페르소나 선택 */}\r\n        <PersonaSidebar\r\n          personas={personas}\r\n          selectedPersona={selectedPersona}\r\n          onSelectPersona={selectPersona}\r\n          conversations={conversations}\r\n          onSelectConversation={selectConversation}\r\n          selectedConversation={selectedConversation}\r\n          isCollapsed={isPersonaSidebarCollapsed}\r\n          onToggle={togglePersonaSidebar}\r\n        />\r\n\r\n        {/* 왼쪽 두 번째 사이드바 - 대화 목록 */}\r\n        <ConversationSidebar\r\n          globalMessages={globalMessages}\r\n          selectedConversation={selectedConversation}\r\n          onSelectConversation={selectConversation}\r\n          isCollapsed={isConversationSidebarCollapsed}\r\n          onToggle={toggleConversationSidebar}\r\n        />\r\n\r\n        {/* 메인 채팅 영역 */}\r\n        <ChatArea\r\n          selectedConversation={selectedConversation}\r\n          conversations={conversations}\r\n          personas={personas}\r\n          globalMessages={globalMessages}\r\n          isLoading={isLoading}\r\n          error={error}\r\n          onSendInitialMessage={sendInitialMessage}\r\n          onContinueConversation={continueConversation}\r\n          onClearError={clearError}\r\n        />\r\n      </AppContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,WAAW,EAAEC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjE,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,yBAAyB,EAAEC,4BAA4B,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjF,MAAM,CAACe,8BAA8B,EAAEC,iCAAiC,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3F,MAAM;IACJ;IACAiB,QAAQ;IACRC,cAAc;IACdC,aAAa;IACbC,oBAAoB;IACpBC,eAAe;IACfC,SAAS;IACTC,KAAK;IAEL;IACAC,kBAAkB;IAClBC,oBAAoB;IACpBC,kBAAkB;IAClBC,aAAa;IACbC;EACF,CAAC,GAAG3B,OAAO,CAAC,CAAC;;EAEb;EACA,MAAM4B,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,iBAAiB,GAAG,CAACjB,yBAAyB;IACpDC,4BAA4B,CAACgB,iBAAiB,CAAC;;IAE/C;IACA,IAAIA,iBAAiB,EAAE;MACrBd,iCAAiC,CAAC,IAAI,CAAC;IACzC,CAAC,MAAM;MACL;MACAA,iCAAiC,CAAC,KAAK,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAMe,yBAAyB,GAAGA,CAAA,KAAM;IACtCf,iCAAiC,CAAC,CAACD,8BAA8B,CAAC;EACpE,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA,CAACH,WAAW;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf5B,OAAA,CAACF,YAAY;MAAA0B,QAAA,gBAEXxB,OAAA,CAACL,cAAc;QACbc,QAAQ,EAAEA,QAAS;QACnBI,eAAe,EAAEA,eAAgB;QACjCgB,eAAe,EAAEV,aAAc;QAC/BR,aAAa,EAAEA,aAAc;QAC7BmB,oBAAoB,EAAEZ,kBAAmB;QACzCN,oBAAoB,EAAEA,oBAAqB;QAC3CmB,WAAW,EAAE1B,yBAA0B;QACvC2B,QAAQ,EAAEX;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAGF5B,OAAA,CAACN,mBAAmB;QAClBgB,cAAc,EAAEA,cAAe;QAC/BE,oBAAoB,EAAEA,oBAAqB;QAC3CkB,oBAAoB,EAAEZ,kBAAmB;QACzCa,WAAW,EAAExB,8BAA+B;QAC5CyB,QAAQ,EAAET;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAGF5B,OAAA,CAACJ,QAAQ;QACPgB,oBAAoB,EAAEA,oBAAqB;QAC3CD,aAAa,EAAEA,aAAc;QAC7BF,QAAQ,EAAEA,QAAS;QACnBC,cAAc,EAAEA,cAAe;QAC/BI,SAAS,EAAEA,SAAU;QACrBC,KAAK,EAAEA,KAAM;QACbkB,oBAAoB,EAAEjB,kBAAmB;QACzCkB,sBAAsB,EAAEjB,oBAAqB;QAC7CkB,YAAY,EAAEf;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA,eACf,CAAC;AAEP,CAAC;AAACxB,EAAA,CAjFID,GAAa;EAAA,QAoBbV,OAAO;AAAA;AAAA2C,EAAA,GApBPjC,GAAa;AAmFnB,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}