{"ast":null,"code":"import _objectSpread from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0;import React,{useState,useEffect}from'react';import{Sidebar,SidebarHeader,SidebarTitle,SidebarContent,SidebarMenuContent,SidebarToggleButton}from'../styles/GlobalStyle';import{chatApi}from'../api/chatApi';import styled from'styled-components';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";// 새로운 스타일 컴포넌트들\nconst AccordionContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));const AccordionItem=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid #f0f0f0;\\n\"])));const AccordionHeader=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 12px 16px;\\n  cursor: pointer;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: \",\";\\n  border-radius: \",\";\\n  margin: \",\";\\n  transition: all 0.2s ease;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  &:hover {\\n    background: \",\";\\n  }\\n\"])),props=>props.isSelected?'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)':'transparent',props=>props.isSelected?'white':'#333',props=>props.isSelected?'600':'500',props=>props.isSelected?'8px':'0',props=>props.isSelected?'4px 8px':'0',props=>props.isSelected?'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)':'#f8f9fa');const AccordionIcon=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  transform: rotate(\",\");\\n  transition: transform 0.2s ease;\\n  font-size: 12px;\\n\"])),props=>props.isExpanded?'90deg':'0deg');const ThreadsList=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  max-height: \",\";\\n  overflow: hidden;\\n  transition: max-height 0.3s ease;\\n  background: #f8f9fa;\\n\"])),props=>props.isExpanded?'300px':'0');const ThreadItem=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  padding: 8px 32px 8px 32px;\\n  cursor: pointer;\\n  color: \",\";\\n  font-size: 14px;\\n  border-left: 3px solid \",\";\\n  background: \",\";\\n  transition: all 0.2s ease;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  &:hover {\\n    background: #f8f9fa;\\n    color: #6c757d;\\n  }\\n\"])),props=>props.isSelected?'#6c757d':'#666',props=>props.isSelected?'#6c757d':'transparent',props=>props.isSelected?'#f8f9fa':'transparent');const ThreadItemContent=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));const DeleteThreadButton=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n  color: #999;\\n  font-size: 14px;\\n  padding: 4px;\\n  border-radius: 4px;\\n  opacity: 0;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background: #e9ecef;\\n    color: #dc3545;\\n  }\\n\\n  \",\":hover & {\\n    opacity: 1;\\n  }\\n\"])),ThreadItem);const ThreadTitle=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  font-weight: 500;\\n  margin-bottom: 2px;\\n\"])));const ThreadTime=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  opacity: 0.7;\\n\"])));const ConversationSidebar=_ref=>{let{selectedItem,onSelectItem,isCollapsed=false,onToggle,selectedPersonaName,selectedPersonaId,refreshTrigger}=_ref;const[expandedItems,setExpandedItems]=useState(new Set());const[threads,setThreads]=useState({interpretation:[],proceed:[],sentence:[]});const[selectedThreadId,setSelectedThreadId]=useState(null);const menuItems=[{id:'interpretation',name:'해석'},{id:'proceed',name:'나아가기'},{id:'sentence',name:'문장'},{id:'interaction_history',name:'상호작용 기록'}];// 스레드 데이터 로드\nuseEffect(()=>{const loadThreads=async()=>{if(!selectedPersonaId)return;try{const response=await chatApi.getPersonaThreads(selectedPersonaId);if(response.data){const threadsByType={interpretation:response.data.filter(t=>t.thread_type==='interpretation'),proceed:response.data.filter(t=>t.thread_type==='proceed'),sentence:response.data.filter(t=>t.thread_type==='sentence')};setThreads(threadsByType);}}catch(error){console.error('스레드 로드 실패:',error);}};loadThreads();},[selectedPersonaId,refreshTrigger]);const handleAccordionToggle=itemId=>{const newExpanded=new Set(expandedItems);if(newExpanded.has(itemId)){newExpanded.delete(itemId);}else{newExpanded.add(itemId);}setExpandedItems(newExpanded);// 아코디언 토글 시에만 메인 아이템 선택 (스레드가 없는 경우에만)\nconst itemThreads=threads[itemId]||[];if(itemThreads.length===0){onSelectItem(itemId);}};const handleThreadSelect=(threadId,itemType)=>{setSelectedThreadId(threadId);onSelectItem(\"\".concat(itemType,\"-thread-\").concat(threadId));};const formatTime=timestamp=>{return new Date(timestamp).toLocaleTimeString('ko-KR',{hour:'2-digit',minute:'2-digit'});};const handleDeleteThread=async(threadId,e)=>{e.stopPropagation();// 이벤트 버블링 방지\nif(window.confirm('이 스레드를 삭제하시겠습니까?')){try{const result=await chatApi.deleteThread(threadId);if(result.data){// 스레드 목록에서 제거\nconst updatedThreads=_objectSpread({},threads);Object.keys(updatedThreads).forEach(key=>{updatedThreads[key]=updatedThreads[key].filter(t=>t.id!==threadId);});setThreads(updatedThreads);// 선택된 스레드가 삭제된 경우 선택 해제\nif(selectedThreadId===threadId){setSelectedThreadId(null);}}}catch(error){console.error('스레드 삭제 실패:',error);alert('스레드 삭제에 실패했습니다');}}};const renderThreads=itemId=>{const itemThreads=threads[itemId]||[];const isExpanded=expandedItems.has(itemId);return/*#__PURE__*/_jsxs(ThreadsList,{isExpanded:isExpanded,children:[itemThreads.map((thread,index)=>/*#__PURE__*/_jsxs(ThreadItem,{isSelected:selectedThreadId===thread.id,onClick:()=>handleThreadSelect(thread.id,itemId),children:[/*#__PURE__*/_jsxs(ThreadItemContent,{children:[/*#__PURE__*/_jsxs(ThreadTitle,{children:[itemId==='interpretation'&&\"\\uD574\\uC11D #\".concat(index+1),itemId==='proceed'&&\"\\uB098\\uC544\\uAC00\\uAE30 #\".concat(index+1),itemId==='sentence'&&\"\\uBB38\\uC7A5 #\".concat(index+1)]}),/*#__PURE__*/_jsxs(ThreadTime,{children:[formatTime(thread.created_at),\" \\u2022 \",thread.messages.length,\"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]})]}),/*#__PURE__*/_jsx(DeleteThreadButton,{onClick:e=>handleDeleteThread(thread.id,e),title:\"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]},thread.id)),itemThreads.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px 32px',fontSize:'14px',color:'#999'},children:\"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"})]});};return/*#__PURE__*/_jsxs(Sidebar,{width:\"250px\",isCollapsed:isCollapsed,variant:\"conversation\",children:[onToggle&&/*#__PURE__*/_jsx(SidebarToggleButton,{onClick:onToggle,children:isCollapsed?'▷':'◁'}),/*#__PURE__*/_jsx(SidebarHeader,{isCollapsed:isCollapsed,children:selectedPersonaName&&/*#__PURE__*/_jsx(SidebarTitle,{isCollapsed:isCollapsed,children:selectedPersonaName})}),/*#__PURE__*/_jsx(SidebarContent,{isCollapsed:isCollapsed,children:/*#__PURE__*/_jsx(SidebarMenuContent,{variant:\"conversation\",children:/*#__PURE__*/_jsx(AccordionContainer,{children:menuItems.map(item=>/*#__PURE__*/_jsxs(AccordionItem,{children:[/*#__PURE__*/_jsx(AccordionHeader,{isSelected:selectedItem===item.id,isExpanded:expandedItems.has(item.id),onClick:()=>handleAccordionToggle(item.id),children:/*#__PURE__*/_jsx(\"span\",{children:item.name})}),item.id!=='interaction_history'&&renderThreads(item.id)]},item.id))})})})]});};export default ConversationSidebar;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxs","_jsxs","jsx","_jsx","AccordionContainer","div","_templateObject","_taggedTemplateLiteral","AccordionItem","_templateObject2","AccordionHeader","_templateObject3","props","isSelected","AccordionIcon","span","_templateObject4","isExpanded","ThreadsList","_templateObject5","ThreadItem","_templateObject6","ThreadItemContent","_templateObject7","DeleteThreadButton","button","_templateObject8","ThreadTitle","_templateObject9","ThreadTime","_templateObject0","ConversationSidebar","_ref","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","selectedThreadId","setSelectedThreadId","menuItems","id","name","loadThreads","response","getPersonaThreads","data","threadsByType","filter","t","thread_type","error","console","handleAccordionToggle","itemId","newExpanded","has","delete","add","itemThreads","length","handleThreadSelect","threadId","itemType","concat","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","handleDeleteThread","e","stopPropagation","window","confirm","result","deleteThread","updatedThreads","_objectSpread","Object","keys","forEach","key","alert","renderThreads","children","map","thread","index","onClick","created_at","messages","title","style","padding","fontSize","color","width","variant","item"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number; // 새로고침 트리거용\n}\n\n// 새로운 스타일 컴포넌트들\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ isSelected: boolean; isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.isSelected ? '600' : '500'};\n  border-radius: ${props => props.isSelected ? '8px' : '0'};\n  margin: ${props => props.isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst AccordionIcon = styled.span<{ isExpanded: boolean }>`\n  transform: rotate(${props => props.isExpanded ? '90deg' : '0deg'});\n  transition: transform 0.2s ease;\n  font-size: 12px;\n`;\n\nconst ThreadsList = styled.div<{ isExpanded: boolean }>`\n  max-height: ${props => props.isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst ThreadItem = styled.div<{ isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n\n  const menuItems = [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  // 스레드 데이터 로드\n  useEffect(() => {\n    const loadThreads = async () => {\n      if (!selectedPersonaId) return;\n\n      try {\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (response.data) {\n          const threadsByType = {\n            interpretation: response.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: response.data.filter(t => t.thread_type === 'proceed'),\n            sentence: response.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n      } catch (error) {\n        console.error('스레드 로드 실패:', error);\n      }\n    };\n\n    loadThreads();\n  }, [selectedPersonaId, refreshTrigger]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    // 아코디언 토글 시에만 메인 아이템 선택 (스레드가 없는 경우에만)\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    if (itemThreads.length === 0) {\n      onSelectItem(itemId);\n    }\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          // 스레드 목록에서 제거\n          const updatedThreads = { ...threads };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter(t => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          \n          // 선택된 스레드가 삭제된 경우 선택 해제\n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n          \n\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList isExpanded={isExpanded}>\n        {itemThreads.map((thread, index) => (\n          <ThreadItem\n            key={thread.id}\n            isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${index + 1}`}\n                {itemId === 'proceed' && `나아가기 #${index + 1}`}\n                {itemId === 'sentence' && `문장 #${index + 1}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  return (\n    <Sidebar width=\"250px\" isCollapsed={isCollapsed} variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n          {isCollapsed ? '▷' : '◁'}\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader isCollapsed={isCollapsed}>\n        {selectedPersonaName && (\n          <SidebarTitle isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        )}\n      </SidebarHeader>\n\n      <SidebarContent isCollapsed={isCollapsed}>\n        <SidebarMenuContent variant=\"conversation\">\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                  isSelected={selectedItem === item.id}\n                  isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                  <span>\n                    {item.name}\n                  </span>\n                </AccordionHeader>\n                \n                {item.id !== 'interaction_history' && renderThreads(item.id)}\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}