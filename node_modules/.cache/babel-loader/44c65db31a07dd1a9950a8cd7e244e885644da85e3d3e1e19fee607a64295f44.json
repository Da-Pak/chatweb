{"ast":null,"code":"import{useState}from'react';export const useToast=()=>{const[showToast,setShowToast]=useState(false);const[toastMessage,setToastMessage]=useState('');const showCopyToast=function(message){let duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2000;setToastMessage(message);setShowToast(true);setTimeout(()=>{setShowToast(false);},duration);};return{showToast,toastMessage,showCopyToast};};","map":{"version":3,"names":["useState","useToast","showToast","setShowToast","toastMessage","setToastMessage","showCopyToast","message","duration","arguments","length","undefined","setTimeout"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/shared/hooks/useToast.ts"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useToast = () => {\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n\r\n  const showCopyToast = (message: string, duration: number = 2000) => {\r\n    setToastMessage(message);\r\n    setShowToast(true);\r\n    setTimeout(() => {\r\n      setShowToast(false);\r\n    }, duration);\r\n  };\r\n\r\n  return {\r\n    showToast,\r\n    toastMessage,\r\n    showCopyToast\r\n  };\r\n}; "],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGH,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACI,YAAY,CAAEC,eAAe,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAAM,aAAa,CAAG,QAAAA,CAACC,OAAe,CAA8B,IAA5B,CAAAC,QAAgB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC7DJ,eAAe,CAACE,OAAO,CAAC,CACxBJ,YAAY,CAAC,IAAI,CAAC,CAClBS,UAAU,CAAC,IAAM,CACfT,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAEK,QAAQ,CAAC,CACd,CAAC,CAED,MAAO,CACLN,SAAS,CACTE,YAAY,CACZE,aACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}