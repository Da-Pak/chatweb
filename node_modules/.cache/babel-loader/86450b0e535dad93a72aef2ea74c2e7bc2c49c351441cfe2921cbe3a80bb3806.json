{"ast":null,"code":"import React from'react';import TrainingChatView from'../../shared/components/TrainingChatView';import{jsx as _jsx}from\"react/jsx-runtime\";const InterpretationView=_ref=>{let{interpretation,personaName,onSendMessage,onEditMessage,isLoading,messages,onGenerateNewInterpretation,onSwitchToMode,personaId}=_ref;const handleSwitchToMode=mode=>{if(onSwitchToMode){onSwitchToMode(mode);}};return/*#__PURE__*/_jsx(TrainingChatView,{personaId:personaId||'',personaName:personaName,contextContent:interpretation,contextType:\"interpretation\",messages:messages,isLoading:isLoading,onSendMessage:onSendMessage,onEditMessage:onEditMessage,onGenerateNewContent:onGenerateNewInterpretation,onSwitchToMode:handleSwitchToMode});};export default InterpretationView;","map":{"version":3,"names":["React","TrainingChatView","jsx","_jsx","InterpretationView","_ref","interpretation","personaName","onSendMessage","onEditMessage","isLoading","messages","onGenerateNewInterpretation","onSwitchToMode","personaId","handleSwitchToMode","mode","contextContent","contextType","onGenerateNewContent"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/training/components/InterpretationView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TrainingChatView from '../../shared/components/TrainingChatView';\nimport { chatApi } from '../../shared/api/chatApi';\n\ninterface InterpretationViewProps {\n  interpretation: string;\n  personaName: string;\n  onSendMessage: (message: string) => Promise<boolean>;\n  onEditMessage?: (messageIndex: number, newContent: string) => Promise<boolean>;\n  isLoading: boolean;\n  messages: Array<{\n    role: 'user' | 'assistant';\n    content: string;\n    timestamp: string;\n  }>;\n  onGenerateNewInterpretation?: () => void;\n  onSwitchToMode?: (mode: 'proceed' | 'sentence') => void;\n  personaId?: string;\n}\n\nconst InterpretationView: React.FC<InterpretationViewProps> = ({\n  interpretation,\n  personaName,\n  onSendMessage,\n  onEditMessage,\n  isLoading,\n  messages,\n  onGenerateNewInterpretation,\n  onSwitchToMode,\n  personaId,\n}) => {\n  const handleSwitchToMode = (mode: 'interpretation' | 'proceed' | 'sentence') => {\n    if (onSwitchToMode) {\n      onSwitchToMode(mode as 'proceed' | 'sentence');\n    }\n  };\n\n  return (\n    <TrainingChatView\n      personaId={personaId || ''}\n      personaName={personaName}\n      contextContent={interpretation}\n      contextType=\"interpretation\"\n      messages={messages}\n      isLoading={isLoading}\n      onSendMessage={onSendMessage}\n      onEditMessage={onEditMessage}\n      onGenerateNewContent={onGenerateNewInterpretation}\n      onSwitchToMode={handleSwitchToMode}\n    />\n  );\n};\n\nexport default InterpretationView; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAA+B,OAAO,CAClD,MAAO,CAAAC,gBAAgB,KAAM,0CAA0C,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAmBxE,KAAM,CAAAC,kBAAqD,CAAGC,IAAA,EAUxD,IAVyD,CAC7DC,cAAc,CACdC,WAAW,CACXC,aAAa,CACbC,aAAa,CACbC,SAAS,CACTC,QAAQ,CACRC,2BAA2B,CAC3BC,cAAc,CACdC,SACF,CAAC,CAAAT,IAAA,CACC,KAAM,CAAAU,kBAAkB,CAAIC,IAA+C,EAAK,CAC9E,GAAIH,cAAc,CAAE,CAClBA,cAAc,CAACG,IAA8B,CAAC,CAChD,CACF,CAAC,CAED,mBACEb,IAAA,CAACF,gBAAgB,EACfa,SAAS,CAAEA,SAAS,EAAI,EAAG,CAC3BP,WAAW,CAAEA,WAAY,CACzBU,cAAc,CAAEX,cAAe,CAC/BY,WAAW,CAAC,gBAAgB,CAC5BP,QAAQ,CAAEA,QAAS,CACnBD,SAAS,CAAEA,SAAU,CACrBF,aAAa,CAAEA,aAAc,CAC7BC,aAAa,CAAEA,aAAc,CAC7BU,oBAAoB,CAAEP,2BAA4B,CAClDC,cAAc,CAAEE,kBAAmB,CACpC,CAAC,CAEN,CAAC,CAED,cAAe,CAAAX,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}