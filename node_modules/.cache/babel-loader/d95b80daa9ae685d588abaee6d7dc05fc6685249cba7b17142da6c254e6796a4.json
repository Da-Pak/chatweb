{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver3\\\\frontend\\\\src\\\\features\\\\training\\\\components\\\\DetailChatView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { confusionApi } from '../api/confusionApi';\nimport Message from '../../shared/components/Message';\nimport LoadingMessage from '../../shared/components/LoadingMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: white;\n`;\n_c = Container;\nconst Header = styled.div`\n  padding: 16px 20px;\n  background: #ffffff;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  border-bottom: 1px solid #e9ecef;\n`;\n_c2 = Header;\nconst BackButton = styled.button`\n  background: #f8f9fa;\n  border: 1px solid #ddd;\n  color: #333;\n  padding: 8px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #ccc;\n  }\n`;\n_c3 = BackButton;\nconst HeaderTitle = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n_c4 = HeaderTitle;\nconst ChatContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c5 = ChatContainer;\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  background: #ffffff;\n`;\n_c6 = ChatMessages;\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  background: white;\n  border-top: 1px solid #e9ecef;\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n`;\n_c7 = ChatInputSection;\nconst MessageInput = styled.textarea`\n  flex: 1;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  padding: 12px 16px;\n  font-size: 14px;\n  line-height: 1.4;\n  resize: none;\n  max-height: 100px;\n  min-height: 44px;\n  \n  &:focus {\n    outline: none;\n    border-color: #6c757d;\n    box-shadow: 0 0 0 2px rgba(108, 117, 125, 0.1);\n  }\n`;\n_c8 = MessageInput;\nconst SendButton = styled.button`\n  background: #6c757d;\n  color: white;\n  border: 1px solid #5a6268;\n  border-radius: 6px;\n  width: 80px;\n  height: 44px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #5a6268;\n    border-color: #545b62;\n  }\n\n  &:disabled {\n    background: #ccc;\n    border-color: #bbb;\n    cursor: not-allowed;\n  }\n`;\n_c9 = SendButton;\nconst DetailChatView = ({\n  personaId,\n  itemId,\n  itemTitle,\n  itemType,\n  onBack\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // 초기 메시지 로드 (백엔드에서 받아온다고 가정)\n    loadInitialMessages();\n  }, [itemId]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const loadInitialMessages = async () => {\n    setIsLoading(true);\n    try {\n      // 백엔드에서 실제 데이터 조회\n      const detail = await confusionApi.getItemDetail(personaId, itemId);\n      const initialMessages = [{\n        role: 'assistant',\n        content: `📖 해석\n\n${itemTitle}에 대한 심층 분석을 시작하겠습니다.\n\n${detail.interpretation}`,\n        timestamp: new Date().toISOString()\n      }, {\n        role: 'assistant',\n        content: `💡 핵심 문장\n\n\"${detail.key_sentence}\"`,\n        timestamp: new Date().toISOString()\n      }, {\n        role: 'assistant',\n        content: `📝 나아가기\n\n${detail.proceed}`,\n        timestamp: new Date().toISOString()\n      }, {\n        role: 'assistant',\n        content: `⭐ 나아가기 핵심 문장\n\n\"${detail.proceed_key_sentence}\"`,\n        timestamp: new Date().toISOString()\n      }];\n      setMessages(initialMessages);\n    } catch (error) {\n      console.error('초기 메시지 로드 실패:', error);\n      // 에러 발생 시 기본 메시지 표시\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 데이터를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\n        timestamp: new Date().toISOString()\n      };\n      setMessages([errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: inputValue.trim(),\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    // 백엔드로 메시지 전송 및 응답 받기\n    try {\n      // 대화 히스토리를 API 형식으로 변환\n      const conversationHistory = messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n      const response = await confusionApi.chatWithItem(personaId, itemId, {\n        user_message: userMessage.content,\n        conversation_history: conversationHistory\n      });\n      const systemResponse = {\n        role: 'assistant',\n        content: response.response,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, systemResponse]);\n    } catch (error) {\n      console.error('메시지 전송 실패:', error);\n      const errorResponse = {\n        role: 'assistant',\n        content: '죄송합니다. 응답을 생성하는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, errorResponse]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: onBack,\n        children: \"\\u2190 \\uB4A4\\uB85C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderTitle, {\n        children: itemTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n        ref: messagesEndRef,\n        children: [messages.map((message, index) => message.role === 'user' ? /*#__PURE__*/_jsxDEV(Message, {\n          message: {\n            ...message,\n            persona_id: undefined,\n            persona_name: undefined\n          },\n          personas: {},\n          showActionButtons: false\n        }, `detail_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Message, {\n          message: {\n            ...message,\n            persona_id: 'current_persona',\n            persona_name: itemTitle\n          },\n          personas: {\n            current_persona: {\n              name: itemTitle,\n              description: '',\n              color: '#6c757d',\n              prompt: '',\n              category: '',\n              subcategory: ''\n            }\n          },\n          showActionButtons: false\n        }, `detail_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          personaName: itemTitle,\n          personaColor: \"#6c757d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInputSection, {\n        children: [/*#__PURE__*/_jsxDEV(MessageInput, {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"\\uAD81\\uAE08\\uD55C \\uC810\\uC774\\uB098 \\uB354 \\uC790\\uC138\\uD788 \\uC54C\\uACE0 \\uC2F6\\uC740 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          onClick: handleSendMessage,\n          disabled: isLoading || !inputValue.trim(),\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailChatView, \"lMJTFE8UF/A9JNOJrXITxRiGPAM=\");\n_c0 = DetailChatView;\nexport default DetailChatView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"BackButton\");\n$RefreshReg$(_c4, \"HeaderTitle\");\n$RefreshReg$(_c5, \"ChatContainer\");\n$RefreshReg$(_c6, \"ChatMessages\");\n$RefreshReg$(_c7, \"ChatInputSection\");\n$RefreshReg$(_c8, \"MessageInput\");\n$RefreshReg$(_c9, \"SendButton\");\n$RefreshReg$(_c0, \"DetailChatView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","confusionApi","Message","LoadingMessage","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","BackButton","button","_c3","HeaderTitle","h2","_c4","ChatContainer","_c5","ChatMessages","_c6","ChatInputSection","_c7","MessageInput","textarea","_c8","SendButton","_c9","DetailChatView","personaId","itemId","itemTitle","itemType","onBack","_s","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","messagesEndRef","loadInitialMessages","scrollToBottom","detail","getItemDetail","initialMessages","role","content","interpretation","timestamp","Date","toISOString","key_sentence","proceed","proceed_key_sentence","error","console","errorMessage","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prev","conversationHistory","map","msg","response","chatWithItem","user_message","conversation_history","systemResponse","errorResponse","handleKeyPress","e","key","shiftKey","preventDefault","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","message","index","persona_id","undefined","persona_name","personas","showActionButtons","current_persona","name","description","color","prompt","category","subcategory","personaName","personaColor","value","onChange","target","onKeyPress","placeholder","disabled","_c0","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver3/frontend/src/features/training/components/DetailChatView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { confusionApi, ConfusionItemDetail, ChatMessage as ApiChatMessage } from '../api/confusionApi';\r\nimport Message from '../../shared/components/Message';\r\nimport LoadingMessage from '../../shared/components/LoadingMessage';\r\n\r\ninterface DetailChatViewProps {\r\n  personaId: string;\r\n  itemId: string;\r\n  itemTitle: string;\r\n  itemType: 'theoretical' | 'insightful';\r\n  onBack?: () => void;\r\n}\r\n\r\ninterface ChatMessage {\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n  timestamp: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background: white;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding: 16px 20px;\r\n  background: #ffffff;\r\n  color: #333;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  border-bottom: 1px solid #e9ecef;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  background: #f8f9fa;\r\n  border: 1px solid #ddd;\r\n  color: #333;\r\n  padding: 8px 12px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover {\r\n    background: #e9ecef;\r\n    border-color: #ccc;\r\n  }\r\n`;\r\n\r\nconst HeaderTitle = styled.h2`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst ChatInputSection = styled.div`\r\n  padding: 16px 20px;\r\n  background: white;\r\n  border-top: 1px solid #e9ecef;\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst MessageInput = styled.textarea`\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  padding: 12px 16px;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  resize: none;\r\n  max-height: 100px;\r\n  min-height: 44px;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #6c757d;\r\n    box-shadow: 0 0 0 2px rgba(108, 117, 125, 0.1);\r\n  }\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background: #6c757d;\r\n  color: white;\r\n  border: 1px solid #5a6268;\r\n  border-radius: 6px;\r\n  width: 80px;\r\n  height: 44px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover {\r\n    background: #5a6268;\r\n    border-color: #545b62;\r\n  }\r\n\r\n  &:disabled {\r\n    background: #ccc;\r\n    border-color: #bbb;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst DetailChatView: React.FC<DetailChatViewProps> = ({\r\n  personaId,\r\n  itemId,\r\n  itemTitle,\r\n  itemType,\r\n  onBack\r\n}) => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    // 초기 메시지 로드 (백엔드에서 받아온다고 가정)\r\n    loadInitialMessages();\r\n  }, [itemId]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const loadInitialMessages = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // 백엔드에서 실제 데이터 조회\r\n      const detail = await confusionApi.getItemDetail(personaId, itemId);\r\n      \r\n      const initialMessages: ChatMessage[] = [\r\n        {\r\n          role: 'assistant',\r\n          content: `📖 해석\r\n\r\n${itemTitle}에 대한 심층 분석을 시작하겠습니다.\r\n\r\n${detail.interpretation}`,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        {\r\n          role: 'assistant',\r\n          content: `💡 핵심 문장\r\n\r\n\"${detail.key_sentence}\"`,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        {\r\n          role: 'assistant',\r\n          content: `📝 나아가기\r\n\r\n${detail.proceed}`,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        {\r\n          role: 'assistant',\r\n          content: `⭐ 나아가기 핵심 문장\r\n\r\n\"${detail.proceed_key_sentence}\"`,\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      ];\r\n      \r\n      setMessages(initialMessages);\r\n    } catch (error) {\r\n      console.error('초기 메시지 로드 실패:', error);\r\n      // 에러 발생 시 기본 메시지 표시\r\n      const errorMessage: ChatMessage = {\r\n        role: 'assistant',\r\n        content: '죄송합니다. 데이터를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      setMessages([errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      role: 'user',\r\n      content: inputValue.trim(),\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsLoading(true);\r\n\r\n    // 백엔드로 메시지 전송 및 응답 받기\r\n    try {\r\n      // 대화 히스토리를 API 형식으로 변환\r\n      const conversationHistory: ApiChatMessage[] = messages.map(msg => ({\r\n        role: msg.role,\r\n        content: msg.content\r\n      }));\r\n\r\n      const response = await confusionApi.chatWithItem(personaId, itemId, {\r\n        user_message: userMessage.content,\r\n        conversation_history: conversationHistory\r\n      });\r\n\r\n      const systemResponse: ChatMessage = {\r\n        role: 'assistant',\r\n        content: response.response,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, systemResponse]);\r\n    } catch (error) {\r\n      console.error('메시지 전송 실패:', error);\r\n      const errorResponse: ChatMessage = {\r\n        role: 'assistant',\r\n        content: '죄송합니다. 응답을 생성하는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      setMessages(prev => [...prev, errorResponse]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <BackButton onClick={onBack}>← 뒤로</BackButton>\r\n        <HeaderTitle>{itemTitle}</HeaderTitle>\r\n      </Header>\r\n      \r\n      <ChatContainer>\r\n        <ChatMessages ref={messagesEndRef}>\r\n          {messages.map((message, index) => \r\n            message.role === 'user' ? (\r\n              <Message\r\n                key={`detail_${index}`}\r\n                message={{\r\n                  ...message,\r\n                  persona_id: undefined,\r\n                  persona_name: undefined,\r\n                }}\r\n                personas={{}}\r\n                showActionButtons={false}\r\n              />\r\n            ) : (\r\n              <Message\r\n                key={`detail_${index}`}\r\n                message={{\r\n                  ...message,\r\n                  persona_id: 'current_persona',\r\n                  persona_name: itemTitle,\r\n                }}\r\n                personas={{\r\n                  current_persona: {\r\n                    name: itemTitle,\r\n                    description: '',\r\n                    color: '#6c757d',\r\n                    prompt: '',\r\n                    category: '',\r\n                    subcategory: ''\r\n                  }\r\n                }}\r\n                showActionButtons={false}\r\n              />\r\n            )\r\n          )}\r\n          \r\n          {isLoading && (\r\n            <LoadingMessage \r\n              personaName={itemTitle}\r\n              personaColor=\"#6c757d\"\r\n            />\r\n          )}\r\n        </ChatMessages>\r\n        \r\n        <ChatInputSection>\r\n          <MessageInput\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"궁금한 점이나 더 자세히 알고 싶은 내용을 입력해주세요...\"\r\n            disabled={isLoading}\r\n          />\r\n          <SendButton onClick={handleSendMessage} disabled={isLoading || !inputValue.trim()}>\r\n            전송\r\n          </SendButton>\r\n        </ChatInputSection>\r\n      </ChatContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DetailChatView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}