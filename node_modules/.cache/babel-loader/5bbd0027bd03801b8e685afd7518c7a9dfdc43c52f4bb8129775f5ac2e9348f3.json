{"ast":null,"code":"import _objectSpread from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15;import React,{useState,useEffect}from'react';import styled from'styled-components';import InterpretationPopup from'./InterpretationPopup';import{chatApi}from'../../shared/api/chatApi';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CategoryContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 20px;\\n  height: 100%;\\n  overflow-y: auto;\\n\"])));const CategorySection=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 24px;\\n\"])));const CategoryHeader=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #f0f0f0 0%, #d0d0d0 100%);\\n  color: #333;\\n  padding: 16px 20px;\\n  border-radius: 12px;\\n  cursor: pointer;\\n  font-size: 18px;\\n  font-weight: 600;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n  transition: all 0.3s ease;\\n  \\n  &:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\\n    background: linear-gradient(135deg, #e8e8e8 0%, #c8c8c8 100%);\\n  }\\n\"])));const CategoryIcon=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  transform: \",\";\\n  transition: transform 0.3s ease;\\n  font-size: 16px;\\n\"])),props=>props.$isExpanded?'rotate(90deg)':'rotate(0deg)');const SubcategoryContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  transition: all 0.3s ease;\\n  max-height: \",\";\\n  background: white;\\n  border-radius: 0 0 12px 12px;\\n  box-shadow: \",\";\\n\"])),props=>props.$isExpanded?'1000px':'0',props=>props.$isExpanded?'0 4px 12px rgba(0, 0, 0, 0.1)':'none');const SubcategorySection=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  padding: 16px;\\n  border-left: 3px solid #e0e0e0;\\n  margin: 8px 16px;\\n\"])));const SubcategoryTitle=styled.h3(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  font-weight: 600;\\n  color: #555;\\n  margin-bottom: 12px;\\n  padding-bottom: 8px;\\n  border-bottom: 1px solid #e0e0e0;\\n\"])));const PersonaCard=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);\\n  border: 1px solid #e0e0e0;\\n  border-radius: 8px;\\n  padding: 16px;\\n  margin-bottom: 12px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  position: relative;\\n  \\n  &:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\\n    border-color: #ccc;\\n    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\\n  }\\n  \\n  &:last-child {\\n    margin-bottom: 0;\\n  }\\n\"])));const CheckIcon=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 12px;\\n  right: 12px;\\n  width: 24px;\\n  height: 24px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #333;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));const PersonaName=styled.h4(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  font-weight: 600;\\n  color: #333;\\n  margin-bottom: 8px;\\n\"])));const PersonaDescription=styled.p(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  color: #666;\\n  line-height: 1.4;\\n  margin-bottom: 8px;\\n\"])));// 직접 표시 카테고리용 스타일 (들여쓰기)\nconst DirectCategorySection=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  margin-left: 24px;\\n  margin-bottom: 24px;\\n\"])));const DirectCategoryTitle=styled.h3(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #444;\\n  margin-bottom: 16px;\\n  padding-left: 8px;\\n  border-left: 4px solid #ddd;\\n\"])));const HeaderSection=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 24px;\\n  padding: 16px;\\n  background: #f8f9fa;\\n  border-radius: 8px;\\n  border: 1px solid #e9ecef;\\n\"])));const HeaderTitle=styled.h2(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  font-size: 24px;\\n  font-weight: 700;\\n  color: #343a40;\\n  margin: 0;\\n\"])));const GenerateAllButton=styled.button(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);\\n  color: white;\\n  border: none;\\n  border-radius: 6px;\\n  padding: 12px 24px;\\n  font-size: 14px;\\n  font-weight: 600;\\n  cursor: \",\";\\n  transition: all 0.2s ease;\\n  opacity: \",\";\\n  \\n  &:hover {\\n    transform: \",\";\\n    box-shadow: \",\";\\n  }\\n  \\n  &:active {\\n    transform: \",\";\\n  }\\n\"])),props=>props.$isLoading?'not-allowed':'pointer',props=>props.$isLoading?0.7:1,props=>props.$isLoading?'none':'translateY(-1px)',props=>props.$isLoading?'none':'0 4px 12px rgba(0, 123, 255, 0.3)',props=>props.$isLoading?'none':'translateY(0)');const ProgressInfo=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  color: #6c757d;\\n  margin-top: 4px;\\n\"])));const TrainingCategoryView=_ref=>{let{personas,onSelectPersona,onInterpretationComplete}=_ref;const[selectedPersonaForInterpretation,setSelectedPersonaForInterpretation]=useState(null);const[interpretationStatuses,setInterpretationStatuses]=useState({});const[isGeneratingAll,setIsGeneratingAll]=useState(false);const[generationProgress,setGenerationProgress]=useState({current:0,total:0});// 해석 상태 가져오기\nuseEffect(()=>{const fetchInterpretationStatus=async()=>{const response=await chatApi.getInterpretationStatus();if(response.data){const statusMap={};response.data.forEach(status=>{statusMap[status.persona_id]=status.has_interpretation;});setInterpretationStatuses(statusMap);}};fetchInterpretationStatus();},[]);// 카테고리별로 페르소나 그룹화\nconst groupedPersonas=Object.entries(personas).reduce((acc,_ref2)=>{let[id,persona]=_ref2;if(!acc[persona.category]){acc[persona.category]={};}if(!acc[persona.category][persona.subcategory]){acc[persona.category][persona.subcategory]=[];}acc[persona.category][persona.subcategory].push(_objectSpread({id},persona));return acc;},{});// 최상위 카테고리들 (심리학, 철학)은 아코디언 없이 계속 표시\nconst topLevelCategories=['심리학','철학'];// 하위 카테고리별 아코디언 상태 관리\nconst[expandedSubcategories,setExpandedSubcategories]=useState({});const toggleSubcategory=subcategory=>{setExpandedSubcategories(prev=>_objectSpread(_objectSpread({},prev),{},{[subcategory]:!prev[subcategory]}));};const handlePersonaClick=async(personaId,personaName)=>{const hasInterpretation=interpretationStatuses[personaId];if(hasInterpretation){// 해석이 있으면 바로 채팅 모드로\nconst response=await chatApi.getInterpretation(personaId);if(response.data){onInterpretationComplete(personaId,response.data.interpretation);onSelectPersona(personaId);}}else{// 해석이 없으면 생성 팝업 표시\nsetSelectedPersonaForInterpretation({id:personaId,name:personaName});}};const handleInterpretationConfirm=async()=>{if(!selectedPersonaForInterpretation)return;// 백엔드에서 해석 생성 요청\nconst response=await chatApi.generateInterpretation({persona_id:selectedPersonaForInterpretation.id,user_input:\"기본 심리 해석 요청\"});if(response.data){// 해석 상태 업데이트\nsetInterpretationStatuses(prev=>_objectSpread(_objectSpread({},prev),{},{[selectedPersonaForInterpretation.id]:true}));}};const handleInterpretationCancel=()=>{setSelectedPersonaForInterpretation(null);};const handleInterpretationComplete=interpretation=>{if(selectedPersonaForInterpretation){onInterpretationComplete(selectedPersonaForInterpretation.id,interpretation);onSelectPersona(selectedPersonaForInterpretation.id);setSelectedPersonaForInterpretation(null);}};// 모든 페르소나 해석 생성\nconst handleGenerateAllInterpretations=async()=>{if(isGeneratingAll)return;const totalPersonas=Object.keys(personas).length;setIsGeneratingAll(true);setGenerationProgress({current:0,total:totalPersonas});try{const response=await chatApi.generateAllInterpretations();if(response.data){// 성공적으로 생성된 해석들의 상태 업데이트\nconst newStatuses={};response.data.interpretations.forEach(interpretation=>{newStatuses[interpretation.persona_id]=true;});setInterpretationStatuses(prev=>_objectSpread(_objectSpread({},prev),newStatuses));setGenerationProgress({current:response.data.total_count,total:totalPersonas});// 잠시 후 완료 상태 표시\nsetTimeout(()=>{setIsGeneratingAll(false);setGenerationProgress({current:0,total:0});},2000);}else{console.error('전체 해석 생성 실패:',response.error);setIsGeneratingAll(false);setGenerationProgress({current:0,total:0});}}catch(error){console.error('전체 해석 생성 오류:',error);setIsGeneratingAll(false);setGenerationProgress({current:0,total:0});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CategoryContainer,{children:topLevelCategories.map(topCategory=>{const subcategories=groupedPersonas[topCategory];if(!subcategories)return null;return/*#__PURE__*/_jsxs(DirectCategorySection,{children:[/*#__PURE__*/_jsx(DirectCategoryTitle,{children:topCategory}),Object.entries(subcategories).map(_ref3=>{let[subcategory,personaList]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'16px'},children:[/*#__PURE__*/_jsxs(CategoryHeader,{$isExpanded:expandedSubcategories[subcategory]||false,onClick:()=>toggleSubcategory(subcategory),style:{marginLeft:'16px'},children:[/*#__PURE__*/_jsx(\"span\",{children:subcategory}),/*#__PURE__*/_jsx(CategoryIcon,{$isExpanded:expandedSubcategories[subcategory]||false,children:\"\\u25B6\"})]}),/*#__PURE__*/_jsx(SubcategoryContainer,{$isExpanded:expandedSubcategories[subcategory]||false,style:{marginLeft:'32px'},children:personaList.map(persona=>/*#__PURE__*/_jsxs(PersonaCard,{$hasInterpretation:interpretationStatuses[persona.id]||false,onClick:()=>handlePersonaClick(persona.id,persona.name),children:[interpretationStatuses[persona.id]&&/*#__PURE__*/_jsx(CheckIcon,{children:\"\\u2713\"}),/*#__PURE__*/_jsx(PersonaName,{children:persona.name}),/*#__PURE__*/_jsx(PersonaDescription,{dangerouslySetInnerHTML:{__html:persona.description.replace(/•/g,'<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')}})]},persona.id))})]},subcategory);})]},topCategory);})}),selectedPersonaForInterpretation&&/*#__PURE__*/_jsx(InterpretationPopup,{isOpen:!!selectedPersonaForInterpretation,personaId:selectedPersonaForInterpretation.id,personaName:selectedPersonaForInterpretation.name,onConfirm:handleInterpretationConfirm,onCancel:handleInterpretationCancel,onComplete:handleInterpretationComplete})]});};export default TrainingCategoryView;","map":{"version":3,"names":["React","useState","useEffect","styled","InterpretationPopup","chatApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CategoryContainer","div","_templateObject","_taggedTemplateLiteral","CategorySection","_templateObject2","CategoryHeader","_templateObject3","CategoryIcon","span","_templateObject4","props","$isExpanded","SubcategoryContainer","_templateObject5","SubcategorySection","_templateObject6","SubcategoryTitle","h3","_templateObject7","PersonaCard","_templateObject8","CheckIcon","_templateObject9","PersonaName","h4","_templateObject0","PersonaDescription","p","_templateObject1","DirectCategorySection","_templateObject10","DirectCategoryTitle","_templateObject11","HeaderSection","_templateObject12","HeaderTitle","h2","_templateObject13","GenerateAllButton","button","_templateObject14","$isLoading","ProgressInfo","_templateObject15","TrainingCategoryView","_ref","personas","onSelectPersona","onInterpretationComplete","selectedPersonaForInterpretation","setSelectedPersonaForInterpretation","interpretationStatuses","setInterpretationStatuses","isGeneratingAll","setIsGeneratingAll","generationProgress","setGenerationProgress","current","total","fetchInterpretationStatus","response","getInterpretationStatus","data","statusMap","forEach","status","persona_id","has_interpretation","groupedPersonas","Object","entries","reduce","acc","_ref2","id","persona","category","subcategory","push","_objectSpread","topLevelCategories","expandedSubcategories","setExpandedSubcategories","toggleSubcategory","prev","handlePersonaClick","personaId","personaName","hasInterpretation","getInterpretation","interpretation","name","handleInterpretationConfirm","generateInterpretation","user_input","handleInterpretationCancel","handleInterpretationComplete","handleGenerateAllInterpretations","totalPersonas","keys","length","generateAllInterpretations","newStatuses","interpretations","total_count","setTimeout","console","error","children","map","topCategory","subcategories","_ref3","personaList","style","marginBottom","onClick","marginLeft","$hasInterpretation","dangerouslySetInnerHTML","__html","description","replace","isOpen","onConfirm","onCancel","onComplete"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/training/components/TrainingCategoryView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Persona, InterpretationStatus } from '../../shared/types';\nimport styled from 'styled-components';\nimport InterpretationPopup from './InterpretationPopup';\nimport { chatApi } from '../../shared/api/chatApi';\n\ninterface TrainingCategoryViewProps {\n  personas: Record<string, Persona>;\n  onSelectPersona: (personaId: string) => void;\n  onInterpretationComplete: (personaId: string, interpretation: string) => void;\n}\n\nconst CategoryContainer = styled.div`\n  padding: 20px;\n  height: 100%;\n  overflow-y: auto;\n`;\n\nconst CategorySection = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst CategoryHeader = styled.div<{ $isExpanded: boolean }>`\n  background: linear-gradient(135deg, #f0f0f0 0%, #d0d0d0 100%);\n  color: #333;\n  padding: 16px 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n    background: linear-gradient(135deg, #e8e8e8 0%, #c8c8c8 100%);\n  }\n`;\n\nconst CategoryIcon = styled.span<{ $isExpanded: boolean }>`\n  transform: ${props => props.$isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.3s ease;\n  font-size: 16px;\n`;\n\nconst SubcategoryContainer = styled.div<{ $isExpanded: boolean }>`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  max-height: ${props => props.$isExpanded ? '1000px' : '0'};\n  background: white;\n  border-radius: 0 0 12px 12px;\n  box-shadow: ${props => props.$isExpanded ? '0 4px 12px rgba(0, 0, 0, 0.1)' : 'none'};\n`;\n\nconst SubcategorySection = styled.div`\n  padding: 16px;\n  border-left: 3px solid #e0e0e0;\n  margin: 8px 16px;\n`;\n\nconst SubcategoryTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst PersonaCard = styled.div<{ $hasInterpretation: boolean }>`\n  background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n    border-color: #ccc;\n    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst CheckIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst PersonaName = styled.h4`\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n`;\n\nconst PersonaDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n  margin-bottom: 8px;\n`;\n\n\n\n// 직접 표시 카테고리용 스타일 (들여쓰기)\nconst DirectCategorySection = styled.div`\n  margin-left: 24px;\n  margin-bottom: 24px;\n`;\n\nconst DirectCategoryTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #444;\n  margin-bottom: 16px;\n  padding-left: 8px;\n  border-left: 4px solid #ddd;\n`;\n\nconst HeaderSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n`;\n\nconst HeaderTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: #343a40;\n  margin: 0;\n`;\n\nconst GenerateAllButton = styled.button<{ $isLoading: boolean }>`\n  background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 24px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: ${props => props.$isLoading ? 'not-allowed' : 'pointer'};\n  transition: all 0.2s ease;\n  opacity: ${props => props.$isLoading ? 0.7 : 1};\n  \n  &:hover {\n    transform: ${props => props.$isLoading ? 'none' : 'translateY(-1px)'};\n    box-shadow: ${props => props.$isLoading ? 'none' : '0 4px 12px rgba(0, 123, 255, 0.3)'};\n  }\n  \n  &:active {\n    transform: ${props => props.$isLoading ? 'none' : 'translateY(0)'};\n  }\n`;\n\nconst ProgressInfo = styled.div`\n  font-size: 12px;\n  color: #6c757d;\n  margin-top: 4px;\n`;\n\nconst TrainingCategoryView: React.FC<TrainingCategoryViewProps> = ({\n  personas,\n  onSelectPersona,\n  onInterpretationComplete,\n}) => {\n  const [selectedPersonaForInterpretation, setSelectedPersonaForInterpretation] = useState<{\n    id: string;\n    name: string;\n  } | null>(null);\n  const [interpretationStatuses, setInterpretationStatuses] = useState<Record<string, boolean>>({});\n  const [isGeneratingAll, setIsGeneratingAll] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState({ current: 0, total: 0 });\n\n  // 해석 상태 가져오기\n  useEffect(() => {\n    const fetchInterpretationStatus = async () => {\n      const response = await chatApi.getInterpretationStatus();\n      if (response.data) {\n        const statusMap: Record<string, boolean> = {};\n        response.data.forEach(status => {\n          statusMap[status.persona_id] = status.has_interpretation;\n        });\n        setInterpretationStatuses(statusMap);\n      }\n    };\n\n    fetchInterpretationStatus();\n  }, []);\n\n  // 카테고리별로 페르소나 그룹화\n  const groupedPersonas = Object.entries(personas).reduce((acc, [id, persona]) => {\n    if (!acc[persona.category]) {\n      acc[persona.category] = {};\n    }\n    if (!acc[persona.category][persona.subcategory]) {\n      acc[persona.category][persona.subcategory] = [];\n    }\n    acc[persona.category][persona.subcategory].push({ id, ...persona });\n    return acc;\n  }, {} as Record<string, Record<string, Array<{ id: string } & Persona>>>);\n\n  // 최상위 카테고리들 (심리학, 철학)은 아코디언 없이 계속 표시\n  const topLevelCategories = ['심리학', '철학'];\n  \n  // 하위 카테고리별 아코디언 상태 관리\n  const [expandedSubcategories, setExpandedSubcategories] = useState<Record<string, boolean>>({});\n\n  const toggleSubcategory = (subcategory: string) => {\n    setExpandedSubcategories(prev => ({\n      ...prev,\n      [subcategory]: !prev[subcategory]\n    }));\n  };\n\n  const handlePersonaClick = async (personaId: string, personaName: string) => {\n    const hasInterpretation = interpretationStatuses[personaId];\n    \n    if (hasInterpretation) {\n      // 해석이 있으면 바로 채팅 모드로\n      const response = await chatApi.getInterpretation(personaId);\n      if (response.data) {\n        onInterpretationComplete(personaId, response.data.interpretation);\n        onSelectPersona(personaId);\n      }\n    } else {\n      // 해석이 없으면 생성 팝업 표시\n      setSelectedPersonaForInterpretation({ id: personaId, name: personaName });\n    }\n  };\n\n  const handleInterpretationConfirm = async () => {\n    if (!selectedPersonaForInterpretation) return;\n    \n    // 백엔드에서 해석 생성 요청\n    const response = await chatApi.generateInterpretation({\n      persona_id: selectedPersonaForInterpretation.id,\n      user_input: \"기본 심리 해석 요청\"\n    });\n    \n    if (response.data) {\n      // 해석 상태 업데이트\n      setInterpretationStatuses(prev => ({\n        ...prev,\n        [selectedPersonaForInterpretation.id]: true\n      }));\n    }\n  };\n\n  const handleInterpretationCancel = () => {\n    setSelectedPersonaForInterpretation(null);\n  };\n\n  const handleInterpretationComplete = (interpretation: string) => {\n    if (selectedPersonaForInterpretation) {\n      onInterpretationComplete(selectedPersonaForInterpretation.id, interpretation);\n      onSelectPersona(selectedPersonaForInterpretation.id);\n      setSelectedPersonaForInterpretation(null);\n    }\n  };\n\n  // 모든 페르소나 해석 생성\n  const handleGenerateAllInterpretations = async () => {\n    if (isGeneratingAll) return;\n    \n    const totalPersonas = Object.keys(personas).length;\n    setIsGeneratingAll(true);\n    setGenerationProgress({ current: 0, total: totalPersonas });\n    \n    try {\n      const response = await chatApi.generateAllInterpretations();\n      \n      if (response.data) {\n        // 성공적으로 생성된 해석들의 상태 업데이트\n        const newStatuses: Record<string, boolean> = {};\n        response.data.interpretations.forEach(interpretation => {\n          newStatuses[interpretation.persona_id] = true;\n        });\n        \n        setInterpretationStatuses(prev => ({\n          ...prev,\n          ...newStatuses\n        }));\n        \n        setGenerationProgress({ current: response.data.total_count, total: totalPersonas });\n        \n        // 잠시 후 완료 상태 표시\n        setTimeout(() => {\n          setIsGeneratingAll(false);\n          setGenerationProgress({ current: 0, total: 0 });\n        }, 2000);\n      } else {\n        console.error('전체 해석 생성 실패:', response.error);\n        setIsGeneratingAll(false);\n        setGenerationProgress({ current: 0, total: 0 });\n      }\n    } catch (error) {\n      console.error('전체 해석 생성 오류:', error);\n      setIsGeneratingAll(false);\n      setGenerationProgress({ current: 0, total: 0 });\n    }\n  };\n\n  return (\n    <>\n      <CategoryContainer>\n        {/* 최상위 카테고리들 (심리학, 철학) - 계속 표시 */}\n        {topLevelCategories.map(topCategory => {\n          const subcategories = groupedPersonas[topCategory];\n          if (!subcategories) return null;\n          \n          return (\n            <DirectCategorySection key={topCategory}>\n              <DirectCategoryTitle>{topCategory}</DirectCategoryTitle>\n              \n              {/* 하위 카테고리들 (정신분석, 인지행동 등) - 아코디언 */}\n              {Object.entries(subcategories).map(([subcategory, personaList]) => (\n                <div key={subcategory} style={{ marginBottom: '16px' }}>\n                  <CategoryHeader\n                    $isExpanded={expandedSubcategories[subcategory] || false}\n                    onClick={() => toggleSubcategory(subcategory)}\n                    style={{ marginLeft: '16px' }}\n                  >\n                    <span>{subcategory}</span>\n                    <CategoryIcon $isExpanded={expandedSubcategories[subcategory] || false}>\n                      ▶\n                    </CategoryIcon>\n                  </CategoryHeader>\n                  \n                  <SubcategoryContainer \n                    $isExpanded={expandedSubcategories[subcategory] || false}\n                    style={{ marginLeft: '32px' }}\n                  >\n                    {personaList.map((persona) => (\n                      <PersonaCard \n                        key={persona.id}\n                        $hasInterpretation={interpretationStatuses[persona.id] || false}\n                        onClick={() => handlePersonaClick(persona.id, persona.name)}\n                      >\n                        {interpretationStatuses[persona.id] && (\n                          <CheckIcon>✓</CheckIcon>\n                        )}\n                        <PersonaName>{persona.name}</PersonaName>\n                        <PersonaDescription \n                          dangerouslySetInnerHTML={{\n                            __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                          }}\n                        />\n                      </PersonaCard>\n                    ))}\n                  </SubcategoryContainer>\n                </div>\n              ))}\n            </DirectCategorySection>\n          );\n        })}\n      </CategoryContainer>\n\n      {selectedPersonaForInterpretation && (\n        <InterpretationPopup\n          isOpen={!!selectedPersonaForInterpretation}\n          personaId={selectedPersonaForInterpretation.id}\n          personaName={selectedPersonaForInterpretation.name}\n          onConfirm={handleInterpretationConfirm}\n          onCancel={handleInterpretationCancel}\n          onComplete={handleInterpretationComplete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TrainingCategoryView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}