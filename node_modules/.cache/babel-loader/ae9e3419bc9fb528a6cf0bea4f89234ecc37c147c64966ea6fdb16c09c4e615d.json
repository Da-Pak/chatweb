{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\SentenceView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput from './MessageInput';\nimport LoadingMessage from './LoadingMessage';\nimport { chatApi } from '../api/chatApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n_c = Container;\nconst SentenceSection = styled.div`\n  padding: 24px;\n  border-bottom: 2px solid #e0e0e0;\n  background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\n`;\n_c2 = SentenceSection;\nconst SentenceTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c3 = SentenceTitle;\nconst SentenceContent = styled.div`\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  padding: 20px;\n  line-height: 1.6;\n  color: #555;\n  font-size: 14px;\n  white-space: pre-line;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n`;\n_c4 = SentenceContent;\nconst ThreadsSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c5 = ThreadsSection;\nconst ThreadsList = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\n_c6 = ThreadsList;\nconst ThreadItem = styled.div`\n  padding: 12px 16px;\n  border: 1px solid ${props => props.isSelected ? '#4caf50' : '#e0e0e0'};\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#e8f5e8' : 'white'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #4caf50;\n    background: #e8f5e8;\n  }\n`;\n_c7 = ThreadItem;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n`;\n_c8 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\n_c9 = ThreadTime;\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c0 = ChatSection;\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c1 = ChatMessages;\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: 1px solid #e0e0e0;\n  background: #ffffff;\n`;\n_c10 = ChatInputSection;\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n\n// 토스트 스타일 컴포넌트 추가\n_c11 = EmptyChat;\nconst Toast = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #6c757d;\n  color: white;\n  padding: 12px 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(120%)'};\n  transition: transform 0.3s ease;\n  font-size: 14px;\n  font-weight: 500;\n`;\n_c12 = Toast;\nconst SentenceView = ({\n  personaId,\n  personaName,\n  sentenceContent,\n  threads,\n  onThreadUpdate,\n  selectedThreadId,\n  onSwitchToMode,\n  onSendMessage,\n  isLoading,\n  messages\n}) => {\n  _s();\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [localThreads, setLocalThreads] = useState(threads);\n  const chatMessagesRef = useRef(null);\n  const messageInputRef = useRef(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  // 문장 타입의 스레드만 필터링\n  const sentenceThreads = localThreads.filter(thread => thread.thread_type === 'sentence');\n  useEffect(() => {\n    setLocalThreads(threads);\n    // 외부에서 선택된 스레드 ID가 있으면 해당 스레드 선택\n    if (selectedThreadId) {\n      const targetThread = threads.find(t => t.id === selectedThreadId && t.thread_type === 'sentence');\n      if (targetThread) {\n        setSelectedThread(targetThread);\n        return;\n      }\n    }\n    // 외부 선택이 없으면 첫 번째 문장 스레드를 자동 선택\n    const firstSentenceThread = threads.find(t => t.thread_type === 'sentence');\n    if (firstSentenceThread && !selectedThread) {\n      setSelectedThread(firstSentenceThread);\n    }\n  }, [threads, selectedThreadId]);\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.messages]);\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n  };\n  const handleSendMessage = async message => {\n    if (!selectedThread) return false;\n    try {\n      const response = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: message\n      });\n      if (response.data && response.data.response) {\n        // 스레드 업데이트\n        const updatedThreads = localThreads.map(t => t.id === selectedThread.id ? {\n          ...t,\n          messages: [...t.messages, {\n            role: 'user',\n            content: message,\n            timestamp: new Date().toISOString()\n          }, response.data.response],\n          updated_at: new Date().toISOString()\n        } : t);\n        setLocalThreads(updatedThreads);\n        onThreadUpdate(updatedThreads);\n\n        // 선택된 스레드 업데이트\n        const updatedThread = updatedThreads.find(t => t.id === selectedThread.id);\n        if (updatedThread) {\n          setSelectedThread(updatedThread);\n        }\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error('문장 채팅 오류:', error);\n      return false;\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // 토스트 메시지 표시 함수\n  const showCopyToast = message => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  // 텍스트 복사 유틸리티 함수\n  const copyToClipboard = async (text, successMessage) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      showCopyToast(successMessage);\n    } catch (error) {\n      console.error('복사 실패:', error);\n      showCopyToast('복사 실패');\n    }\n  };\n\n  // 메시지 복사 기능\n  const handleCopyMessage = async messageContent => {\n    await copyToClipboard(messageContent, '메시지가 복사되었습니다');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      show: showToast,\n      children: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SentenceSection, {\n      children: [/*#__PURE__*/_jsxDEV(SentenceTitle, {\n        children: [\"\\uBB38\\uC7A5 - \", personaName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SentenceContent, {\n        children: sentenceContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThreadsSection, {\n      children: [/*#__PURE__*/_jsxDEV(ThreadsList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '12px',\n            fontSize: '16px',\n            color: '#333'\n          },\n          children: \"\\uBB38\\uC7A5 \\uC2A4\\uB808\\uB4DC\\uB4E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), sentenceThreads.map(thread => /*#__PURE__*/_jsxDEV(ThreadItem, {\n          isSelected: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.id) === thread.id,\n          onClick: () => handleThreadSelect(thread),\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: [\"\\uBB38\\uC7A5 #\", sentenceThreads.indexOf(thread) + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n        children: selectedThread ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n            ref: chatMessagesRef,\n            children: [selectedThread.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '12px',\n                border: '1px solid #e0e0e0',\n                borderRadius: '8px',\n                background: message.role === 'user' ? '#f0f0f0' : 'white',\n                marginBottom: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '8px',\n                  color: '#4caf50'\n                },\n                children: message.role === 'user' ? '사용자' : message.persona_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: 'pre-line',\n                  lineHeight: '1.6'\n                },\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#999',\n                  marginTop: '8px'\n                },\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this), message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '8px',\n                  marginTop: '12px',\n                  justifyContent: 'flex-start'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => handleCopyMessage(message.content),\n                  title: \"\\uBCF5\\uC0AC\",\n                  children: \"\\uBCF5\\uC0AC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => onSwitchToMode ? onSwitchToMode('interpretation') : console.log('해석 모드로 전환'),\n                  title: \"\\uD574\\uC11D\",\n                  children: \"\\uD574\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => onSwitchToMode ? onSwitchToMode('proceed') : console.log('나아가기 모드로 전환'),\n                  title: \"\\uB098\\uC544\\uAC00\\uAE30\",\n                  children: \"\\uB098\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => console.log('현재 문장 모드입니다'),\n                  title: \"\\uBB38\\uC7A5\",\n                  children: \"\\uBB38\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChatInputSection, {\n            children: /*#__PURE__*/_jsxDEV(MessageInput, {\n              ref: messageInputRef,\n              onSendMessage: handleSendMessage,\n              disabled: isLoading,\n              placeholder: \"\\uBB38\\uC7A5\\uC5D0 \\uB300\\uD574 \\uB354 \\uC790\\uC138\\uD788 \\uC9C8\\uBB38\\uD574\\uBCF4\\uC138\\uC694...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n            ref: chatMessagesRef,\n            children: [messages && messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyChat, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  marginBottom: '8px'\n                },\n                children: \"\\uD83D\\uDCDD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"\\uBB38\\uC7A5\\uC5D0 \\uB300\\uD574 \\uB354 \\uC790\\uC138\\uD788 \\uC9C8\\uBB38\\uD574\\uBCF4\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  marginTop: '4px'\n                },\n                children: [personaName, \"\\uC640 \\uB300\\uD654\\uB97C \\uB098\\uB20C \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this) : messages === null || messages === void 0 ? void 0 : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '12px',\n                border: '1px solid #e0e0e0',\n                borderRadius: '8px',\n                background: message.role === 'user' ? '#f0f0f0' : 'white',\n                marginBottom: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '8px',\n                  color: '#4caf50'\n                },\n                children: message.role === 'user' ? '사용자' : personaName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: 'pre-line',\n                  lineHeight: '1.6'\n                },\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#999',\n                  marginTop: '8px'\n                },\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 23\n              }, this), message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '8px',\n                  marginTop: '12px',\n                  justifyContent: 'flex-start'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => handleCopyMessage(message.content),\n                  title: \"\\uBCF5\\uC0AC\",\n                  children: \"\\uBCF5\\uC0AC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => onSwitchToMode ? onSwitchToMode('interpretation') : console.log('해석 모드로 전환'),\n                  title: \"\\uD574\\uC11D\",\n                  children: \"\\uD574\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => onSwitchToMode ? onSwitchToMode('proceed') : console.log('나아가기 모드로 전환'),\n                  title: \"\\uB098\\uC544\\uAC00\\uAE30\",\n                  children: \"\\uB098\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    color: '#666',\n                    padding: '4px',\n                    borderRadius: '4px',\n                    transition: 'all 0.2s ease'\n                  },\n                  onClick: () => console.log('현재 문장 모드입니다'),\n                  title: \"\\uBB38\\uC7A5\",\n                  children: \"\\uBB38\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n              personaName: personaName,\n              personaColor: \"#4caf50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChatInputSection, {\n            children: /*#__PURE__*/_jsxDEV(MessageInput, {\n              ref: messageInputRef,\n              onSendMessage: onSendMessage || (() => Promise.resolve(false)),\n              disabled: isLoading || false,\n              placeholder: `문장에 대해 ${personaName}에게 질문해보세요...`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceView, \"69j/v3IbrlNw9c31xpI8ibZiFlE=\");\n_c13 = SentenceView;\nexport default SentenceView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SentenceSection\");\n$RefreshReg$(_c3, \"SentenceTitle\");\n$RefreshReg$(_c4, \"SentenceContent\");\n$RefreshReg$(_c5, \"ThreadsSection\");\n$RefreshReg$(_c6, \"ThreadsList\");\n$RefreshReg$(_c7, \"ThreadItem\");\n$RefreshReg$(_c8, \"ThreadTitle\");\n$RefreshReg$(_c9, \"ThreadTime\");\n$RefreshReg$(_c0, \"ChatSection\");\n$RefreshReg$(_c1, \"ChatMessages\");\n$RefreshReg$(_c10, \"ChatInputSection\");\n$RefreshReg$(_c11, \"EmptyChat\");\n$RefreshReg$(_c12, \"Toast\");\n$RefreshReg$(_c13, \"SentenceView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","MessageInput","LoadingMessage","chatApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","SentenceSection","_c2","SentenceTitle","h2","_c3","SentenceContent","_c4","ThreadsSection","_c5","ThreadsList","_c6","ThreadItem","props","isSelected","_c7","ThreadTitle","_c8","ThreadTime","_c9","ChatSection","_c0","ChatMessages","_c1","ChatInputSection","_c10","EmptyChat","_c11","Toast","show","_c12","SentenceView","personaId","personaName","sentenceContent","threads","onThreadUpdate","selectedThreadId","onSwitchToMode","onSendMessage","isLoading","messages","_s","selectedThread","setSelectedThread","localThreads","setLocalThreads","chatMessagesRef","messageInputRef","showToast","setShowToast","toastMessage","setToastMessage","sentenceThreads","filter","thread","thread_type","targetThread","find","t","id","firstSentenceThread","current","scrollTop","scrollHeight","handleThreadSelect","handleSendMessage","message","response","chatWithThread","thread_id","user_message","data","updatedThreads","map","role","content","timestamp","Date","toISOString","updated_at","updatedThread","error","console","formatTime","toLocaleTimeString","hour","minute","showCopyToast","setTimeout","copyToClipboard","text","successMessage","navigator","clipboard","writeText","handleCopyMessage","messageContent","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","fontSize","color","onClick","indexOf","created_at","length","ref","index","padding","border","borderRadius","background","fontWeight","persona_name","whiteSpace","lineHeight","marginTop","display","gap","justifyContent","cursor","transition","title","log","disabled","placeholder","personaColor","Promise","resolve","_c13","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/SentenceView.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput, { MessageInputRef } from './MessageInput';\nimport LoadingMessage from './LoadingMessage';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread } from '../types';\n\ninterface SentenceViewProps {\n  personaId: string;\n  personaName: string;\n  sentenceContent: string;\n  threads: TrainingThread[];\n  onThreadUpdate: (threads: TrainingThread[]) => void;\n  selectedThreadId?: string | null;\n  onSwitchToMode?: (mode: 'interpretation' | 'proceed' | 'sentence') => void;\n  onSendMessage?: (message: string) => Promise<boolean>;\n  isLoading?: boolean;\n  messages?: Array<{\n    role: 'user' | 'assistant';\n    content: string;\n    timestamp: string;\n  }>;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n\nconst SentenceSection = styled.div`\n  padding: 24px;\n  border-bottom: 2px solid #e0e0e0;\n  background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\n`;\n\nconst SentenceTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SentenceContent = styled.div`\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  padding: 20px;\n  line-height: 1.6;\n  color: #555;\n  font-size: 14px;\n  white-space: pre-line;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n`;\n\nconst ThreadsSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ThreadsList = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\n\nconst ThreadItem = styled.div<{ isSelected: boolean }>`\n  padding: 12px 16px;\n  border: 1px solid ${props => props.isSelected ? '#4caf50' : '#e0e0e0'};\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#e8f5e8' : 'white'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #4caf50;\n    background: #e8f5e8;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\n\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: 1px solid #e0e0e0;\n  background: #ffffff;\n`;\n\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n\n// 토스트 스타일 컴포넌트 추가\nconst Toast = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #6c757d;\n  color: white;\n  padding: 12px 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(120%)'};\n  transition: transform 0.3s ease;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst SentenceView: React.FC<SentenceViewProps> = ({\n  personaId,\n  personaName,\n  sentenceContent,\n  threads,\n  onThreadUpdate,\n  selectedThreadId,\n  onSwitchToMode,\n  onSendMessage,\n  isLoading,\n  messages,\n}) => {\n  const [selectedThread, setSelectedThread] = useState<TrainingThread | null>(null);\n  const [localThreads, setLocalThreads] = useState<TrainingThread[]>(threads);\n  const chatMessagesRef = useRef<HTMLDivElement>(null);\n  const messageInputRef = useRef<MessageInputRef>(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  // 문장 타입의 스레드만 필터링\n  const sentenceThreads = localThreads.filter(thread => thread.thread_type === 'sentence');\n\n  useEffect(() => {\n    setLocalThreads(threads);\n    // 외부에서 선택된 스레드 ID가 있으면 해당 스레드 선택\n    if (selectedThreadId) {\n      const targetThread = threads.find(t => t.id === selectedThreadId && t.thread_type === 'sentence');\n      if (targetThread) {\n        setSelectedThread(targetThread);\n        return;\n      }\n    }\n    // 외부 선택이 없으면 첫 번째 문장 스레드를 자동 선택\n    const firstSentenceThread = threads.find(t => t.thread_type === 'sentence');\n    if (firstSentenceThread && !selectedThread) {\n      setSelectedThread(firstSentenceThread);\n    }\n  }, [threads, selectedThreadId]);\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [selectedThread?.messages]);\n\n  const handleThreadSelect = (thread: TrainingThread) => {\n    setSelectedThread(thread);\n  };\n\n  const handleSendMessage = async (message: string): Promise<boolean> => {\n    if (!selectedThread) return false;\n\n    try {\n      const response = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: message\n      });\n\n      if (response.data && response.data.response) {\n        // 스레드 업데이트\n        const updatedThreads = localThreads.map(t => \n          t.id === selectedThread.id \n            ? {\n                ...t,\n                messages: [...t.messages, \n                  {\n                    role: 'user' as const,\n                    content: message,\n                    timestamp: new Date().toISOString()\n                  },\n                  response.data!.response\n                ],\n                updated_at: new Date().toISOString()\n              }\n            : t\n        );\n        \n        setLocalThreads(updatedThreads);\n        onThreadUpdate(updatedThreads);\n        \n        // 선택된 스레드 업데이트\n        const updatedThread = updatedThreads.find(t => t.id === selectedThread.id);\n        if (updatedThread) {\n          setSelectedThread(updatedThread);\n        }\n        \n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error('문장 채팅 오류:', error);\n      return false;\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  // 토스트 메시지 표시 함수\n  const showCopyToast = (message: string) => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  // 텍스트 복사 유틸리티 함수\n  const copyToClipboard = async (text: string, successMessage: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      showCopyToast(successMessage);\n    } catch (error) {\n      console.error('복사 실패:', error);\n      showCopyToast('복사 실패');\n    }\n  };\n\n  // 메시지 복사 기능\n  const handleCopyMessage = async (messageContent: string) => {\n    await copyToClipboard(messageContent, '메시지가 복사되었습니다');\n  };\n\n  return (\n    <Container>\n      <Toast show={showToast}>\n        {toastMessage}\n      </Toast>\n      <SentenceSection>\n        <SentenceTitle>\n          문장 - {personaName}\n        </SentenceTitle>\n        <SentenceContent>\n          {sentenceContent}\n        </SentenceContent>\n      </SentenceSection>\n\n      <ThreadsSection>\n        <ThreadsList>\n          <h3 style={{ marginBottom: '12px', fontSize: '16px', color: '#333' }}>\n            문장 스레드들\n          </h3>\n          {sentenceThreads.map((thread) => (\n            <ThreadItem\n              key={thread.id}\n              isSelected={selectedThread?.id === thread.id}\n              onClick={() => handleThreadSelect(thread)}\n            >\n              <ThreadTitle>\n                문장 #{sentenceThreads.indexOf(thread) + 1}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItem>\n          ))}\n        </ThreadsList>\n\n        <ChatSection>\n          {selectedThread ? (\n            <>\n              <ChatMessages ref={chatMessagesRef}>\n                {selectedThread.messages.map((message, index) => (\n                  <div key={index} style={{ \n                    padding: '12px', \n                    border: '1px solid #e0e0e0', \n                    borderRadius: '8px',\n                    background: message.role === 'user' ? '#f0f0f0' : 'white',\n                    marginBottom: '8px'\n                  }}>\n                    <div style={{ fontWeight: 'bold', marginBottom: '8px', color: '#4caf50' }}>\n                      {message.role === 'user' ? '사용자' : message.persona_name}\n                    </div>\n                    <div style={{ whiteSpace: 'pre-line', lineHeight: '1.6' }}>\n                      {message.content}\n                    </div>\n                    <div style={{ fontSize: '12px', color: '#999', marginTop: '8px' }}>\n                      {formatTime(message.timestamp)}\n                    </div>\n                    \n                    {/* 액션 버튼들 - Assistant 메시지에만 표시 */}\n                    {message.role === 'assistant' && (\n                      <div style={{ display: 'flex', gap: '8px', marginTop: '12px', justifyContent: 'flex-start' }}>\n                        <button \n                          style={{\n                            background: 'none',\n                            border: 'none',\n                            cursor: 'pointer',\n                            fontSize: '12px',\n                            color: '#666',\n                            padding: '4px',\n                            borderRadius: '4px',\n                            transition: 'all 0.2s ease'\n                          }}\n                          onClick={() => handleCopyMessage(message.content)}\n                          title=\"복사\"\n                        >\n                          복사\n                        </button>\n                        <button \n                          style={{\n                            background: 'none',\n                            border: 'none',\n                            cursor: 'pointer',\n                            fontSize: '12px',\n                            color: '#666',\n                            padding: '4px',\n                            borderRadius: '4px',\n                            transition: 'all 0.2s ease'\n                          }}\n                          onClick={() => onSwitchToMode ? onSwitchToMode('interpretation') : console.log('해석 모드로 전환')}\n                          title=\"해석\"\n                        >\n                          해\n                        </button>\n                        <button \n                          style={{\n                            background: 'none',\n                            border: 'none',\n                            cursor: 'pointer',\n                            fontSize: '12px',\n                            color: '#666',\n                            padding: '4px',\n                            borderRadius: '4px',\n                            transition: 'all 0.2s ease'\n                          }}\n                          onClick={() => onSwitchToMode ? onSwitchToMode('proceed') : console.log('나아가기 모드로 전환')}\n                          title=\"나아가기\"\n                        >\n                          나\n                        </button>\n                        <button \n                          style={{\n                            background: 'none',\n                            border: 'none',\n                            cursor: 'pointer',\n                            fontSize: '12px',\n                            color: '#666',\n                            padding: '4px',\n                            borderRadius: '4px',\n                            transition: 'all 0.2s ease'\n                          }}\n                          onClick={() => console.log('현재 문장 모드입니다')}\n                          title=\"문장\"\n                        >\n                          문\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                ))}\n                {isLoading && <LoadingMessage />}\n              </ChatMessages>\n              \n              <ChatInputSection>\n                <MessageInput\n                  ref={messageInputRef}\n                  onSendMessage={handleSendMessage}\n                  disabled={isLoading}\n                  placeholder=\"문장에 대해 더 자세히 질문해보세요...\"\n                />\n              </ChatInputSection>\n            </>\n          ) : (\n            <>\n              {/* 일반 채팅 모드 - 해석과 동일 */}\n              <ChatMessages ref={chatMessagesRef}>\n                {messages && messages.length === 0 ? (\n                  <EmptyChat>\n                    <div style={{ fontSize: '24px', marginBottom: '8px' }}>📝</div>\n                    <div>문장에 대해 더 자세히 질문해보세요</div>\n                    <div style={{ fontSize: '12px', marginTop: '4px' }}>\n                      {personaName}와 대화를 나눌 수 있습니다\n                    </div>\n                  </EmptyChat>\n                ) : (\n                  messages?.map((message, index) => (\n                    <div key={index} style={{ \n                      padding: '12px', \n                      border: '1px solid #e0e0e0', \n                      borderRadius: '8px',\n                      background: message.role === 'user' ? '#f0f0f0' : 'white',\n                      marginBottom: '8px'\n                    }}>\n                      <div style={{ fontWeight: 'bold', marginBottom: '8px', color: '#4caf50' }}>\n                        {message.role === 'user' ? '사용자' : personaName}\n                      </div>\n                      <div style={{ whiteSpace: 'pre-line', lineHeight: '1.6' }}>\n                        {message.content}\n                      </div>\n                      <div style={{ fontSize: '12px', color: '#999', marginTop: '8px' }}>\n                        {formatTime(message.timestamp)}\n                      </div>\n                      \n                      {/* 액션 버튼들 - Assistant 메시지에만 표시 */}\n                      {message.role === 'assistant' && (\n                        <div style={{ display: 'flex', gap: '8px', marginTop: '12px', justifyContent: 'flex-start' }}>\n                          <button \n                            style={{\n                              background: 'none',\n                              border: 'none',\n                              cursor: 'pointer',\n                              fontSize: '12px',\n                              color: '#666',\n                              padding: '4px',\n                              borderRadius: '4px',\n                              transition: 'all 0.2s ease'\n                            }}\n                            onClick={() => handleCopyMessage(message.content)}\n                            title=\"복사\"\n                          >\n                            복사\n                          </button>\n                          <button \n                            style={{\n                              background: 'none',\n                              border: 'none',\n                              cursor: 'pointer',\n                              fontSize: '12px',\n                              color: '#666',\n                              padding: '4px',\n                              borderRadius: '4px',\n                              transition: 'all 0.2s ease'\n                            }}\n                            onClick={() => onSwitchToMode ? onSwitchToMode('interpretation') : console.log('해석 모드로 전환')}\n                            title=\"해석\"\n                          >\n                            해\n                          </button>\n                          <button \n                            style={{\n                              background: 'none',\n                              border: 'none',\n                              cursor: 'pointer',\n                              fontSize: '12px',\n                              color: '#666',\n                              padding: '4px',\n                              borderRadius: '4px',\n                              transition: 'all 0.2s ease'\n                            }}\n                            onClick={() => onSwitchToMode ? onSwitchToMode('proceed') : console.log('나아가기 모드로 전환')}\n                            title=\"나아가기\"\n                          >\n                            나\n                          </button>\n                          <button \n                            style={{\n                              background: 'none',\n                              border: 'none',\n                              cursor: 'pointer',\n                              fontSize: '12px',\n                              color: '#666',\n                              padding: '4px',\n                              borderRadius: '4px',\n                              transition: 'all 0.2s ease'\n                            }}\n                            onClick={() => console.log('현재 문장 모드입니다')}\n                            title=\"문장\"\n                          >\n                            문\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  ))\n                )}\n                \n                {isLoading && <LoadingMessage personaName={personaName} personaColor=\"#4caf50\" />}\n              </ChatMessages>\n              \n              <ChatInputSection>\n                <MessageInput\n                  ref={messageInputRef}\n                  onSendMessage={onSendMessage || (() => Promise.resolve(false))}\n                  disabled={isLoading || false}\n                  placeholder={`문장에 대해 ${personaName}에게 질문해보세요...`}\n                />\n              </ChatInputSection>\n            </>\n          )}\n        </ChatSection>\n      </ThreadsSection>\n    </Container>\n  );\n};\n\nexport default SentenceView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}