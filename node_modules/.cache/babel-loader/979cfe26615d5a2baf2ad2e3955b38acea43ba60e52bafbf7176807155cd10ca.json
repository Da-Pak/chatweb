{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\core\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport LoginPage from '../auth/components/LoginPage';\nimport QAPage from '../qa/components/QAPage';\nimport MainLayout from './MainLayout'; // 기존 App 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // TODO: 실제 인증 로직으로 교체 필요\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // 임시로 true\n  const [hasCompletedQA, setHasCompletedQA] = useState(false); // 임시로 false\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/qa\",\n      element: isAuthenticated ? /*#__PURE__*/_jsxDEV(QAPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\" // MainLayout이 내부적으로 라우팅을 처리하지 않으므로 와일드카드 사용\n      ,\n      element: isAuthenticated ? hasCompletedQA ? /*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 54\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/qa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 71\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 96\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rnYj/pUcT8oYI626I/oOdxLYAIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Navigate","LoginPage","QAPage","MainLayout","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","hasCompletedQA","setHasCompletedQA","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/core/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport LoginPage from '../auth/components/LoginPage';\nimport QAPage from '../qa/components/QAPage';\nimport MainLayout from './MainLayout'; // 기존 App 컴포넌트\n\nconst App: React.FC = () => {\n  // TODO: 실제 인증 로직으로 교체 필요\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // 임시로 true\n  const [hasCompletedQA, setHasCompletedQA] = useState(false); // 임시로 false\n\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<LoginPage />} />\n      <Route \n        path=\"/qa\" \n        element={isAuthenticated ? <QAPage /> : <Navigate to=\"/login\" />}\n      />\n      <Route \n        path=\"/*\" // MainLayout이 내부적으로 라우팅을 처리하지 않으므로 와일드카드 사용\n        element={isAuthenticated ? (hasCompletedQA ? <MainLayout /> : <Navigate to=\"/qa\" />) : <Navigate to=\"/login\" />}\n      />\n    </Routes>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7D,oBACEQ,OAAA,CAACP,MAAM;IAAAc,QAAA,gBACLP,OAAA,CAACN,KAAK;MAACc,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAET,OAAA,CAACJ,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Cb,OAAA,CAACN,KAAK;MACJc,IAAI,EAAC,KAAK;MACVC,OAAO,EAAEN,eAAe,gBAAGH,OAAA,CAACH,MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGb,OAAA,CAACL,QAAQ;QAACmB,EAAE,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACFb,OAAA,CAACN,KAAK;MACJc,IAAI,EAAC,IAAI,CAAC;MAAA;MACVC,OAAO,EAAEN,eAAe,GAAIE,cAAc,gBAAGL,OAAA,CAACF,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGb,OAAA,CAACL,QAAQ;QAACmB,EAAE,EAAC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAIb,OAAA,CAACL,QAAQ;QAACmB,EAAE,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACX,EAAA,CAlBID,GAAa;AAAAc,EAAA,GAAbd,GAAa;AAoBnB,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}