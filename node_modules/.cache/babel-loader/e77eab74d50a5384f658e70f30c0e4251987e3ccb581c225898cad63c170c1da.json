{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useRef,useEffect}from'react';import styled from'styled-components';import QuickPhraseSettingsModal from'./QuickPhraseSettingsModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuickPhraseContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n\"])));const QuickPhraseBtn=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 40px;\\n  border-radius: 16px; /* \\uBB38\\uC7A5\\uC120\\uD0DD \\uBC84\\uD2BC\\uACFC \\uB3D9\\uC77C\\uD55C \\uB77C\\uC6B4\\uB529 */\\n  border: 1px solid #ccc;\\n  background: linear-gradient(90deg, #ffffff 0%, #f0f0f0 100%); /* \\uC67C\\uCABD\\uC5D0\\uC11C \\uC624\\uB978\\uCABD\\uC73C\\uB85C \\uD770\\uC0C9\\u2192\\uC5F0\\uD55C\\uD68C\\uC0C9 */\\n  color: #333;\\n  font-size: 11px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n  line-height: 1.2;\\n  transition: all 0.2s ease;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* \\uC0B4\\uC9DD\\uC758 \\uC74C\\uC601 \\uCC98\\uB9AC */\\n  \\n  &:hover {\\n    background: linear-gradient(90deg, #f8f8f8 0%, #e8e8e8 100%);\\n    transform: translateY(-1px);\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\\n  }\\n  \\n  &:active {\\n    transform: translateY(0);\\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\\n  }\\n\"])));const DropdownMenu=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 50px;\\n  right: 0; /* \\uC624\\uB978\\uCABD\\uC5D0\\uC11C \\uC2DC\\uC791\\uD558\\uC5EC \\uC67C\\uCABD\\uC73C\\uB85C \\uD655\\uC7A5 */\\n  width: 250px; /* 200px\\uC5D0\\uC11C 250px\\uB85C \\uD655\\uB300 */\\n  background: #f5f5f5;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\\n  overflow: hidden;\\n  z-index: 1000;\\n  max-height: 450px; /* 400px\\uC5D0\\uC11C 450px\\uB85C \\uD655\\uB300 */\\n  overflow-y: auto;\\n  transform: \",\";\\n  transform-origin: bottom right; /* \\uAF2D\\uC9C0\\uC810\\uC744 \\uC624\\uB978\\uCABD \\uC544\\uB798\\uB85C \\uC124\\uC815 */\\n  transition: transform 0.2s ease;\\n\"])),props=>props.$show?'scale(1)':'scale(0)');const MenuItem=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 14px 18px; /* 12px 16px\\uC5D0\\uC11C 14px 18px\\uB85C \\uD655\\uB300 */\\n  border: none;\\n  background: transparent;\\n  text-align: left;\\n  cursor: \",\";\\n  font-size: 14px; /* 14px\\uC5D0\\uC11C 12px\\uB85C \\uD3F0\\uD2B8 \\uD06C\\uAE30 \\uCD95\\uC18C */\\n  color: \",\";\\n  border-bottom: none;\\n  transition: background-color 0.2s ease;\\n  \\n  &:hover {\\n    background: \",\";\\n  }\\n  \\n  &:active {\\n    background: \",\";\\n  }\\n\"])),props=>props.$isTodo?'not-allowed':'pointer',props=>props.$isTodo?'#999':'#333',props=>props.$isTodo?'transparent':'#e9ecef',props=>props.$isTodo?'transparent':'#dee2e6');const Divider=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  height: 1px;\\n  background: #ddd;\\n  margin: 4px 0;\\n\"])));const QuickPhraseButton=_ref=>{let{quickPhrases,onPhraseSelect,onPhrasesUpdate,currentInterpretation,personaId,onGenerateProceed,onGenerateSentence,currentChatMessages,currentChatContext,onRefreshThreads}=_ref;const[showMenu,setShowMenu]=useState(false);const[showSettingsModal,setShowSettingsModal]=useState(false);const menuRef=useRef(null);const handleButtonClick=()=>{setShowMenu(!showMenu);};const handlePhraseClick=function(text){let isTodo=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(isTodo)return;// TODO 항목은 클릭 불가\nonPhraseSelect(text);setShowMenu(false);};const handleGenerateProceed=async()=>{if(onGenerateProceed){const proceedPrompt=\"좋아. 너의 답변에 근거하여, 내가 나아가야 할 방향은?\";try{await onGenerateProceed(proceedPrompt);}catch(error){console.error('나아가기 생성 실패:',error);}}setShowMenu(false);};const handleGenerateSentence=async()=>{if(onGenerateSentence){const sentencePrompt=\"네 답변을 세 문장으로 통찰적, 명제형, 핵심적으로 짧게 요약 (in bullet style)\";try{await onGenerateSentence(sentencePrompt);}catch(error){console.error('문장 생성 실패:',error);}}setShowMenu(false);};const isGenerationAvailable=true;// 프롬프트 텍스트 삽입이므로 항상 사용 가능\nconst handleSettingsClick=()=>{setShowMenu(false);setShowSettingsModal(true);};// 메뉴 외부 클릭 시 메뉴 닫기\nuseEffect(()=>{const handleClickOutside=event=>{if(menuRef.current&&!menuRef.current.contains(event.target)){setShowMenu(false);}};if(showMenu){document.addEventListener('mousedown',handleClickOutside);}return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[showMenu]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(QuickPhraseContainer,{ref:menuRef,children:[/*#__PURE__*/_jsxs(QuickPhraseBtn,{onClick:handleButtonClick,children:[\"\\uC790\\uC8FC\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uC4F0\\uB294\"]}),/*#__PURE__*/_jsxs(DropdownMenu,{$show:showMenu,children:[/*#__PURE__*/_jsx(MenuItem,{onClick:handleGenerateProceed,children:\"[\\uB098\\uC544\\uAC00\\uAE30] \\uC0DD\\uC131\"}),/*#__PURE__*/_jsx(MenuItem,{onClick:handleGenerateSentence,children:\"[\\uBB38\\uC7A5] \\uC0DD\\uC131\"}),/*#__PURE__*/_jsx(Divider,{}),quickPhrases.map(phrase=>/*#__PURE__*/_jsx(MenuItem,{onClick:()=>handlePhraseClick(phrase.text),children:phrase.text},phrase.id)),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(MenuItem,{$isSettings:true,onClick:handleSettingsClick,children:\"\\uC124\\uC815 (\\uD3B8\\uC9D1 \\uCC3D \\uD638\\uCD9C)\"})]})]}),showSettingsModal&&/*#__PURE__*/_jsx(QuickPhraseSettingsModal,{quickPhrases:quickPhrases,onClose:()=>setShowSettingsModal(false),onUpdate:onPhrasesUpdate})]});};export default QuickPhraseButton;","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","QuickPhraseSettingsModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuickPhraseContainer","div","_templateObject","_taggedTemplateLiteral","QuickPhraseBtn","button","_templateObject2","DropdownMenu","_templateObject3","props","$show","MenuItem","_templateObject4","$isTodo","Divider","_templateObject5","QuickPhraseButton","_ref","quickPhrases","onPhraseSelect","onPhrasesUpdate","currentInterpretation","personaId","onGenerateProceed","onGenerateSentence","currentChatMessages","currentChatContext","onRefreshThreads","showMenu","setShowMenu","showSettingsModal","setShowSettingsModal","menuRef","handleButtonClick","handlePhraseClick","text","isTodo","arguments","length","undefined","handleGenerateProceed","proceedPrompt","error","console","handleGenerateSentence","sentencePrompt","isGenerationAvailable","handleSettingsClick","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","ref","onClick","map","phrase","id","$isSettings","onClose","onUpdate"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/QuickPhraseButton.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { QuickPhrase } from '../api/quickPhraseApi';\nimport QuickPhraseSettingsModal from './QuickPhraseSettingsModal';\n\ninterface QuickPhraseButtonProps {\n  quickPhrases: QuickPhrase[];\n  onPhraseSelect: (text: string) => void;\n  onPhrasesUpdate: () => void;\n  currentInterpretation?: string;\n  personaId?: string;\n  onGenerateProceed?: (messageContent: string) => Promise<void>;\n  onGenerateSentence?: (messageContent: string) => Promise<void>;\n  currentChatMessages?: Array<{\n    role: 'user' | 'assistant';\n    content: string;\n    timestamp: string;\n  }>;\n  currentChatContext?: string;\n  onRefreshThreads?: () => void;\n}\n\nconst QuickPhraseContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst QuickPhraseBtn = styled.button`\n  width: 100%;\n  height: 40px;\n  border-radius: 16px; /* 문장선택 버튼과 동일한 라운딩 */\n  border: 1px solid #ccc;\n  background: linear-gradient(90deg, #ffffff 0%, #f0f0f0 100%); /* 왼쪽에서 오른쪽으로 흰색→연한회색 */\n  color: #333;\n  font-size: 11px;\n  font-weight: bold;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  line-height: 1.2;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 살짝의 음영 처리 */\n  \n  &:hover {\n    background: linear-gradient(90deg, #f8f8f8 0%, #e8e8e8 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst DropdownMenu = styled.div<{ $show: boolean }>`\n  position: absolute;\n  bottom: 50px;\n  right: 0; /* 오른쪽에서 시작하여 왼쪽으로 확장 */\n  width: 250px; /* 200px에서 250px로 확대 */\n  background: #f5f5f5;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  z-index: 1000;\n  max-height: 450px; /* 400px에서 450px로 확대 */\n  overflow-y: auto;\n  transform: ${props => props.$show ? 'scale(1)' : 'scale(0)'};\n  transform-origin: bottom right; /* 꼭지점을 오른쪽 아래로 설정 */\n  transition: transform 0.2s ease;\n`;\n\nconst MenuItem = styled.button<{ $isTodo?: boolean; $isSettings?: boolean }>`\n  width: 100%;\n  padding: 14px 18px; /* 12px 16px에서 14px 18px로 확대 */\n  border: none;\n  background: transparent;\n  text-align: left;\n  cursor: ${props => props.$isTodo ? 'not-allowed' : 'pointer'};\n  font-size: 14px; /* 14px에서 12px로 폰트 크기 축소 */\n  color: ${props => props.$isTodo ? '#999' : '#333'};\n  border-bottom: none;\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.$isTodo ? 'transparent' : '#e9ecef'};\n  }\n  \n  &:active {\n    background: ${props => props.$isTodo ? 'transparent' : '#dee2e6'};\n  }\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  background: #ddd;\n  margin: 4px 0;\n`;\n\nconst QuickPhraseButton: React.FC<QuickPhraseButtonProps> = ({\n  quickPhrases,\n  onPhraseSelect,\n  onPhrasesUpdate,\n  currentInterpretation,\n  personaId,\n  onGenerateProceed,\n  onGenerateSentence,\n  currentChatMessages,\n  currentChatContext,\n  onRefreshThreads\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const handleButtonClick = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handlePhraseClick = (text: string, isTodo: boolean = false) => {\n    if (isTodo) return; // TODO 항목은 클릭 불가\n    \n    onPhraseSelect(text);\n    setShowMenu(false);\n  };\n\n  const handleGenerateProceed = async () => {\n    if (onGenerateProceed) {\n      const proceedPrompt = \"좋아. 너의 답변에 근거하여, 내가 나아가야 할 방향은?\";\n      try {\n        await onGenerateProceed(proceedPrompt);\n      } catch (error) {\n        console.error('나아가기 생성 실패:', error);\n      }\n    }\n    setShowMenu(false);\n  };\n\n  const handleGenerateSentence = async () => {\n    if (onGenerateSentence) {\n      const sentencePrompt = \"네 답변을 세 문장으로 통찰적, 명제형, 핵심적으로 짧게 요약 (in bullet style)\";\n      try {\n        await onGenerateSentence(sentencePrompt);\n      } catch (error) {\n        console.error('문장 생성 실패:', error);\n      }\n    }\n    setShowMenu(false);\n  };\n\n  const isGenerationAvailable = true; // 프롬프트 텍스트 삽입이므로 항상 사용 가능\n\n  const handleSettingsClick = () => {\n    setShowMenu(false);\n    setShowSettingsModal(true);\n  };\n\n  // 메뉴 외부 클릭 시 메뉴 닫기\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setShowMenu(false);\n      }\n    };\n\n    if (showMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showMenu]);\n\n  return (\n    <>\n      <QuickPhraseContainer ref={menuRef}>\n        <QuickPhraseBtn onClick={handleButtonClick}>\n          자주<br/>쓰는\n        </QuickPhraseBtn>\n        \n        <DropdownMenu $show={showMenu}>\n          {/* 나아가기, 문장 생성 항목들 */}\n          <MenuItem \n            onClick={handleGenerateProceed}\n          >\n            [나아가기] 생성\n          </MenuItem>\n          <MenuItem \n            onClick={handleGenerateSentence}\n          >\n            [문장] 생성\n          </MenuItem>\n          \n          <Divider />\n          \n          {/* 실제 자주쓰는 문장들 */}\n          {quickPhrases.map((phrase) => (\n            <MenuItem \n              key={phrase.id}\n              onClick={() => handlePhraseClick(phrase.text)}\n            >\n              {phrase.text}\n            </MenuItem>\n          ))}\n          \n          <Divider />\n          \n          {/* 설정 메뉴 */}\n          <MenuItem $isSettings onClick={handleSettingsClick}>\n            설정 (편집 창 호출)\n          </MenuItem>\n        </DropdownMenu>\n      </QuickPhraseContainer>\n\n      {/* 설정 모달 */}\n      {showSettingsModal && (\n        <QuickPhraseSettingsModal\n          quickPhrases={quickPhrases}\n          onClose={() => setShowSettingsModal(false)}\n          onUpdate={onPhrasesUpdate}\n        />\n      )}\n    </>\n  );\n};\n\nexport default QuickPhraseButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}