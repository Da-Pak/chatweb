{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\shared\\\\components\\\\ConversationSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sidebar, SidebarHeader, SidebarTitle, SidebarContent, SidebarMenuContent, SidebarToggleButton } from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n_c = AccordionContainer;\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n_c2 = AccordionItem;\nconst AccordionHeader = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n_c3 = AccordionHeader;\nconst ThreadsList = styled.div`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n_c4 = ThreadsList;\nconst ResizableContainer = styled.div`\n  position: relative;\n  height: ${props => props.$isExpanded ? `${props.$height}px` : '0'};\n  min-height: ${props => props.$isExpanded ? '100px' : '0'};\n  overflow: hidden;\n  transition: height 0.3s ease;\n  background: #f8f9fa;\n  border-bottom: ${props => props.$isExpanded ? '2px solid #ddd' : 'none'};\n  \n  &:hover {\n    border-bottom-color: ${props => props.$isExpanded ? '#6c757d' : 'transparent'};\n  }\n`;\n_c5 = ResizableContainer;\nconst InteractionRecordsList = styled.div`\n  height: calc(100% - 6px);\n  overflow-y: auto;\n  padding: 8px;\n  padding-bottom: 14px; /* resize handle을 위한 여유 공간 */\n`;\n_c6 = InteractionRecordsList;\nconst ResizeHandle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 6px;\n  cursor: ns-resize;\n  background: rgba(108, 117, 125, 0.3);\n  z-index: 10;\n  border-top: 1px solid #ddd;\n  \n  &:hover {\n    background: #6c757d;\n    border-top-color: #5a6268;\n  }\n  \n  &:active {\n    background: #5a6268;\n    border-top-color: #495057;\n  }\n  \n  /* 더 넓은 클릭 영역을 위한 가상 요소 */\n  &::before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 0;\n    right: 0;\n    height: 12px;\n    cursor: ns-resize;\n  }\n`;\n_c7 = ResizeHandle;\nconst RecordThreadItem = styled.div`\n  padding: 8px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n    border-color: #6c757d;\n  }\n`;\n_c8 = RecordThreadItem;\nconst ThreadTypeTag = styled.span`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  background-color: #6c757d;\n  color: white;\n`;\n_c9 = ThreadTypeTag;\nconst ThreadItem = styled.div`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n_c0 = ThreadItem;\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n_c1 = ThreadItemContent;\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n_c10 = DeleteThreadButton;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n_c11 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n_c12 = ThreadTime;\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n  mode,\n  personas,\n  verbalizationThreads,\n  onSelectVerbalizationThread\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [threads, setThreads] = useState({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState([]);\n  const [allRecentThreads, setAllRecentThreads] = useState([]);\n  const [selectedThreadId, setSelectedThreadId] = useState(null);\n  const [interactionHeight, setInteractionHeight] = useState(300);\n  const [isResizing, setIsResizing] = useState(false);\n  const menuItems = mode === 'recent' ? [] // 최근 상호작용 모드에서는 메뉴 아이템 없음\n  : [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n  useEffect(() => {\n    const loadData = async () => {\n      if (mode === 'recent' && personas) {\n        // 최근 상호작용 모드: 모든 페르소나의 스레드 로드\n        try {\n          const allPersonaThreads = [];\n          for (const [personaId, persona] of Object.entries(personas)) {\n            try {\n              const response = await chatApi.getPersonaThreads(personaId);\n              if (response.data) {\n                const threadsWithPersonaInfo = response.data.map(thread => ({\n                  ...thread,\n                  persona_id: personaId,\n                  persona_name: persona.name\n                }));\n                allPersonaThreads.push(...threadsWithPersonaInfo);\n              }\n            } catch (error) {\n              console.error(`페르소나 ${personaId} 스레드 로드 실패:`, error);\n            }\n          }\n\n          // 최신순으로 정렬\n          const sortedThreads = allPersonaThreads.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n          setAllRecentThreads(sortedThreads);\n        } catch (error) {\n          console.error('전체 스레드 로드 실패:', error);\n        }\n        return;\n      }\n      if (!selectedPersonaId) return;\n      try {\n        // 기존 페르소나 모드 로직\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data.filter(t => t.thread_type === 'interpretation').sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()),\n            proceed: threadsResponse.data.filter(t => t.thread_type === 'proceed').sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()),\n            sentence: threadsResponse.data.filter(t => t.thread_type === 'sentence').sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          const sortedRecords = recordsResponse.data.map(record => ({\n            ...record,\n            threads: record.threads.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n          }));\n          setInteractionRecords(sortedRecords);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n    loadData();\n  }, [selectedPersonaId, refreshTrigger, mode, personas]);\n  const handleAccordionToggle = itemId => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      } else {\n        const latestThread = itemThreads[0];\n        setSelectedThreadId(latestThread.id);\n        onSelectItem(`${itemId}-thread-${latestThread.id}`);\n      }\n    }\n  };\n  const handleRecordThreadSelect = thread => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n  const handleMouseDown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    const startY = e.clientY;\n    const startHeight = interactionHeight;\n    const handleMouseMove = e => {\n      const deltaY = e.clientY - startY;\n      const newHeight = Math.max(100, Math.min(600, startHeight + deltaY));\n      setInteractionHeight(newHeight);\n    };\n    const handleMouseUp = () => {\n      setIsResizing(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const handleThreadSelect = (threadId, itemType) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n  const handleDeleteThread = async (threadId, e) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = {\n            ...threads\n          };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key] = updatedThreads[key].filter(t => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n  const getThreadTypeLabel = type => {\n    switch (type) {\n      case 'interpretation':\n        return '해석';\n      case 'proceed':\n        return '나아가기';\n      case 'sentence':\n        return '문장';\n      default:\n        return type;\n    }\n  };\n  const getThreadContent = thread => {\n    var _thread$content;\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    }\n    return ((_thread$content = thread.content) === null || _thread$content === void 0 ? void 0 : _thread$content.length) > 30 ? thread.content.substring(0, 30) + '...' : thread.content || '내용 없음';\n  };\n  const renderThreads = itemId => {\n    const itemThreads = threads[itemId] || [];\n    const isExpanded = expandedItems.has(itemId);\n    return /*#__PURE__*/_jsxDEV(ThreadsList, {\n      $isExpanded: isExpanded,\n      children: [itemThreads.map((thread, index) => /*#__PURE__*/_jsxDEV(ThreadItem, {\n        $isSelected: selectedThreadId === thread.id,\n        onClick: () => handleThreadSelect(thread.id, itemId),\n        children: [/*#__PURE__*/_jsxDEV(ThreadItemContent, {\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: [itemId === 'interpretation' && `해석 #${itemThreads.length - index}`, itemId === 'proceed' && `나아가기 #${itemThreads.length - index}`, itemId === 'sentence' && `문장 #${itemThreads.length - index}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteThreadButton, {\n          onClick: e => handleDeleteThread(thread.id, e),\n          title: \"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this)), itemThreads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px 32px',\n          fontSize: '14px',\n          color: '#999'\n        },\n        children: \"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this);\n  };\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n\n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(record => record.persona_id === selectedPersonaId);\n    return /*#__PURE__*/_jsxDEV(ResizableContainer, {\n      $isExpanded: isExpanded,\n      $height: interactionHeight,\n      children: isExpanded && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(InteractionRecordsList, {\n          $isExpanded: isExpanded,\n          children: currentPersonaRecord ? currentPersonaRecord.threads.map(thread => /*#__PURE__*/_jsxDEV(RecordThreadItem, {\n            $isSelected: selectedThreadId === thread.id,\n            onClick: () => handleRecordThreadSelect(thread),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ThreadTypeTag, {\n                type: thread.thread_type,\n                children: getThreadTypeLabel(thread.thread_type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 23\n              }, this), getThreadContent(thread)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '11px',\n                opacity: 0.7,\n                marginTop: '2px'\n              },\n              children: formatTime(thread.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 21\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '16px',\n              fontSize: '14px',\n              color: '#999',\n              textAlign: 'center'\n            },\n            children: \"\\uC774 \\uD398\\uB974\\uC18C\\uB098\\uC758 \\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResizeHandle, {\n          onMouseDown: handleMouseDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this);\n  };\n  const getThreadTitle = thread => {\n    let content = '';\n    if (thread.messages && thread.messages.length > 0) {\n      content = thread.messages[0].content;\n    } else if (thread.content) {\n      content = thread.content;\n    }\n    if (content.length > 50) {\n      return content.substring(0, 50) + '...';\n    }\n    return content || '내용 없음';\n  };\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"250px\",\n    $isCollapsed: isCollapsed,\n    $variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarHeader, {\n      $isCollapsed: isCollapsed,\n      children: mode === 'recent' ? /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        $isCollapsed: isCollapsed,\n        children: \"\\uC804\\uCCB4 \\uC0C1\\uD638\\uC791\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this) : selectedPersonaName ? /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        $isCollapsed: isCollapsed,\n        children: selectedPersonaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      $isCollapsed: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarMenuContent, {\n        $variant: \"conversation\",\n        children: mode === 'recent' ?\n        /*#__PURE__*/\n        // 최근 상호작용 모드: 스레드 목록 직접 표시\n        _jsxDEV(\"div\", {\n          style: {\n            padding: '16px 0'\n          },\n          children: [allRecentThreads.map(thread => {\n            var _thread$messages;\n            return /*#__PURE__*/_jsxDEV(ThreadItem, {\n              $isSelected: selectedThreadId === thread.id,\n              onClick: () => {\n                setSelectedThreadId(thread.id);\n                onSelectItem(`recent-thread-${thread.id}-${thread.persona_id}`);\n              },\n              children: /*#__PURE__*/_jsxDEV(ThreadItemContent, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    marginBottom: '4px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '2px 6px',\n                      background: '#ffffff',\n                      color: '#000000',\n                      border: '1px solid #000000',\n                      borderRadius: '4px',\n                      fontSize: '10px',\n                      fontWeight: '600'\n                    },\n                    children: thread.persona_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ThreadTypeTag, {\n                    type: thread.thread_type,\n                    children: getThreadTypeLabel(thread.thread_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ThreadTitle, {\n                  children: getThreadTitle(thread)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n                  children: [formatTime(thread.created_at), \" \\u2022 \", ((_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.length) || 0, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)\n            }, `${thread.persona_id}-${thread.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this);\n          }), allRecentThreads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '16px 32px',\n              fontSize: '14px',\n              color: '#999',\n              textAlign: 'center'\n            },\n            children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // 기존 페르소나 모드: 아코디언 메뉴\n        _jsxDEV(AccordionContainer, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n              $isSelected: selectedItem === item.id,\n              $isExpanded: expandedItems.has(item.id),\n              onClick: () => handleAccordionToggle(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 19\n            }, this), item.id === 'interaction_history' ? renderInteractionRecords() : renderThreads(item.id)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationSidebar, \"LAQW8jq1oM35e/baiwyc71/bXYo=\");\n_c13 = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"AccordionContainer\");\n$RefreshReg$(_c2, \"AccordionItem\");\n$RefreshReg$(_c3, \"AccordionHeader\");\n$RefreshReg$(_c4, \"ThreadsList\");\n$RefreshReg$(_c5, \"ResizableContainer\");\n$RefreshReg$(_c6, \"InteractionRecordsList\");\n$RefreshReg$(_c7, \"ResizeHandle\");\n$RefreshReg$(_c8, \"RecordThreadItem\");\n$RefreshReg$(_c9, \"ThreadTypeTag\");\n$RefreshReg$(_c0, \"ThreadItem\");\n$RefreshReg$(_c1, \"ThreadItemContent\");\n$RefreshReg$(_c10, \"DeleteThreadButton\");\n$RefreshReg$(_c11, \"ThreadTitle\");\n$RefreshReg$(_c12, \"ThreadTime\");\n$RefreshReg$(_c13, \"ConversationSidebar\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","AccordionContainer","div","_c","AccordionItem","_c2","AccordionHeader","props","$isSelected","_c3","ThreadsList","$isExpanded","_c4","ResizableContainer","$height","_c5","InteractionRecordsList","_c6","ResizeHandle","_c7","RecordThreadItem","_c8","ThreadTypeTag","span","_c9","ThreadItem","_c0","ThreadItemContent","_c1","DeleteThreadButton","button","_c10","ThreadTitle","_c11","ThreadTime","_c12","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","mode","personas","verbalizationThreads","onSelectVerbalizationThread","_s","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","interactionRecords","setInteractionRecords","allRecentThreads","setAllRecentThreads","selectedThreadId","setSelectedThreadId","interactionHeight","setInteractionHeight","isResizing","setIsResizing","menuItems","id","name","loadData","allPersonaThreads","personaId","persona","Object","entries","response","getPersonaThreads","data","threadsWithPersonaInfo","map","thread","persona_id","persona_name","push","error","console","sortedThreads","sort","a","b","Date","created_at","getTime","threadsResponse","threadsByType","filter","t","thread_type","recordsResponse","getAllInteractionRecords","sortedRecords","record","handleAccordionToggle","itemId","newExpanded","has","delete","add","itemThreads","length","latestThread","handleRecordThreadSelect","handleMouseDown","e","preventDefault","stopPropagation","startY","clientY","startHeight","handleMouseMove","deltaY","newHeight","Math","max","min","handleMouseUp","document","removeEventListener","addEventListener","formatTime","timestamp","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","handleThreadSelect","threadId","itemType","handleDeleteThread","window","confirm","result","deleteThread","updatedThreads","keys","forEach","key","alert","getThreadTypeLabel","type","getThreadContent","_thread$content","messages","firstMessage","content","substring","renderThreads","isExpanded","children","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","style","padding","fontSize","color","renderInteractionRecords","currentPersonaRecord","find","opacity","marginTop","textAlign","onMouseDown","getThreadTitle","width","$isCollapsed","$variant","_thread$messages","display","alignItems","gap","marginBottom","background","border","borderRadius","fontWeight","item","_c13","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, InteractionRecord } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number;\n  mode?: 'persona' | 'recent' | 'verbalization';\n  personas?: Record<string, any>;\n  verbalizationThreads?: TrainingThread[];\n  onSelectVerbalizationThread?: (thread: TrainingThread | null) => void;\n}\n\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ $isSelected: boolean; $isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst ThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst ResizableContainer = styled.div<{ $isExpanded: boolean; $height: number }>`\n  position: relative;\n  height: ${props => props.$isExpanded ? `${props.$height}px` : '0'};\n  min-height: ${props => props.$isExpanded ? '100px' : '0'};\n  overflow: hidden;\n  transition: height 0.3s ease;\n  background: #f8f9fa;\n  border-bottom: ${props => props.$isExpanded ? '2px solid #ddd' : 'none'};\n  \n  &:hover {\n    border-bottom-color: ${props => props.$isExpanded ? '#6c757d' : 'transparent'};\n  }\n`;\n\nconst InteractionRecordsList = styled.div<{ $isExpanded: boolean }>`\n  height: calc(100% - 6px);\n  overflow-y: auto;\n  padding: 8px;\n  padding-bottom: 14px; /* resize handle을 위한 여유 공간 */\n`;\n\nconst ResizeHandle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 6px;\n  cursor: ns-resize;\n  background: rgba(108, 117, 125, 0.3);\n  z-index: 10;\n  border-top: 1px solid #ddd;\n  \n  &:hover {\n    background: #6c757d;\n    border-top-color: #5a6268;\n  }\n  \n  &:active {\n    background: #5a6268;\n    border-top-color: #495057;\n  }\n  \n  /* 더 넓은 클릭 영역을 위한 가상 요소 */\n  &::before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 0;\n    right: 0;\n    height: 12px;\n    cursor: ns-resize;\n  }\n`;\n\nconst RecordThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n    border-color: #6c757d;\n  }\n`;\n\nconst ThreadTypeTag = styled.span<{ type: string }>`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  background-color: #6c757d;\n  color: white;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n  mode,\n  personas,\n  verbalizationThreads,\n  onSelectVerbalizationThread,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState<InteractionRecord[]>([]);\n  const [allRecentThreads, setAllRecentThreads] = useState<Array<TrainingThread & { persona_id: string; persona_name: string }>>([]);\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n  const [interactionHeight, setInteractionHeight] = useState(300);\n  const [isResizing, setIsResizing] = useState(false);\n\n  const menuItems = mode === 'recent' \n    ? [] // 최근 상호작용 모드에서는 메뉴 아이템 없음\n    : [\n        { id: 'interpretation', name: '해석' },\n        { id: 'proceed', name: '나아가기' },\n        { id: 'sentence', name: '문장' },\n        { id: 'interaction_history', name: '상호작용 기록' },\n      ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (mode === 'recent' && personas) {\n        // 최근 상호작용 모드: 모든 페르소나의 스레드 로드\n        try {\n          const allPersonaThreads: Array<TrainingThread & { persona_id: string; persona_name: string }> = [];\n          \n          for (const [personaId, persona] of Object.entries(personas)) {\n            try {\n              const response = await chatApi.getPersonaThreads(personaId);\n              if (response.data) {\n                const threadsWithPersonaInfo = response.data.map((thread: TrainingThread) => ({\n                  ...thread,\n                  persona_id: personaId,\n                  persona_name: persona.name,\n                }));\n                allPersonaThreads.push(...threadsWithPersonaInfo);\n              }\n            } catch (error) {\n              console.error(`페르소나 ${personaId} 스레드 로드 실패:`, error);\n            }\n          }\n          \n          // 최신순으로 정렬\n          const sortedThreads = allPersonaThreads.sort((a, b) => \n            new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n          );\n          \n          setAllRecentThreads(sortedThreads);\n        } catch (error) {\n          console.error('전체 스레드 로드 실패:', error);\n        }\n        return;\n      }\n\n      if (!selectedPersonaId) return;\n\n      try {\n        // 기존 페르소나 모드 로직\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data\n              .filter((t: any) => t.thread_type === 'interpretation')\n              .sort((a: any, b: any) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()),\n            proceed: threadsResponse.data\n              .filter((t: any) => t.thread_type === 'proceed')\n              .sort((a: any, b: any) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()),\n            sentence: threadsResponse.data\n              .filter((t: any) => t.thread_type === 'sentence')\n              .sort((a: any, b: any) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          const sortedRecords = recordsResponse.data.map((record: any) => ({\n            ...record,\n            threads: record.threads.sort((a: any, b: any) => \n              new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n            )\n          }));\n          setInteractionRecords(sortedRecords);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n\n    loadData();\n  }, [selectedPersonaId, refreshTrigger, mode, personas]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId as keyof typeof threads] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      } else {\n        const latestThread = itemThreads[0];\n        setSelectedThreadId(latestThread.id);\n        onSelectItem(`${itemId}-thread-${latestThread.id}`);\n      }\n    }\n  };\n\n  const handleRecordThreadSelect = (thread: TrainingThread) => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    \n    const startY = e.clientY;\n    const startHeight = interactionHeight;\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      const deltaY = e.clientY - startY;\n      const newHeight = Math.max(100, Math.min(600, startHeight + deltaY));\n      setInteractionHeight(newHeight);\n    };\n    \n    const handleMouseUp = () => {\n      setIsResizing(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatDate = (timestamp: string) => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = { ...threads };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter((t: any) => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          \n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n\n  const getThreadTypeLabel = (type: string) => {\n    switch (type) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      default: return type;\n    }\n  };\n\n  const getThreadContent = (thread: TrainingThread) => {\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 \n        ? firstMessage.content.substring(0, 30) + '...' \n        : firstMessage.content;\n    }\n    return thread.content?.length > 30 \n      ? thread.content.substring(0, 30) + '...' \n      : thread.content || '내용 없음';\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList $isExpanded={isExpanded}>\n        {itemThreads.map((thread: any, index: number) => (\n          <ThreadItem\n            key={thread.id}\n            $isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${itemThreads.length - index}`}\n                {itemId === 'proceed' && `나아가기 #${itemThreads.length - index}`}\n                {itemId === 'sentence' && `문장 #${itemThreads.length - index}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n    \n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(\n      record => record.persona_id === selectedPersonaId\n    );\n\n    return (\n      <ResizableContainer \n        $isExpanded={isExpanded}\n        $height={interactionHeight}\n      >\n        {isExpanded && (\n          <>\n            <InteractionRecordsList $isExpanded={isExpanded}>\n              {currentPersonaRecord ? (\n                currentPersonaRecord.threads.map((thread) => (\n                  <RecordThreadItem\n                    key={thread.id}\n                    $isSelected={selectedThreadId === thread.id}\n                    onClick={() => handleRecordThreadSelect(thread)}\n                  >\n                    <div>\n                      <ThreadTypeTag type={thread.thread_type}>\n                        {getThreadTypeLabel(thread.thread_type)}\n                      </ThreadTypeTag>\n                      {getThreadContent(thread)}\n                    </div>\n                    <div style={{ fontSize: '11px', opacity: 0.7, marginTop: '2px' }}>\n                      {formatTime(thread.created_at)}\n                    </div>\n                  </RecordThreadItem>\n                ))\n              ) : (\n                <div style={{ padding: '16px', fontSize: '14px', color: '#999', textAlign: 'center' }}>\n                  이 페르소나의 상호작용 기록이 없습니다\n                </div>\n              )}\n            </InteractionRecordsList>\n            <ResizeHandle onMouseDown={handleMouseDown} />\n          </>\n        )}\n      </ResizableContainer>\n    );\n  };\n\n  const getThreadTitle = (thread: TrainingThread) => {\n    let content = '';\n    \n    if (thread.messages && thread.messages.length > 0) {\n      content = thread.messages[0].content;\n    } else if (thread.content) {\n      content = thread.content;\n    }\n    \n    if (content.length > 50) {\n      return content.substring(0, 50) + '...';\n    }\n    return content || '내용 없음';\n  };\n\n  return (\n    <Sidebar width=\"250px\" $isCollapsed={isCollapsed} $variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader $isCollapsed={isCollapsed}>\n        {mode === 'recent' ? (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            전체 상호작용\n          </SidebarTitle>\n        ) : selectedPersonaName ? (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        ) : null}\n      </SidebarHeader>\n\n      <SidebarContent $isCollapsed={isCollapsed}>\n        <SidebarMenuContent $variant=\"conversation\">\n          {mode === 'recent' ? (\n            // 최근 상호작용 모드: 스레드 목록 직접 표시\n            <div style={{ padding: '16px 0' }}>\n              {allRecentThreads.map((thread) => (\n                <ThreadItem\n                  key={`${thread.persona_id}-${thread.id}`}\n                  $isSelected={selectedThreadId === thread.id}\n                  onClick={() => {\n                    setSelectedThreadId(thread.id);\n                    onSelectItem(`recent-thread-${thread.id}-${thread.persona_id}`);\n                  }}\n                >\n                  <ThreadItemContent>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '4px' }}>\n                      <span style={{\n                        padding: '2px 6px',\n                        background: '#ffffff',\n                        color: '#000000',\n                        border: '1px solid #000000',\n                        borderRadius: '4px',\n                        fontSize: '10px',\n                        fontWeight: '600',\n                      }}>\n                        {thread.persona_name}\n                      </span>\n                      <ThreadTypeTag type={thread.thread_type}>\n                        {getThreadTypeLabel(thread.thread_type)}\n                      </ThreadTypeTag>\n                    </div>\n                    <ThreadTitle>\n                      {getThreadTitle(thread)}\n                    </ThreadTitle>\n                    <ThreadTime>\n                      {formatTime(thread.created_at)} • {thread.messages?.length || 0}개 메시지\n                    </ThreadTime>\n                  </ThreadItemContent>\n                </ThreadItem>\n              ))}\n              {allRecentThreads.length === 0 && (\n                <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999', textAlign: 'center' }}>\n                  상호작용 기록이 없습니다\n                </div>\n              )}\n            </div>\n          ) : (\n            // 기존 페르소나 모드: 아코디언 메뉴\n            <AccordionContainer>\n              {menuItems.map((item) => (\n                <AccordionItem key={item.id}>\n                  <AccordionHeader\n                    $isSelected={selectedItem === item.id}\n                    $isExpanded={expandedItems.has(item.id)}\n                    onClick={() => handleAccordionToggle(item.id)}\n                  >\n                    <span>{item.name}</span>\n                  </AccordionHeader>\n                  \n                  {item.id === 'interaction_history' \n                    ? renderInteractionRecords()\n                    : renderThreads(item.id)\n                  }\n                </AccordionItem>\n              ))}\n            </AccordionContainer>\n          )}\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}