{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\ConversationSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sidebar, SidebarHeader, SidebarTitle, SidebarContent, SidebarMenuContent, SidebarToggleButton } from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 새로운 스타일 컴포넌트들\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n_c = AccordionContainer;\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n_c2 = AccordionItem;\nconst AccordionHeader = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#6c757d' : 'transparent'};\n  color: ${props => props.isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.isSelected ? '600' : '500'};\n  border-radius: ${props => props.isSelected ? '8px' : '0'};\n  margin: ${props => props.isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.isSelected ? '#6c757d' : '#f8f9fa'};\n  }\n`;\n_c3 = AccordionHeader;\nconst AccordionIcon = styled.span`\n  transform: rotate(${props => props.isExpanded ? '90deg' : '0deg'});\n  transition: transform 0.2s ease;\n  font-size: 12px;\n`;\nconst ThreadsList = styled.div`\n  max-height: ${props => props.isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n_c4 = ThreadsList;\nconst ThreadItem = styled.div`\n  padding: 8px 32px;\n  cursor: pointer;\n  color: ${props => props.isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.isSelected ? '#f0f4ff' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f0f4ff;\n    color: #6c757d;\n  }\n`;\n_c5 = ThreadItem;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n  flex: 1;\n`;\n_c6 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n_c7 = ThreadTime;\nconst ThreadInfo = styled.div`\n  flex: 1;\n`;\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  color: #999;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #ff4444;\n    background: rgba(255, 68, 68, 0.1);\n  }\n`;\n_c8 = DeleteThreadButton;\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [threads, setThreads] = useState({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [selectedThreadId, setSelectedThreadId] = useState(null);\n  const menuItems = [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n\n  // 스레드 데이터 로드\n  useEffect(() => {\n    const loadThreads = async () => {\n      if (!selectedPersonaId) return;\n      try {\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (response.data) {\n          const threadsByType = {\n            interpretation: response.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: response.data.filter(t => t.thread_type === 'proceed'),\n            sentence: response.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n      } catch (error) {\n        console.error('스레드 로드 실패:', error);\n      }\n    };\n    loadThreads();\n  }, [selectedPersonaId]);\n  const handleAccordionToggle = itemId => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n\n    // 아코디언 토글 시에도 메인 아이템 선택\n    onSelectItem(itemId);\n  };\n  const handleThreadSelect = (threadId, itemType) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n  const handleThreadDelete = async (e, threadId) => {\n    e.stopPropagation(); // 스레드 선택 이벤트 방지\n\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        // TODO: 백엔드 API 호출로 스레드 삭제\n        // await chatApi.deleteThread(threadId);\n\n        // 로컬 상태에서 스레드 제거\n        const updatedThreads = {\n          interpretation: threads.interpretation.filter(t => t.id !== threadId),\n          proceed: threads.proceed.filter(t => t.id !== threadId),\n          sentence: threads.sentence.filter(t => t.id !== threadId)\n        };\n        setThreads(updatedThreads);\n\n        // 선택된 스레드가 삭제된 경우 선택 해제\n        if (selectedThreadId === threadId) {\n          setSelectedThreadId(null);\n          onSelectItem(null);\n        }\n        console.log('스레드가 삭제되었습니다');\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const renderThreads = itemId => {\n    const itemThreads = threads[itemId] || [];\n    const isExpanded = expandedItems.has(itemId);\n    return /*#__PURE__*/_jsxDEV(ThreadsList, {\n      isExpanded: isExpanded,\n      children: [itemThreads.map((thread, index) => /*#__PURE__*/_jsxDEV(ThreadItem, {\n        isSelected: selectedThreadId === thread.id,\n        onClick: e => {\n          e.stopPropagation();\n          handleThreadSelect(thread.id, itemId);\n        },\n        children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n          children: [itemId === 'interpretation' && `해석 #${index + 1}`, itemId === 'proceed' && `나아가기 #${index + 1}`, itemId === 'sentence' && `문장 #${index + 1}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n          children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteThreadButton, {\n          onClick: e => {\n            e.stopPropagation();\n            handleThreadDelete(e, thread.id);\n          },\n          children: \"\\uD83D\\uDDD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)), itemThreads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px 32px',\n          fontSize: '14px',\n          color: '#999'\n        },\n        children: \"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"250px\",\n    isCollapsed: isCollapsed,\n    variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle,\n      children: isCollapsed ? '▷' : '◁'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarHeader, {\n      isCollapsed: isCollapsed,\n      children: selectedPersonaName && /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        isCollapsed: isCollapsed,\n        children: selectedPersonaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      isCollapsed: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarMenuContent, {\n        variant: \"conversation\",\n        children: /*#__PURE__*/_jsxDEV(AccordionContainer, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n              isSelected: selectedItem === item.id,\n              isExpanded: expandedItems.has(item.id),\n              onClick: () => handleAccordionToggle(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), item.id !== 'interaction_history' && renderThreads(item.id)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationSidebar, \"HbHWepsxU50ox/m+RRJkLA3B/5Y=\");\n_c9 = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AccordionContainer\");\n$RefreshReg$(_c2, \"AccordionItem\");\n$RefreshReg$(_c3, \"AccordionHeader\");\n$RefreshReg$(_c4, \"ThreadsList\");\n$RefreshReg$(_c5, \"ThreadItem\");\n$RefreshReg$(_c6, \"ThreadTitle\");\n$RefreshReg$(_c7, \"ThreadTime\");\n$RefreshReg$(_c8, \"DeleteThreadButton\");\n$RefreshReg$(_c9, \"ConversationSidebar\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxDEV","_jsxDEV","AccordionContainer","div","_c","AccordionItem","_c2","AccordionHeader","props","isSelected","_c3","AccordionIcon","span","isExpanded","ThreadsList","_c4","ThreadItem","_c5","ThreadTitle","_c6","ThreadTime","_c7","ThreadInfo","DeleteThreadButton","button","_c8","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","_s","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","selectedThreadId","setSelectedThreadId","menuItems","id","name","loadThreads","response","getPersonaThreads","data","threadsByType","filter","t","thread_type","error","console","handleAccordionToggle","itemId","newExpanded","has","delete","add","handleThreadSelect","threadId","itemType","handleThreadDelete","e","stopPropagation","window","confirm","updatedThreads","log","alert","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","renderThreads","itemThreads","children","map","thread","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","created_at","messages","length","style","padding","fontSize","color","width","variant","item","_c9","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Sidebar,\r\n  SidebarHeader,\r\n  SidebarTitle,\r\n  SidebarContent,\r\n  SidebarMenuContent,\r\n  SidebarToggleButton,\r\n  ConversationMenuItem,\r\n} from '../styles/GlobalStyle';\r\nimport { chatApi } from '../api/chatApi';\r\nimport { TrainingThread } from '../types';\r\nimport styled from 'styled-components';\r\n\r\ninterface ConversationSidebarProps {\r\n  selectedItem: string | null;\r\n  onSelectItem: (itemId: string | null) => void;\r\n  isCollapsed?: boolean;\r\n  onToggle?: () => void;\r\n  selectedPersonaName?: string;\r\n  selectedPersonaId?: string;\r\n}\r\n\r\n// 새로운 스타일 컴포넌트들\r\nconst AccordionContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst AccordionItem = styled.div`\r\n  border-bottom: 1px solid #f0f0f0;\r\n`;\r\n\r\nconst AccordionHeader = styled.div<{ isSelected: boolean; isExpanded: boolean }>`\r\n  padding: 12px 16px;\r\n  cursor: pointer;\r\n  background: ${props => props.isSelected ? '#6c757d' : 'transparent'};\r\n  color: ${props => props.isSelected ? 'white' : '#333'};\r\n  font-weight: ${props => props.isSelected ? '600' : '500'};\r\n  border-radius: ${props => props.isSelected ? '8px' : '0'};\r\n  margin: ${props => props.isSelected ? '4px 8px' : '0'};\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  &:hover {\r\n    background: ${props => props.isSelected ? '#6c757d' : '#f8f9fa'};\r\n  }\r\n`;\r\n\r\nconst AccordionIcon = styled.span<{ isExpanded: boolean }>`\r\n  transform: rotate(${props => props.isExpanded ? '90deg' : '0deg'});\r\n  transition: transform 0.2s ease;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst ThreadsList = styled.div<{ isExpanded: boolean }>`\r\n  max-height: ${props => props.isExpanded ? '300px' : '0'};\r\n  overflow: hidden;\r\n  transition: max-height 0.3s ease;\r\n  background: #f8f9fa;\r\n`;\r\n\r\nconst ThreadItem = styled.div<{ isSelected: boolean }>`\r\n  padding: 8px 32px;\r\n  cursor: pointer;\r\n  color: ${props => props.isSelected ? '#6c757d' : '#666'};\r\n  font-size: 14px;\r\n  border-left: 3px solid ${props => props.isSelected ? '#6c757d' : 'transparent'};\r\n  background: ${props => props.isSelected ? '#f0f4ff' : 'transparent'};\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  &:hover {\r\n    background: #f0f4ff;\r\n    color: #6c757d;\r\n  }\r\n`;\r\n\r\nconst ThreadTitle = styled.div`\r\n  font-weight: 500;\r\n  margin-bottom: 2px;\r\n  flex: 1;\r\n`;\r\n\r\nconst ThreadTime = styled.div`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst ThreadInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst DeleteThreadButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  color: #999;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    color: #ff4444;\r\n    background: rgba(255, 68, 68, 0.1);\r\n  }\r\n`;\r\n\r\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\r\n  selectedItem,\r\n  onSelectItem,\r\n  isCollapsed = false,\r\n  onToggle,\r\n  selectedPersonaName,\r\n  selectedPersonaId,\r\n}) => {\r\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\r\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\r\n    interpretation: [],\r\n    proceed: [],\r\n    sentence: []\r\n  });\r\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\r\n\r\n  const menuItems = [\r\n    { id: 'interpretation', name: '해석' },\r\n    { id: 'proceed', name: '나아가기' },\r\n    { id: 'sentence', name: '문장' },\r\n    { id: 'interaction_history', name: '상호작용 기록' },\r\n  ];\r\n\r\n  // 스레드 데이터 로드\r\n  useEffect(() => {\r\n    const loadThreads = async () => {\r\n      if (!selectedPersonaId) return;\r\n\r\n      try {\r\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\r\n        if (response.data) {\r\n          const threadsByType = {\r\n            interpretation: response.data.filter(t => t.thread_type === 'interpretation'),\r\n            proceed: response.data.filter(t => t.thread_type === 'proceed'),\r\n            sentence: response.data.filter(t => t.thread_type === 'sentence')\r\n          };\r\n          setThreads(threadsByType);\r\n        }\r\n      } catch (error) {\r\n        console.error('스레드 로드 실패:', error);\r\n      }\r\n    };\r\n\r\n    loadThreads();\r\n  }, [selectedPersonaId]);\r\n\r\n  const handleAccordionToggle = (itemId: string) => {\r\n    const newExpanded = new Set(expandedItems);\r\n    if (newExpanded.has(itemId)) {\r\n      newExpanded.delete(itemId);\r\n    } else {\r\n      newExpanded.add(itemId);\r\n    }\r\n    setExpandedItems(newExpanded);\r\n    \r\n    // 아코디언 토글 시에도 메인 아이템 선택\r\n    onSelectItem(itemId);\r\n  };\r\n\r\n  const handleThreadSelect = (threadId: string, itemType: string) => {\r\n    setSelectedThreadId(threadId);\r\n    onSelectItem(`${itemType}-thread-${threadId}`);\r\n  };\r\n\r\n  const handleThreadDelete = async (e: React.MouseEvent, threadId: string) => {\r\n    e.stopPropagation(); // 스레드 선택 이벤트 방지\r\n    \r\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\r\n      try {\r\n        // TODO: 백엔드 API 호출로 스레드 삭제\r\n        // await chatApi.deleteThread(threadId);\r\n        \r\n        // 로컬 상태에서 스레드 제거\r\n        const updatedThreads = {\r\n          interpretation: threads.interpretation.filter(t => t.id !== threadId),\r\n          proceed: threads.proceed.filter(t => t.id !== threadId),\r\n          sentence: threads.sentence.filter(t => t.id !== threadId)\r\n        };\r\n        setThreads(updatedThreads);\r\n        \r\n        // 선택된 스레드가 삭제된 경우 선택 해제\r\n        if (selectedThreadId === threadId) {\r\n          setSelectedThreadId(null);\r\n          onSelectItem(null);\r\n        }\r\n        \r\n        console.log('스레드가 삭제되었습니다');\r\n      } catch (error) {\r\n        console.error('스레드 삭제 실패:', error);\r\n        alert('스레드 삭제에 실패했습니다');\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  const renderThreads = (itemId: string) => {\r\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\r\n    const isExpanded = expandedItems.has(itemId);\r\n\r\n    return (\r\n      <ThreadsList isExpanded={isExpanded}>\r\n        {itemThreads.map((thread, index) => (\r\n          <ThreadItem\r\n            key={thread.id}\r\n            isSelected={selectedThreadId === thread.id}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleThreadSelect(thread.id, itemId);\r\n            }}\r\n          >\r\n            <ThreadTitle>\r\n              {itemId === 'interpretation' && `해석 #${index + 1}`}\r\n              {itemId === 'proceed' && `나아가기 #${index + 1}`}\r\n              {itemId === 'sentence' && `문장 #${index + 1}`}\r\n            </ThreadTitle>\r\n            <ThreadTime>\r\n              {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\r\n            </ThreadTime>\r\n            <DeleteThreadButton\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleThreadDelete(e, thread.id);\r\n              }}\r\n            >\r\n              🗑\r\n            </DeleteThreadButton>\r\n          </ThreadItem>\r\n        ))}\r\n        {itemThreads.length === 0 && (\r\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\r\n            스레드가 없습니다\r\n          </div>\r\n        )}\r\n      </ThreadsList>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Sidebar width=\"250px\" isCollapsed={isCollapsed} variant=\"conversation\">\r\n      {onToggle && (\r\n        <SidebarToggleButton onClick={onToggle}>\r\n          {isCollapsed ? '▷' : '◁'}\r\n        </SidebarToggleButton>\r\n      )}\r\n\r\n      <SidebarHeader isCollapsed={isCollapsed}>\r\n        {selectedPersonaName && (\r\n          <SidebarTitle isCollapsed={isCollapsed}>\r\n            {selectedPersonaName}\r\n          </SidebarTitle>\r\n        )}\r\n      </SidebarHeader>\r\n\r\n      <SidebarContent isCollapsed={isCollapsed}>\r\n        <SidebarMenuContent variant=\"conversation\">\r\n          <AccordionContainer>\r\n            {menuItems.map((item) => (\r\n              <AccordionItem key={item.id}>\r\n                <AccordionHeader\r\n                  isSelected={selectedItem === item.id}\r\n                  isExpanded={expandedItems.has(item.id)}\r\n                  onClick={() => handleAccordionToggle(item.id)}\r\n                >\r\n                  <span>\r\n                    {item.name}\r\n                  </span>\r\n                </AccordionHeader>\r\n                \r\n                {item.id !== 'interaction_history' && renderThreads(item.id)}\r\n              </AccordionItem>\r\n            ))}\r\n          </AccordionContainer>\r\n        </SidebarMenuContent>\r\n      </SidebarContent>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}