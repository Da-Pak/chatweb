{"ast":null,"code":"import _objectSpread from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16;import React,{useState,useEffect}from'react';import{Sidebar,SidebarHeader,SidebarTitle,SidebarContent,SidebarMenuContent,SidebarToggleButton}from'../styles/GlobalStyle';import{chatApi}from'../api/chatApi';import styled from'styled-components';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const AccordionContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));const AccordionItem=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid #f0f0f0;\\n\"])));const AccordionHeader=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 12px 16px;\\n  cursor: pointer;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: \",\";\\n  border-radius: \",\";\\n  margin: \",\";\\n  transition: all 0.2s ease;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  &:hover {\\n    background: \",\";\\n  }\\n\"])),props=>props.$isSelected?'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)':'transparent',props=>props.$isSelected?'white':'#333',props=>props.$isSelected?'600':'500',props=>props.$isSelected?'8px':'0',props=>props.$isSelected?'4px 8px':'0',props=>props.$isSelected?'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)':'#f8f9fa');const ThreadsList=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  max-height: \",\";\\n  overflow: hidden;\\n  transition: max-height 0.3s ease;\\n  background: #f8f9fa;\\n\"])),props=>props.$isExpanded?'300px':'0');const InteractionRecordsList=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  max-height: \",\";\\n  overflow-y: auto;\\n  transition: max-height 0.3s ease;\\n  background: #f8f9fa;\\n\"])),props=>props.$isExpanded?'400px':'0');const RecordItem=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  padding: 8px 32px;\\n  border-bottom: 1px solid #e0e0e0;\\n\"])));const RecordHeader=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  cursor: pointer;\\n  padding: 8px 0;\\n  \\n  &:hover {\\n    color: #6c757d;\\n  }\\n\"])));const RecordTitle=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  font-weight: 500;\\n\"])));const RecordMeta=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  color: #666;\\n\"])));const RecordExpandIcon=styled.span(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 10px;\\n  transform: \",\";\\n  transition: transform 0.2s ease;\\n\"])),props=>props.$isExpanded?'rotate(90deg)':'rotate(0deg)');const RecordThreadsList=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  max-height: \",\";\\n  overflow: hidden;\\n  transition: max-height 0.3s ease;\\n  margin-left: 16px;\\n\"])),props=>props.$isExpanded?'200px':'0');const RecordThreadItem=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  padding: 6px 12px;\\n  cursor: pointer;\\n  color: \",\";\\n  font-size: 13px;\\n  border-left: 2px solid \",\";\\n  background: \",\";\\n  transition: all 0.2s ease;\\n  margin: 2px 0;\\n  border-radius: 4px;\\n  \\n  &:hover {\\n    background: #f0f0f0;\\n    color: #6c757d;\\n  }\\n\"])),props=>props.$isSelected?'#6c757d':'#666',props=>props.$isSelected?'#6c757d':'transparent',props=>props.$isSelected?'#f0f0f0':'transparent');const ThreadTypeTag=styled.span(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 2px 6px;\\n  border-radius: 3px;\\n  font-size: 9px;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  margin-right: 6px;\\n  \\n  background-color: \",\";\\n  color: white;\\n\"])),props=>{switch(props.type){case'interpretation':return'#6c757d';case'proceed':return'#ff9800';case'sentence':return'#4caf50';default:return'#6c757d';}});const ThreadItem=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: 8px 32px 8px 32px;\\n  cursor: pointer;\\n  color: \",\";\\n  font-size: 14px;\\n  border-left: 3px solid \",\";\\n  background: \",\";\\n  transition: all 0.2s ease;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  &:hover {\\n    background: #f8f9fa;\\n    color: #6c757d;\\n  }\\n\"])),props=>props.$isSelected?'#6c757d':'#666',props=>props.$isSelected?'#6c757d':'transparent',props=>props.$isSelected?'#f8f9fa':'transparent');const ThreadItemContent=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));const DeleteThreadButton=styled.button(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n  color: #999;\\n  font-size: 14px;\\n  padding: 4px;\\n  border-radius: 4px;\\n  opacity: 0;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background: #e9ecef;\\n    color: #dc3545;\\n  }\\n\\n  \",\":hover & {\\n    opacity: 1;\\n  }\\n\"])),ThreadItem);const ThreadTitle=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  font-weight: 500;\\n  margin-bottom: 2px;\\n\"])));const ThreadTime=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  opacity: 0.7;\\n\"])));const ConversationSidebar=_ref=>{let{selectedItem,onSelectItem,isCollapsed=false,onToggle,selectedPersonaName,selectedPersonaId,refreshTrigger}=_ref;const[expandedItems,setExpandedItems]=useState(new Set());const[expandedRecords,setExpandedRecords]=useState(new Set());const[threads,setThreads]=useState({interpretation:[],proceed:[],sentence:[]});const[interactionRecords,setInteractionRecords]=useState([]);const[selectedThreadId,setSelectedThreadId]=useState(null);const menuItems=[{id:'interpretation',name:'해석'},{id:'proceed',name:'나아가기'},{id:'sentence',name:'문장'},{id:'interaction_history',name:'상호작용 기록'}];useEffect(()=>{const loadData=async()=>{if(!selectedPersonaId)return;try{// 스레드 로드\nconst threadsResponse=await chatApi.getPersonaThreads(selectedPersonaId);if(threadsResponse.data){const threadsByType={interpretation:threadsResponse.data.filter(t=>t.thread_type==='interpretation'),proceed:threadsResponse.data.filter(t=>t.thread_type==='proceed'),sentence:threadsResponse.data.filter(t=>t.thread_type==='sentence')};setThreads(threadsByType);}// 상호작용 기록 로드\nconst recordsResponse=await chatApi.getAllInteractionRecords();if(recordsResponse.data){setInteractionRecords(recordsResponse.data);}}catch(error){console.error('데이터 로드 실패:',error);}};loadData();},[selectedPersonaId,refreshTrigger]);const handleAccordionToggle=itemId=>{const newExpanded=new Set(expandedItems);if(newExpanded.has(itemId)){newExpanded.delete(itemId);}else{newExpanded.add(itemId);}setExpandedItems(newExpanded);if(itemId==='interaction_history'){onSelectItem(itemId);}else{const itemThreads=threads[itemId]||[];if(itemThreads.length===0){onSelectItem(itemId);}}};const handleRecordToggle=recordId=>{const newExpanded=new Set(expandedRecords);if(newExpanded.has(recordId)){newExpanded.delete(recordId);}else{newExpanded.add(recordId);}setExpandedRecords(newExpanded);};const handleThreadSelect=(threadId,itemType)=>{setSelectedThreadId(threadId);onSelectItem(\"\".concat(itemType,\"-thread-\").concat(threadId));};const handleRecordThreadSelect=thread=>{setSelectedThreadId(thread.id);onSelectItem(\"\".concat(thread.thread_type,\"-thread-\").concat(thread.id));};const formatTime=timestamp=>{return new Date(timestamp).toLocaleTimeString('ko-KR',{hour:'2-digit',minute:'2-digit'});};const formatDate=timestamp=>{return new Date(timestamp).toLocaleDateString('ko-KR',{month:'short',day:'numeric'});};const handleDeleteThread=async(threadId,e)=>{e.stopPropagation();if(window.confirm('이 스레드를 삭제하시겠습니까?')){try{const result=await chatApi.deleteThread(threadId);if(result.data){const updatedThreads=_objectSpread({},threads);Object.keys(updatedThreads).forEach(key=>{updatedThreads[key]=updatedThreads[key].filter(t=>t.id!==threadId);});setThreads(updatedThreads);if(selectedThreadId===threadId){setSelectedThreadId(null);}}}catch(error){console.error('스레드 삭제 실패:',error);alert('스레드 삭제에 실패했습니다');}}};const getThreadTypeLabel=type=>{switch(type){case'interpretation':return'해석';case'proceed':return'나아가기';case'sentence':return'문장';default:return type;}};const getThreadContent=thread=>{var _thread$content;if(thread.messages&&thread.messages.length>0){const firstMessage=thread.messages[0];return firstMessage.content.length>30?firstMessage.content.substring(0,30)+'...':firstMessage.content;}return((_thread$content=thread.content)===null||_thread$content===void 0?void 0:_thread$content.length)>30?thread.content.substring(0,30)+'...':thread.content||'내용 없음';};const renderThreads=itemId=>{const itemThreads=threads[itemId]||[];const isExpanded=expandedItems.has(itemId);return/*#__PURE__*/_jsxs(ThreadsList,{$isExpanded:isExpanded,children:[itemThreads.map((thread,index)=>/*#__PURE__*/_jsxs(ThreadItem,{$isSelected:selectedThreadId===thread.id,onClick:()=>handleThreadSelect(thread.id,itemId),children:[/*#__PURE__*/_jsxs(ThreadItemContent,{children:[/*#__PURE__*/_jsxs(ThreadTitle,{children:[itemId==='interpretation'&&\"\\uD574\\uC11D #\".concat(index+1),itemId==='proceed'&&\"\\uB098\\uC544\\uAC00\\uAE30 #\".concat(index+1),itemId==='sentence'&&\"\\uBB38\\uC7A5 #\".concat(index+1)]}),/*#__PURE__*/_jsxs(ThreadTime,{children:[formatTime(thread.created_at),\" \\u2022 \",thread.messages.length,\"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]})]}),/*#__PURE__*/_jsx(DeleteThreadButton,{onClick:e=>handleDeleteThread(thread.id,e),title:\"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]},thread.id)),itemThreads.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px 32px',fontSize:'14px',color:'#999'},children:\"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"})]});};const renderInteractionRecords=()=>{const isExpanded=expandedItems.has('interaction_history');// 현재 선택된 페르소나의 기록만 필터링\nconst currentPersonaRecord=interactionRecords.find(record=>record.persona_id===selectedPersonaId);return/*#__PURE__*/_jsx(InteractionRecordsList,{$isExpanded:isExpanded,children:currentPersonaRecord?/*#__PURE__*/_jsxs(RecordItem,{children:[/*#__PURE__*/_jsxs(RecordHeader,{$isExpanded:expandedRecords.has(currentPersonaRecord.id),onClick:()=>handleRecordToggle(currentPersonaRecord.id),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(RecordTitle,{children:[currentPersonaRecord.persona_name,\"\\uC758 \\uAE30\\uB85D\"]}),/*#__PURE__*/_jsxs(RecordMeta,{children:[formatDate(currentPersonaRecord.updated_at),\" \\u2022 \",currentPersonaRecord.threads.length,\"\\uAC1C \\uC2A4\\uB808\\uB4DC\"]})]}),/*#__PURE__*/_jsx(RecordExpandIcon,{$isExpanded:expandedRecords.has(currentPersonaRecord.id),children:\"\\u25B6\"})]}),/*#__PURE__*/_jsx(RecordThreadsList,{$isExpanded:expandedRecords.has(currentPersonaRecord.id),children:currentPersonaRecord.threads.map(thread=>/*#__PURE__*/_jsxs(RecordThreadItem,{$isSelected:selectedThreadId===thread.id,onClick:()=>handleRecordThreadSelect(thread),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ThreadTypeTag,{type:thread.thread_type,children:getThreadTypeLabel(thread.thread_type)}),getThreadContent(thread)]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'11px',opacity:0.7,marginTop:'2px'},children:formatTime(thread.created_at)})]},thread.id))})]},currentPersonaRecord.id):/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px 32px',fontSize:'14px',color:'#999'},children:\"\\uC774 \\uD398\\uB974\\uC18C\\uB098\\uC758 \\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"})});};return/*#__PURE__*/_jsxs(Sidebar,{width:\"250px\",$isCollapsed:isCollapsed,$variant:\"conversation\",children:[onToggle&&/*#__PURE__*/_jsx(SidebarToggleButton,{onClick:onToggle,children:isCollapsed?'▷':'◁'}),/*#__PURE__*/_jsx(SidebarHeader,{$isCollapsed:isCollapsed,children:selectedPersonaName&&/*#__PURE__*/_jsx(SidebarTitle,{$isCollapsed:isCollapsed,children:selectedPersonaName})}),/*#__PURE__*/_jsx(SidebarContent,{$isCollapsed:isCollapsed,children:/*#__PURE__*/_jsx(SidebarMenuContent,{$variant:\"conversation\",children:/*#__PURE__*/_jsx(AccordionContainer,{children:menuItems.map(item=>/*#__PURE__*/_jsxs(AccordionItem,{children:[/*#__PURE__*/_jsx(AccordionHeader,{$isSelected:selectedItem===item.id,$isExpanded:expandedItems.has(item.id),onClick:()=>handleAccordionToggle(item.id),children:/*#__PURE__*/_jsx(\"span\",{children:item.name})}),item.id==='interaction_history'?renderInteractionRecords():renderThreads(item.id)]},item.id))})})})]});};export default ConversationSidebar;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxs","_jsxs","jsx","_jsx","AccordionContainer","div","_templateObject","_taggedTemplateLiteral","AccordionItem","_templateObject2","AccordionHeader","_templateObject3","props","$isSelected","ThreadsList","_templateObject4","$isExpanded","InteractionRecordsList","_templateObject5","RecordItem","_templateObject6","RecordHeader","_templateObject7","RecordTitle","_templateObject8","RecordMeta","_templateObject9","RecordExpandIcon","span","_templateObject0","RecordThreadsList","_templateObject1","RecordThreadItem","_templateObject10","ThreadTypeTag","_templateObject11","type","ThreadItem","_templateObject12","ThreadItemContent","_templateObject13","DeleteThreadButton","button","_templateObject14","ThreadTitle","_templateObject15","ThreadTime","_templateObject16","ConversationSidebar","_ref","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","expandedItems","setExpandedItems","Set","expandedRecords","setExpandedRecords","threads","setThreads","interpretation","proceed","sentence","interactionRecords","setInteractionRecords","selectedThreadId","setSelectedThreadId","menuItems","id","name","loadData","threadsResponse","getPersonaThreads","data","threadsByType","filter","t","thread_type","recordsResponse","getAllInteractionRecords","error","console","handleAccordionToggle","itemId","newExpanded","has","delete","add","itemThreads","length","handleRecordToggle","recordId","handleThreadSelect","threadId","itemType","concat","handleRecordThreadSelect","thread","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","handleDeleteThread","e","stopPropagation","window","confirm","result","deleteThread","updatedThreads","_objectSpread","Object","keys","forEach","key","alert","getThreadTypeLabel","getThreadContent","_thread$content","messages","firstMessage","content","substring","renderThreads","isExpanded","children","map","index","onClick","created_at","title","style","padding","fontSize","color","renderInteractionRecords","currentPersonaRecord","find","record","persona_id","persona_name","updated_at","opacity","marginTop","width","$isCollapsed","$variant","item"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, InteractionRecord } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number;\n}\n\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ $isSelected: boolean; $isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst ThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst InteractionRecordsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '400px' : '0'};\n  overflow-y: auto;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst RecordItem = styled.div`\n  padding: 8px 32px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst RecordHeader = styled.div<{ $isExpanded: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 0;\n  \n  &:hover {\n    color: #6c757d;\n  }\n`;\n\nconst RecordTitle = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst RecordMeta = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n\nconst RecordExpandIcon = styled.span<{ $isExpanded: boolean }>`\n  font-size: 10px;\n  transform: ${props => props.$isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.2s ease;\n`;\n\nconst RecordThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '200px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  margin-left: 16px;\n`;\n\nconst RecordThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 6px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadTypeTag = styled.span<{ type: string }>`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  \n  background-color: ${props => {\n    switch (props.type) {\n      case 'interpretation': return '#6c757d';\n      case 'proceed': return '#ff9800';\n      case 'sentence': return '#4caf50';\n      default: return '#6c757d';\n    }\n  }};\n  color: white;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [expandedRecords, setExpandedRecords] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState<InteractionRecord[]>([]);\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n\n  const menuItems = [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (!selectedPersonaId) return;\n\n      try {\n        // 스레드 로드\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data.filter((t: any) => t.thread_type === 'interpretation'),\n            proceed: threadsResponse.data.filter((t: any) => t.thread_type === 'proceed'),\n            sentence: threadsResponse.data.filter((t: any) => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          setInteractionRecords(recordsResponse.data);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n\n    loadData();\n  }, [selectedPersonaId, refreshTrigger]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId as keyof typeof threads] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      }\n    }\n  };\n\n  const handleRecordToggle = (recordId: string) => {\n    const newExpanded = new Set(expandedRecords);\n    if (newExpanded.has(recordId)) {\n      newExpanded.delete(recordId);\n    } else {\n      newExpanded.add(recordId);\n    }\n    setExpandedRecords(newExpanded);\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const handleRecordThreadSelect = (thread: TrainingThread) => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatDate = (timestamp: string) => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = { ...threads };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter((t: any) => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          \n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n\n  const getThreadTypeLabel = (type: string) => {\n    switch (type) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      default: return type;\n    }\n  };\n\n  const getThreadContent = (thread: TrainingThread) => {\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 \n        ? firstMessage.content.substring(0, 30) + '...' \n        : firstMessage.content;\n    }\n    return thread.content?.length > 30 \n      ? thread.content.substring(0, 30) + '...' \n      : thread.content || '내용 없음';\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList $isExpanded={isExpanded}>\n        {itemThreads.map((thread: any, index: number) => (\n          <ThreadItem\n            key={thread.id}\n            $isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${index + 1}`}\n                {itemId === 'proceed' && `나아가기 #${index + 1}`}\n                {itemId === 'sentence' && `문장 #${index + 1}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n    \n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(\n      record => record.persona_id === selectedPersonaId\n    );\n\n    return (\n      <InteractionRecordsList $isExpanded={isExpanded}>\n        {currentPersonaRecord ? (\n          <RecordItem key={currentPersonaRecord.id}>\n            <RecordHeader \n              $isExpanded={expandedRecords.has(currentPersonaRecord.id)}\n              onClick={() => handleRecordToggle(currentPersonaRecord.id)}\n            >\n              <div>\n                <RecordTitle>{currentPersonaRecord.persona_name}의 기록</RecordTitle>\n                <RecordMeta>\n                  {formatDate(currentPersonaRecord.updated_at)} • {currentPersonaRecord.threads.length}개 스레드\n                </RecordMeta>\n              </div>\n              <RecordExpandIcon $isExpanded={expandedRecords.has(currentPersonaRecord.id)}>\n                ▶\n              </RecordExpandIcon>\n            </RecordHeader>\n            \n            <RecordThreadsList $isExpanded={expandedRecords.has(currentPersonaRecord.id)}>\n              {currentPersonaRecord.threads.map((thread) => (\n                <RecordThreadItem\n                  key={thread.id}\n                  $isSelected={selectedThreadId === thread.id}\n                  onClick={() => handleRecordThreadSelect(thread)}\n                >\n                  <div>\n                    <ThreadTypeTag type={thread.thread_type}>\n                      {getThreadTypeLabel(thread.thread_type)}\n                    </ThreadTypeTag>\n                    {getThreadContent(thread)}\n                  </div>\n                  <div style={{ fontSize: '11px', opacity: 0.7, marginTop: '2px' }}>\n                    {formatTime(thread.created_at)}\n                  </div>\n                </RecordThreadItem>\n              ))}\n            </RecordThreadsList>\n          </RecordItem>\n        ) : (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            이 페르소나의 상호작용 기록이 없습니다\n          </div>\n        )}\n      </InteractionRecordsList>\n    );\n  };\n\n  return (\n    <Sidebar width=\"250px\" $isCollapsed={isCollapsed} $variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n          {isCollapsed ? '▷' : '◁'}\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader $isCollapsed={isCollapsed}>\n        {selectedPersonaName && (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        )}\n      </SidebarHeader>\n\n      <SidebarContent $isCollapsed={isCollapsed}>\n        <SidebarMenuContent $variant=\"conversation\">\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                  $isSelected={selectedItem === item.id}\n                  $isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                  <span>{item.name}</span>\n                </AccordionHeader>\n                \n                {item.id === 'interaction_history' \n                  ? renderInteractionRecords()\n                  : renderThreads(item.id)\n                }\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}