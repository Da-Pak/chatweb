{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\QuickPhraseButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport QuickPhraseSettingsModal from './QuickPhraseSettingsModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuickPhraseContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n_c = QuickPhraseContainer;\nconst QuickPhraseBtn = styled.button`\n  width: 60px;\n  height: 60px;\n  border-radius: 8px;\n  border: 1px solid #ddd;\n  background: linear-gradient(135deg, #D9D9D9 0%, #BFBFBF 100%);\n  color: #333;\n  font-size: 11px;\n  font-weight: bold;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  line-height: 1.2;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: linear-gradient(135deg, #CCCCCC 0%, #B2B2B2 100%);\n    transform: translateY(-1px);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c2 = QuickPhraseBtn;\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 280px;\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  max-height: 400px;\n  overflow-y: auto;\n  transform: ${props => props.show ? 'scale(1)' : 'scale(0.95)'};\n  opacity: ${props => props.show ? '1' : '0'};\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\n  transition: all 0.2s ease;\n  transform-origin: top left;\n`;\n_c3 = DropdownMenu;\nconst MenuItem = styled.button`\n  width: 100%;\n  padding: 12px 16px;\n  border: none;\n  background: ${props => props.isSettings ? '#f8f9fa' : 'transparent'};\n  text-align: left;\n  cursor: ${props => props.isTodo ? 'not-allowed' : 'pointer'};\n  font-size: 14px;\n  color: ${props => props.isTodo ? '#999' : '#333'};\n  border-bottom: 1px solid #f0f0f0;\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.isTodo ? 'transparent' : props.isSettings ? '#e9ecef' : '#f8f9fa'};\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c4 = MenuItem;\nconst Divider = styled.hr`\n  margin: 0;\n  border: none;\n  border-top: 1px solid #CCCCCC;\n`;\n_c5 = Divider;\nconst QuickPhraseButton = ({\n  quickPhrases,\n  onPhraseSelect,\n  onPhrasesUpdate\n}) => {\n  _s();\n  const [showMenu, setShowMenu] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const menuRef = useRef(null);\n  const handleButtonClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const handlePhraseClick = (text, isTodo = false) => {\n    if (isTodo) return; // TODO 항목은 클릭 불가\n\n    onPhraseSelect(text);\n    setShowMenu(false);\n  };\n  const handleSettingsClick = () => {\n    setShowMenu(false);\n    setShowSettingsModal(true);\n  };\n\n  // 메뉴 외부 클릭 시 메뉴 닫기\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n    if (showMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showMenu]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(QuickPhraseContainer, {\n      ref: menuRef,\n      children: [/*#__PURE__*/_jsxDEV(QuickPhraseBtn, {\n        onClick: handleButtonClick,\n        children: [\"\\uC790\\uC8FC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), \"\\uC4F0\\uB294\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        show: showMenu,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          isTodo: true,\n          onClick: () => handlePhraseClick('[나아가기] 생성', true),\n          children: \"[\\uB098\\uC544\\uAC00\\uAE30] \\uC0DD\\uC131 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          isTodo: true,\n          onClick: () => handlePhraseClick('[문장] 생성', true),\n          children: \"[\\uBB38\\uC7A5] \\uC0DD\\uC131 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), quickPhrases.map(phrase => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => handlePhraseClick(phrase.text),\n          children: phrase.text\n        }, phrase.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          isSettings: true,\n          onClick: handleSettingsClick,\n          children: \"\\uC124\\uC815 (\\uD3B8\\uC9D1 \\uCC3D \\uD638\\uCD9C)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), showSettingsModal && /*#__PURE__*/_jsxDEV(QuickPhraseSettingsModal, {\n      quickPhrases: quickPhrases,\n      onClose: () => setShowSettingsModal(false),\n      onUpdate: onPhrasesUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(QuickPhraseButton, \"Qu6KsSK9/u+p8LXl+c7HzQmj9L4=\");\n_c6 = QuickPhraseButton;\nexport default QuickPhraseButton;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"QuickPhraseContainer\");\n$RefreshReg$(_c2, \"QuickPhraseBtn\");\n$RefreshReg$(_c3, \"DropdownMenu\");\n$RefreshReg$(_c4, \"MenuItem\");\n$RefreshReg$(_c5, \"Divider\");\n$RefreshReg$(_c6, \"QuickPhraseButton\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","QuickPhraseSettingsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","QuickPhraseContainer","div","_c","QuickPhraseBtn","button","_c2","DropdownMenu","props","show","_c3","MenuItem","isSettings","isTodo","_c4","Divider","hr","_c5","QuickPhraseButton","quickPhrases","onPhraseSelect","onPhrasesUpdate","_s","showMenu","setShowMenu","showSettingsModal","setShowSettingsModal","menuRef","handleButtonClick","handlePhraseClick","text","handleSettingsClick","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","phrase","id","onClose","onUpdate","_c6","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/QuickPhraseButton.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { QuickPhrase } from '../api/quickPhraseApi';\r\nimport QuickPhraseSettingsModal from './QuickPhraseSettingsModal';\r\n\r\ninterface QuickPhraseButtonProps {\r\n  quickPhrases: QuickPhrase[];\r\n  onPhraseSelect: (text: string) => void;\r\n  onPhrasesUpdate: () => void;\r\n}\r\n\r\nconst QuickPhraseContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nconst QuickPhraseBtn = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  background: linear-gradient(135deg, #D9D9D9 0%, #BFBFBF 100%);\r\n  color: #333;\r\n  font-size: 11px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  line-height: 1.2;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: linear-gradient(135deg, #CCCCCC 0%, #B2B2B2 100%);\r\n    transform: translateY(-1px);\r\n  }\r\n  \r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst DropdownMenu = styled.div<{ show: boolean }>`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 280px;\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  z-index: 1000;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  transform: ${props => props.show ? 'scale(1)' : 'scale(0.95)'};\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\r\n  transition: all 0.2s ease;\r\n  transform-origin: top left;\r\n`;\r\n\r\nconst MenuItem = styled.button<{ isTodo?: boolean; isSettings?: boolean }>`\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border: none;\r\n  background: ${props => props.isSettings ? '#f8f9fa' : 'transparent'};\r\n  text-align: left;\r\n  cursor: ${props => props.isTodo ? 'not-allowed' : 'pointer'};\r\n  font-size: 14px;\r\n  color: ${props => props.isTodo ? '#999' : '#333'};\r\n  border-bottom: 1px solid #f0f0f0;\r\n  transition: background-color 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.isTodo ? 'transparent' : (props.isSettings ? '#e9ecef' : '#f8f9fa')};\r\n  }\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  margin: 0;\r\n  border: none;\r\n  border-top: 1px solid #CCCCCC;\r\n`;\r\n\r\nconst QuickPhraseButton: React.FC<QuickPhraseButtonProps> = ({\r\n  quickPhrases,\r\n  onPhraseSelect,\r\n  onPhrasesUpdate\r\n}) => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleButtonClick = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  const handlePhraseClick = (text: string, isTodo: boolean = false) => {\r\n    if (isTodo) return; // TODO 항목은 클릭 불가\r\n    \r\n    onPhraseSelect(text);\r\n    setShowMenu(false);\r\n  };\r\n\r\n  const handleSettingsClick = () => {\r\n    setShowMenu(false);\r\n    setShowSettingsModal(true);\r\n  };\r\n\r\n  // 메뉴 외부 클릭 시 메뉴 닫기\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setShowMenu(false);\r\n      }\r\n    };\r\n\r\n    if (showMenu) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [showMenu]);\r\n\r\n  return (\r\n    <>\r\n      <QuickPhraseContainer ref={menuRef}>\r\n        <QuickPhraseBtn onClick={handleButtonClick}>\r\n          자주<br/>쓰는\r\n        </QuickPhraseBtn>\r\n        \r\n        <DropdownMenu show={showMenu}>\r\n          {/* TODO 항목들 */}\r\n          <MenuItem isTodo onClick={() => handlePhraseClick('[나아가기] 생성', true)}>\r\n            [나아가기] 생성 {/* TODO: 구현 예정 */}\r\n          </MenuItem>\r\n          <MenuItem isTodo onClick={() => handlePhraseClick('[문장] 생성', true)}>\r\n            [문장] 생성 {/* TODO: 구현 예정 */}\r\n          </MenuItem>\r\n          \r\n          <Divider />\r\n          \r\n          {/* 실제 자주쓰는 문장들 */}\r\n          {quickPhrases.map((phrase) => (\r\n            <MenuItem \r\n              key={phrase.id}\r\n              onClick={() => handlePhraseClick(phrase.text)}\r\n            >\r\n              {phrase.text}\r\n            </MenuItem>\r\n          ))}\r\n          \r\n          <Divider />\r\n          \r\n          {/* 설정 메뉴 */}\r\n          <MenuItem isSettings onClick={handleSettingsClick}>\r\n            설정 (편집 창 호출)\r\n          </MenuItem>\r\n        </DropdownMenu>\r\n      </QuickPhraseContainer>\r\n\r\n      {/* 설정 모달 */}\r\n      {showSettingsModal && (\r\n        <QuickPhraseSettingsModal\r\n          quickPhrases={quickPhrases}\r\n          onClose={() => setShowSettingsModal(false)}\r\n          onUpdate={onPhrasesUpdate}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuickPhraseButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}