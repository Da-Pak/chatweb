{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\shared\\\\components\\\\ConversationSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sidebar, SidebarHeader, SidebarTitle, SidebarContent, SidebarMenuContent, SidebarToggleButton } from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n_c = AccordionContainer;\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n_c2 = AccordionItem;\nconst AccordionHeader = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n_c3 = AccordionHeader;\nconst ThreadsList = styled.div`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n_c4 = ThreadsList;\nconst ResizableContainer = styled.div`\n  position: relative;\n  height: ${props => props.$isExpanded ? `${props.$height}px` : '100px'};\n  min-height: 100px;\n  overflow: hidden;\n  /* transition: height 0.3s ease; */ /* 디버깅을 위해 임시로 제거 */\n  background: #f8f9fa;\n  border-bottom: 2px solid #ddd;\n  border: 2px solid blue; /* 컨테이너 경계 확인용 */\n  \n  &:hover {\n    border-bottom-color: #6c757d;\n  }\n  \n  /* 현재 높이를 표시하는 가상 요소 */\n  &::after {\n    content: '${props => props.$isExpanded ? `${props.$height}px EXPANDED` : `100px COLLAPSED`}';\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    background: yellow;\n    padding: 2px 5px;\n    font-size: 10px;\n    z-index: 1000;\n  }\n`;\n_c5 = ResizableContainer;\nconst InteractionRecordsList = styled.div`\n  height: calc(100% - 6px);\n  overflow-y: auto;\n  padding: 8px;\n  padding-bottom: 14px; /* resize handle을 위한 여유 공간 */\n`;\n_c6 = InteractionRecordsList;\nconst ResizeHandle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 10px;\n  cursor: ns-resize;\n  background: #ff0000; /* 임시로 빨간색으로 설정하여 위치 확인 */\n  z-index: 999;\n  border-top: 2px solid #000;\n  opacity: 0.8;\n  \n  &:hover {\n    background: #ff5555;\n    opacity: 1;\n  }\n  \n  &:active {\n    background: #aa0000;\n  }\n`;\n_c7 = ResizeHandle;\nconst RecordThreadItem = styled.div`\n  padding: 8px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n    border-color: #6c757d;\n  }\n`;\n_c8 = RecordThreadItem;\nconst ThreadTypeTag = styled.span`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  background-color: #6c757d;\n  color: white;\n`;\n_c9 = ThreadTypeTag;\nconst ThreadItem = styled.div`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n_c0 = ThreadItem;\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n_c1 = ThreadItemContent;\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n_c10 = DeleteThreadButton;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n_c11 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n_c12 = ThreadTime;\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [threads, setThreads] = useState({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState([]);\n  const [selectedThreadId, setSelectedThreadId] = useState(null);\n  const [interactionHeight, setInteractionHeight] = useState(300);\n  const [isResizing, setIsResizing] = useState(false);\n  const menuItems = [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n  useEffect(() => {\n    const loadData = async () => {\n      if (!selectedPersonaId) return;\n      try {\n        // 스레드 로드\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: threadsResponse.data.filter(t => t.thread_type === 'proceed'),\n            sentence: threadsResponse.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          setInteractionRecords(recordsResponse.data);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n    loadData();\n  }, [selectedPersonaId, refreshTrigger]);\n  const handleAccordionToggle = itemId => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      }\n    }\n  };\n  const handleRecordThreadSelect = thread => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n  const handleMouseDown = e => {\n    console.log('=== ResizeHandle 클릭 ===');\n    console.log('현재 interactionHeight:', interactionHeight);\n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    const startY = e.clientY;\n    const startHeight = interactionHeight;\n    const handleMouseMove = e => {\n      const deltaY = e.clientY - startY;\n      const newHeight = Math.max(100, Math.min(600, startHeight + deltaY));\n      console.log('새 높이 설정:', newHeight);\n      setInteractionHeight(newHeight);\n    };\n    const handleMouseUp = () => {\n      console.log('=== Resize 종료 ===');\n      console.log('최종 interactionHeight:', interactionHeight);\n      setIsResizing(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const handleThreadSelect = (threadId, itemType) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n  const handleDeleteThread = async (threadId, e) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = {\n            ...threads\n          };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key] = updatedThreads[key].filter(t => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n  const getThreadTypeLabel = type => {\n    switch (type) {\n      case 'interpretation':\n        return '해석';\n      case 'proceed':\n        return '나아가기';\n      case 'sentence':\n        return '문장';\n      default:\n        return type;\n    }\n  };\n  const getThreadContent = thread => {\n    var _thread$content;\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    }\n    return ((_thread$content = thread.content) === null || _thread$content === void 0 ? void 0 : _thread$content.length) > 30 ? thread.content.substring(0, 30) + '...' : thread.content || '내용 없음';\n  };\n  const renderThreads = itemId => {\n    const itemThreads = threads[itemId] || [];\n    const isExpanded = expandedItems.has(itemId);\n    return /*#__PURE__*/_jsxDEV(ThreadsList, {\n      $isExpanded: isExpanded,\n      children: [itemThreads.map((thread, index) => /*#__PURE__*/_jsxDEV(ThreadItem, {\n        $isSelected: selectedThreadId === thread.id,\n        onClick: () => handleThreadSelect(thread.id, itemId),\n        children: [/*#__PURE__*/_jsxDEV(ThreadItemContent, {\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: [itemId === 'interpretation' && `해석 #${index + 1}`, itemId === 'proceed' && `나아가기 #${index + 1}`, itemId === 'sentence' && `문장 #${index + 1}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteThreadButton, {\n          onClick: e => handleDeleteThread(thread.id, e),\n          title: \"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this)), itemThreads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px 32px',\n          fontSize: '14px',\n          color: '#999'\n        },\n        children: \"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this);\n  };\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n    console.log('renderInteractionRecords - isExpanded:', isExpanded);\n    console.log('renderInteractionRecords - interactionHeight:', interactionHeight);\n\n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(record => record.persona_id === selectedPersonaId);\n    return /*#__PURE__*/_jsxDEV(ResizableContainer, {\n      $isExpanded: isExpanded,\n      $height: interactionHeight,\n      children: [/*#__PURE__*/_jsxDEV(InteractionRecordsList, {\n        $isExpanded: isExpanded,\n        children: currentPersonaRecord ? currentPersonaRecord.threads.map(thread => /*#__PURE__*/_jsxDEV(RecordThreadItem, {\n          $isSelected: selectedThreadId === thread.id,\n          onClick: () => handleRecordThreadSelect(thread),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ThreadTypeTag, {\n              type: thread.thread_type,\n              children: getThreadTypeLabel(thread.thread_type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this), getThreadContent(thread)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              opacity: 0.7,\n              marginTop: '2px'\n            },\n            children: formatTime(thread.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '16px',\n            fontSize: '14px',\n            color: '#999',\n            textAlign: 'center'\n          },\n          children: \"\\uC774 \\uD398\\uB974\\uC18C\\uB098\\uC758 \\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResizeHandle, {\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"250px\",\n    $isCollapsed: isCollapsed,\n    $variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle,\n      children: isCollapsed ? '▷' : '◁'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarHeader, {\n      $isCollapsed: isCollapsed,\n      children: selectedPersonaName && /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        $isCollapsed: isCollapsed,\n        children: selectedPersonaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      $isCollapsed: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarMenuContent, {\n        $variant: \"conversation\",\n        children: /*#__PURE__*/_jsxDEV(AccordionContainer, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n              $isSelected: selectedItem === item.id,\n              $isExpanded: expandedItems.has(item.id),\n              onClick: () => handleAccordionToggle(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), item.id === 'interaction_history' ? renderInteractionRecords() : renderThreads(item.id)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationSidebar, \"i/s7ebR2Sse7mBN1va2Sp1HARoE=\");\n_c13 = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"AccordionContainer\");\n$RefreshReg$(_c2, \"AccordionItem\");\n$RefreshReg$(_c3, \"AccordionHeader\");\n$RefreshReg$(_c4, \"ThreadsList\");\n$RefreshReg$(_c5, \"ResizableContainer\");\n$RefreshReg$(_c6, \"InteractionRecordsList\");\n$RefreshReg$(_c7, \"ResizeHandle\");\n$RefreshReg$(_c8, \"RecordThreadItem\");\n$RefreshReg$(_c9, \"ThreadTypeTag\");\n$RefreshReg$(_c0, \"ThreadItem\");\n$RefreshReg$(_c1, \"ThreadItemContent\");\n$RefreshReg$(_c10, \"DeleteThreadButton\");\n$RefreshReg$(_c11, \"ThreadTitle\");\n$RefreshReg$(_c12, \"ThreadTime\");\n$RefreshReg$(_c13, \"ConversationSidebar\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxDEV","_jsxDEV","AccordionContainer","div","_c","AccordionItem","_c2","AccordionHeader","props","$isSelected","_c3","ThreadsList","$isExpanded","_c4","ResizableContainer","$height","_c5","InteractionRecordsList","_c6","ResizeHandle","_c7","RecordThreadItem","_c8","ThreadTypeTag","span","_c9","ThreadItem","_c0","ThreadItemContent","_c1","DeleteThreadButton","button","_c10","ThreadTitle","_c11","ThreadTime","_c12","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","_s","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","interactionRecords","setInteractionRecords","selectedThreadId","setSelectedThreadId","interactionHeight","setInteractionHeight","isResizing","setIsResizing","menuItems","id","name","loadData","threadsResponse","getPersonaThreads","data","threadsByType","filter","t","thread_type","recordsResponse","getAllInteractionRecords","error","console","handleAccordionToggle","itemId","newExpanded","has","delete","add","itemThreads","length","handleRecordThreadSelect","thread","handleMouseDown","e","log","preventDefault","stopPropagation","startY","clientY","startHeight","handleMouseMove","deltaY","newHeight","Math","max","min","handleMouseUp","document","removeEventListener","addEventListener","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","handleThreadSelect","threadId","itemType","handleDeleteThread","window","confirm","result","deleteThread","updatedThreads","Object","keys","forEach","key","alert","getThreadTypeLabel","type","getThreadContent","_thread$content","messages","firstMessage","content","substring","renderThreads","isExpanded","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","created_at","title","style","padding","fontSize","color","renderInteractionRecords","currentPersonaRecord","find","record","persona_id","opacity","marginTop","textAlign","onMouseDown","width","$isCollapsed","$variant","item","_c13","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, InteractionRecord } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number;\n}\n\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ $isSelected: boolean; $isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst ThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst ResizableContainer = styled.div<{ $isExpanded: boolean; $height: number }>`\n  position: relative;\n  height: ${props => props.$isExpanded ? `${props.$height}px` : '100px'};\n  min-height: 100px;\n  overflow: hidden;\n  /* transition: height 0.3s ease; */ /* 디버깅을 위해 임시로 제거 */\n  background: #f8f9fa;\n  border-bottom: 2px solid #ddd;\n  border: 2px solid blue; /* 컨테이너 경계 확인용 */\n  \n  &:hover {\n    border-bottom-color: #6c757d;\n  }\n  \n  /* 현재 높이를 표시하는 가상 요소 */\n  &::after {\n    content: '${props => props.$isExpanded ? `${props.$height}px EXPANDED` : `100px COLLAPSED`}';\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    background: yellow;\n    padding: 2px 5px;\n    font-size: 10px;\n    z-index: 1000;\n  }\n`;\n\nconst InteractionRecordsList = styled.div<{ $isExpanded: boolean }>`\n  height: calc(100% - 6px);\n  overflow-y: auto;\n  padding: 8px;\n  padding-bottom: 14px; /* resize handle을 위한 여유 공간 */\n`;\n\nconst ResizeHandle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 10px;\n  cursor: ns-resize;\n  background: #ff0000; /* 임시로 빨간색으로 설정하여 위치 확인 */\n  z-index: 999;\n  border-top: 2px solid #000;\n  opacity: 0.8;\n  \n  &:hover {\n    background: #ff5555;\n    opacity: 1;\n  }\n  \n  &:active {\n    background: #aa0000;\n  }\n`;\n\nconst RecordThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n    border-color: #6c757d;\n  }\n`;\n\nconst ThreadTypeTag = styled.span<{ type: string }>`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  background-color: #6c757d;\n  color: white;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState<InteractionRecord[]>([]);\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n  const [interactionHeight, setInteractionHeight] = useState(300);\n  const [isResizing, setIsResizing] = useState(false);\n\n  const menuItems = [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (!selectedPersonaId) return;\n\n      try {\n        // 스레드 로드\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data.filter((t: any) => t.thread_type === 'interpretation'),\n            proceed: threadsResponse.data.filter((t: any) => t.thread_type === 'proceed'),\n            sentence: threadsResponse.data.filter((t: any) => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          setInteractionRecords(recordsResponse.data);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n\n    loadData();\n  }, [selectedPersonaId, refreshTrigger]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId as keyof typeof threads] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      }\n    }\n  };\n\n  const handleRecordThreadSelect = (thread: TrainingThread) => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    console.log('=== ResizeHandle 클릭 ===');\n    console.log('현재 interactionHeight:', interactionHeight);\n    \n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    \n    const startY = e.clientY;\n    const startHeight = interactionHeight;\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      const deltaY = e.clientY - startY;\n      const newHeight = Math.max(100, Math.min(600, startHeight + deltaY));\n      console.log('새 높이 설정:', newHeight);\n      setInteractionHeight(newHeight);\n    };\n    \n    const handleMouseUp = () => {\n      console.log('=== Resize 종료 ===');\n      console.log('최종 interactionHeight:', interactionHeight);\n      setIsResizing(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatDate = (timestamp: string) => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = { ...threads };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter((t: any) => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          \n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n\n  const getThreadTypeLabel = (type: string) => {\n    switch (type) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      default: return type;\n    }\n  };\n\n  const getThreadContent = (thread: TrainingThread) => {\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 \n        ? firstMessage.content.substring(0, 30) + '...' \n        : firstMessage.content;\n    }\n    return thread.content?.length > 30 \n      ? thread.content.substring(0, 30) + '...' \n      : thread.content || '내용 없음';\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList $isExpanded={isExpanded}>\n        {itemThreads.map((thread: any, index: number) => (\n          <ThreadItem\n            key={thread.id}\n            $isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${index + 1}`}\n                {itemId === 'proceed' && `나아가기 #${index + 1}`}\n                {itemId === 'sentence' && `문장 #${index + 1}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n    \n    console.log('renderInteractionRecords - isExpanded:', isExpanded);\n    console.log('renderInteractionRecords - interactionHeight:', interactionHeight);\n    \n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(\n      record => record.persona_id === selectedPersonaId\n    );\n\n    return (\n      <ResizableContainer \n        $isExpanded={isExpanded}\n        $height={interactionHeight}\n      >\n        <InteractionRecordsList $isExpanded={isExpanded}>\n          {currentPersonaRecord ? (\n            currentPersonaRecord.threads.map((thread) => (\n              <RecordThreadItem\n                key={thread.id}\n                $isSelected={selectedThreadId === thread.id}\n                onClick={() => handleRecordThreadSelect(thread)}\n              >\n                <div>\n                  <ThreadTypeTag type={thread.thread_type}>\n                    {getThreadTypeLabel(thread.thread_type)}\n                  </ThreadTypeTag>\n                  {getThreadContent(thread)}\n                </div>\n                <div style={{ fontSize: '11px', opacity: 0.7, marginTop: '2px' }}>\n                  {formatTime(thread.created_at)}\n                </div>\n              </RecordThreadItem>\n            ))\n          ) : (\n            <div style={{ padding: '16px', fontSize: '14px', color: '#999', textAlign: 'center' }}>\n              이 페르소나의 상호작용 기록이 없습니다\n            </div>\n          )}\n        </InteractionRecordsList>\n        <ResizeHandle onMouseDown={handleMouseDown} />\n      </ResizableContainer>\n    );\n  };\n\n  return (\n    <Sidebar width=\"250px\" $isCollapsed={isCollapsed} $variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n          {isCollapsed ? '▷' : '◁'}\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader $isCollapsed={isCollapsed}>\n        {selectedPersonaName && (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        )}\n      </SidebarHeader>\n\n      <SidebarContent $isCollapsed={isCollapsed}>\n        <SidebarMenuContent $variant=\"conversation\">\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                  $isSelected={selectedItem === item.id}\n                  $isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                  <span>{item.name}</span>\n                </AccordionHeader>\n                \n                {item.id === 'interaction_history' \n                  ? renderInteractionRecords()\n                  : renderThreads(item.id)\n                }\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}