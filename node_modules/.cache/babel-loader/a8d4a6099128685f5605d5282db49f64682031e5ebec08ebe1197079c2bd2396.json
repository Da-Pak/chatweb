{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\SentenceView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput from './MessageInput';\nimport LoadingMessage from './LoadingMessage';\nimport { chatApi } from '../api/chatApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n_c = Container;\nconst SentenceSection = styled.div`\n  padding: 24px;\n  border-bottom: 2px solid #e0e0e0;\n  background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\n`;\nconst SentenceTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\nconst SentenceContent = styled.div`\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  padding: 20px;\n  line-height: 1.6;\n  color: #555;\n  font-size: 14px;\n  white-space: pre-line;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n`;\nconst ThreadsSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\nconst ThreadsList = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\nconst ThreadItem = styled.div`\n  padding: 12px 16px;\n  border: 1px solid ${props => props.isSelected ? '#4caf50' : '#e0e0e0'};\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#e8f5e8' : 'white'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #4caf50;\n    background: #e8f5e8;\n  }\n`;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n`;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c2 = ChatSection;\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c3 = ChatMessages;\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: 1px solid #e0e0e0;\n  background: #ffffff;\n`;\n_c4 = ChatInputSection;\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n\n// 토스트 스타일 컴포넌트 추가\nconst Toast = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #6c757d;\n  color: white;\n  padding: 12px 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(120%)'};\n  transition: transform 0.3s ease;\n  font-size: 14px;\n  font-weight: 500;\n`;\n_c5 = Toast;\nconst SentenceView = ({\n  personaId,\n  personaName,\n  sentenceContent,\n  threads,\n  onThreadUpdate,\n  onSwitchToMode,\n  onGenerateNewInterpretation\n}) => {\n  _s();\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localThreads, setLocalThreads] = useState(threads);\n  const chatMessagesRef = useRef(null);\n  const messageInputRef = useRef(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  // 문장 타입의 스레드만 필터링\n  const sentenceThreads = localThreads.filter(thread => thread.thread_type === 'sentence');\n  useEffect(() => {\n    setLocalThreads(threads);\n    // 첫 번째 문장 스레드를 자동 선택\n    const firstSentenceThread = threads.find(t => t.thread_type === 'sentence');\n    if (firstSentenceThread && !selectedThread) {\n      setSelectedThread(firstSentenceThread);\n    }\n  }, [threads]);\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.messages]);\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n  };\n  const handleSendMessage = async message => {\n    if (!selectedThread) return false;\n    setIsLoading(true);\n    try {\n      const response = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: message\n      });\n      if (response.data && response.data.response) {\n        // 스레드 업데이트\n        const updatedThreads = localThreads.map(t => t.id === selectedThread.id ? {\n          ...t,\n          messages: [...t.messages, {\n            role: 'user',\n            content: message,\n            timestamp: new Date().toISOString()\n          }, response.data.response],\n          updated_at: new Date().toISOString()\n        } : t);\n        setLocalThreads(updatedThreads);\n        onThreadUpdate(updatedThreads);\n\n        // 선택된 스레드 업데이트\n        const updatedThread = updatedThreads.find(t => t.id === selectedThread.id);\n        if (updatedThread) {\n          setSelectedThread(updatedThread);\n        }\n        setIsLoading(false);\n        return true;\n      } else {\n        setIsLoading(false);\n        return false;\n      }\n    } catch (error) {\n      console.error('문장 채팅 오류:', error);\n      setIsLoading(false);\n      return false;\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // 토스트 메시지 표시 함수\n  const showCopyToast = message => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  // 텍스트 복사 유틸리티 함수\n  const copyToClipboard = async (text, successMessage) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      showCopyToast(successMessage);\n    } catch (error) {\n      console.error('복사 실패:', error);\n      showCopyToast('복사 실패');\n    }\n  };\n\n  // 메시지 복사 기능\n  const handleCopyMessage = async messageContent => {\n    await copyToClipboard(messageContent, '메시지가 복사되었습니다');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      show: showToast,\n      children: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n      children: selectedThread ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n          ref: chatMessagesRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              border: '1px solid #e0e0e0',\n              borderRadius: '12px',\n              background: 'white',\n              marginBottom: '16px',\n              boxShadow: '0 2px 8px rgba(0, 0, 0, 0.08)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '12px',\n                color: '#4caf50'\n              },\n              children: [personaName, \"\\uC758 \\uBB38\\uC7A5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                whiteSpace: 'pre-line',\n                lineHeight: '1.6',\n                fontSize: '14px'\n              },\n              children: sentenceContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), selectedThread.messages.slice(1).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '12px',\n              border: '1px solid #e0e0e0',\n              borderRadius: '8px',\n              background: message.role === 'user' ? '#f0f0f0' : 'white',\n              marginBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '8px',\n                color: '#4caf50'\n              },\n              children: message.role === 'user' ? '사용자' : message.persona_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                whiteSpace: 'pre-line',\n                lineHeight: '1.6'\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#999',\n                marginTop: '8px'\n              },\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '8px',\n                marginTop: '12px',\n                justifyContent: 'flex-start'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '12px',\n                  color: '#666',\n                  padding: '4px',\n                  borderRadius: '4px',\n                  transition: 'all 0.2s ease'\n                },\n                onClick: () => handleCopyMessage(message.content),\n                title: \"\\uBCF5\\uC0AC\",\n                children: \"\\uBCF5\\uC0AC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '12px',\n                  color: '#666',\n                  padding: '4px',\n                  borderRadius: '4px',\n                  transition: 'all 0.2s ease'\n                },\n                onClick: () => onGenerateNewInterpretation && onGenerateNewInterpretation(),\n                title: \"\\uD574\\uC11D\",\n                children: \"\\uD574\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '12px',\n                  color: '#666',\n                  padding: '4px',\n                  borderRadius: '4px',\n                  transition: 'all 0.2s ease'\n                },\n                onClick: () => onSwitchToMode && onSwitchToMode('proceed'),\n                title: \"\\uB098\\uC544\\uAC00\\uAE30\",\n                children: \"\\uB098\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '12px',\n                  color: '#666',\n                  padding: '4px',\n                  borderRadius: '4px',\n                  transition: 'all 0.2s ease'\n                },\n                onClick: () => showCopyToast('현재 문장 모드입니다'),\n                title: \"\\uBB38\\uC7A5\",\n                children: \"\\uBB38\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this)]\n          }, index + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInputSection, {\n          children: /*#__PURE__*/_jsxDEV(MessageInput, {\n            ref: messageInputRef,\n            onSendMessage: handleSendMessage,\n            disabled: isLoading,\n            placeholder: \"\\uBB38\\uC7A5\\uC5D0 \\uB300\\uD574 \\uB354 \\uC790\\uC138\\uD788 \\uC9C8\\uBB38\\uD574\\uBCF4\\uC138\\uC694...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: '#999',\n          fontSize: '14px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uBB38\\uC7A5 \\uC2A4\\uB808\\uB4DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '8px',\n            fontSize: '12px'\n          },\n          children: \"\\uC67C\\uCABD \\uC0AC\\uC774\\uB4DC\\uBC14\\uC5D0\\uC11C \\uBB38\\uC7A5 \\uC2A4\\uB808\\uB4DC\\uB97C \\uC120\\uD0DD\\uD558\\uC5EC \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceView, \"m1nkvc7c8B1784497+lnhMuduTA=\");\n_c6 = SentenceView;\nexport default SentenceView;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChatSection\");\n$RefreshReg$(_c3, \"ChatMessages\");\n$RefreshReg$(_c4, \"ChatInputSection\");\n$RefreshReg$(_c5, \"Toast\");\n$RefreshReg$(_c6, \"SentenceView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","MessageInput","LoadingMessage","chatApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","SentenceSection","SentenceTitle","h2","SentenceContent","ThreadsSection","ThreadsList","ThreadItem","props","isSelected","ThreadTitle","ThreadTime","ChatSection","_c2","ChatMessages","_c3","ChatInputSection","_c4","EmptyChat","Toast","show","_c5","SentenceView","personaId","personaName","sentenceContent","threads","onThreadUpdate","onSwitchToMode","onGenerateNewInterpretation","_s","selectedThread","setSelectedThread","isLoading","setIsLoading","localThreads","setLocalThreads","chatMessagesRef","messageInputRef","showToast","setShowToast","toastMessage","setToastMessage","sentenceThreads","filter","thread","thread_type","firstSentenceThread","find","t","current","scrollTop","scrollHeight","messages","handleThreadSelect","handleSendMessage","message","response","chatWithThread","thread_id","id","user_message","data","updatedThreads","map","role","content","timestamp","Date","toISOString","updated_at","updatedThread","error","console","formatTime","toLocaleTimeString","hour","minute","showCopyToast","setTimeout","copyToClipboard","text","successMessage","navigator","clipboard","writeText","handleCopyMessage","messageContent","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","padding","border","borderRadius","background","marginBottom","boxShadow","fontWeight","color","whiteSpace","lineHeight","fontSize","slice","index","persona_name","marginTop","display","gap","justifyContent","cursor","transition","onClick","title","onSendMessage","disabled","placeholder","flex","flexDirection","alignItems","textAlign","_c6","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/SentenceView.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput, { MessageInputRef } from './MessageInput';\nimport LoadingMessage from './LoadingMessage';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread } from '../types';\n\ninterface SentenceViewProps {\n  personaId: string;\n  personaName: string;\n  sentenceContent: string;\n  threads: TrainingThread[];\n  onThreadUpdate: (threads: TrainingThread[]) => void;\n  onSwitchToMode?: (mode: 'interpretation' | 'proceed') => void;\n  onGenerateNewInterpretation?: () => void;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n\nconst SentenceSection = styled.div`\n  padding: 24px;\n  border-bottom: 2px solid #e0e0e0;\n  background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\n`;\n\nconst SentenceTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SentenceContent = styled.div`\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  padding: 20px;\n  line-height: 1.6;\n  color: #555;\n  font-size: 14px;\n  white-space: pre-line;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n`;\n\nconst ThreadsSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ThreadsList = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\n\nconst ThreadItem = styled.div<{ isSelected: boolean }>`\n  padding: 12px 16px;\n  border: 1px solid ${props => props.isSelected ? '#4caf50' : '#e0e0e0'};\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#e8f5e8' : 'white'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #4caf50;\n    background: #e8f5e8;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\n\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: 1px solid #e0e0e0;\n  background: #ffffff;\n`;\n\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n\n// 토스트 스타일 컴포넌트 추가\nconst Toast = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #6c757d;\n  color: white;\n  padding: 12px 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(120%)'};\n  transition: transform 0.3s ease;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst SentenceView: React.FC<SentenceViewProps> = ({\n  personaId,\n  personaName,\n  sentenceContent,\n  threads,\n  onThreadUpdate,\n  onSwitchToMode,\n  onGenerateNewInterpretation,\n}) => {\n  const [selectedThread, setSelectedThread] = useState<TrainingThread | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localThreads, setLocalThreads] = useState<TrainingThread[]>(threads);\n  const chatMessagesRef = useRef<HTMLDivElement>(null);\n  const messageInputRef = useRef<MessageInputRef>(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  // 문장 타입의 스레드만 필터링\n  const sentenceThreads = localThreads.filter(thread => thread.thread_type === 'sentence');\n\n  useEffect(() => {\n    setLocalThreads(threads);\n    // 첫 번째 문장 스레드를 자동 선택\n    const firstSentenceThread = threads.find(t => t.thread_type === 'sentence');\n    if (firstSentenceThread && !selectedThread) {\n      setSelectedThread(firstSentenceThread);\n    }\n  }, [threads]);\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [selectedThread?.messages]);\n\n  const handleThreadSelect = (thread: TrainingThread) => {\n    setSelectedThread(thread);\n  };\n\n  const handleSendMessage = async (message: string): Promise<boolean> => {\n    if (!selectedThread) return false;\n\n    setIsLoading(true);\n    try {\n      const response = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: message\n      });\n\n      if (response.data && response.data.response) {\n        // 스레드 업데이트\n        const updatedThreads = localThreads.map(t => \n          t.id === selectedThread.id \n            ? {\n                ...t,\n                messages: [...t.messages, \n                  {\n                    role: 'user' as const,\n                    content: message,\n                    timestamp: new Date().toISOString()\n                  },\n                  response.data!.response\n                ],\n                updated_at: new Date().toISOString()\n              }\n            : t\n        );\n        \n        setLocalThreads(updatedThreads);\n        onThreadUpdate(updatedThreads);\n        \n        // 선택된 스레드 업데이트\n        const updatedThread = updatedThreads.find(t => t.id === selectedThread.id);\n        if (updatedThread) {\n          setSelectedThread(updatedThread);\n        }\n        \n        setIsLoading(false);\n        return true;\n      } else {\n        setIsLoading(false);\n        return false;\n      }\n    } catch (error) {\n      console.error('문장 채팅 오류:', error);\n      setIsLoading(false);\n      return false;\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  // 토스트 메시지 표시 함수\n  const showCopyToast = (message: string) => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  // 텍스트 복사 유틸리티 함수\n  const copyToClipboard = async (text: string, successMessage: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      showCopyToast(successMessage);\n    } catch (error) {\n      console.error('복사 실패:', error);\n      showCopyToast('복사 실패');\n    }\n  };\n\n  // 메시지 복사 기능\n  const handleCopyMessage = async (messageContent: string) => {\n    await copyToClipboard(messageContent, '메시지가 복사되었습니다');\n  };\n\n  return (\n    <Container>\n      <Toast show={showToast}>\n        {toastMessage}\n      </Toast>\n      \n      <ChatSection>\n        {selectedThread ? (\n          <>\n            <ChatMessages ref={chatMessagesRef}>\n              {/* 첫 번째 메시지로 문장 내용 표시 */}\n              <div style={{ \n                padding: '20px', \n                border: '1px solid #e0e0e0', \n                borderRadius: '12px',\n                background: 'white',\n                marginBottom: '16px',\n                boxShadow: '0 2px 8px rgba(0, 0, 0, 0.08)'\n              }}>\n                <div style={{ fontWeight: 'bold', marginBottom: '12px', color: '#4caf50' }}>\n                  {personaName}의 문장\n                </div>\n                <div style={{ whiteSpace: 'pre-line', lineHeight: '1.6', fontSize: '14px' }}>\n                  {sentenceContent}\n                </div>\n              </div>\n              \n              {/* 스레드의 대화 메시지들 (첫 번째 메시지 제외) */}\n              {selectedThread.messages.slice(1).map((message, index) => (\n                <div key={index + 1} style={{ \n                  padding: '12px', \n                  border: '1px solid #e0e0e0', \n                  borderRadius: '8px',\n                  background: message.role === 'user' ? '#f0f0f0' : 'white',\n                  marginBottom: '8px'\n                }}>\n                  <div style={{ fontWeight: 'bold', marginBottom: '8px', color: '#4caf50' }}>\n                    {message.role === 'user' ? '사용자' : message.persona_name}\n                  </div>\n                  <div style={{ whiteSpace: 'pre-line', lineHeight: '1.6' }}>\n                    {message.content}\n                  </div>\n                  <div style={{ fontSize: '12px', color: '#999', marginTop: '8px' }}>\n                    {formatTime(message.timestamp)}\n                  </div>\n                  \n                  {/* 액션 버튼들 - Assistant 메시지에만 표시 */}\n                  {message.role === 'assistant' && (\n                    <div style={{ display: 'flex', gap: '8px', marginTop: '12px', justifyContent: 'flex-start' }}>\n                      <button \n                        style={{\n                          background: 'none',\n                          border: 'none',\n                          cursor: 'pointer',\n                          fontSize: '12px',\n                          color: '#666',\n                          padding: '4px',\n                          borderRadius: '4px',\n                          transition: 'all 0.2s ease'\n                        }}\n                        onClick={() => handleCopyMessage(message.content)}\n                        title=\"복사\"\n                      >\n                        복사\n                      </button>\n                      <button \n                        style={{\n                          background: 'none',\n                          border: 'none',\n                          cursor: 'pointer',\n                          fontSize: '12px',\n                          color: '#666',\n                          padding: '4px',\n                          borderRadius: '4px',\n                          transition: 'all 0.2s ease'\n                        }}\n                        onClick={() => onGenerateNewInterpretation && onGenerateNewInterpretation()}\n                        title=\"해석\"\n                      >\n                        해\n                      </button>\n                      <button \n                        style={{\n                          background: 'none',\n                          border: 'none',\n                          cursor: 'pointer',\n                          fontSize: '12px',\n                          color: '#666',\n                          padding: '4px',\n                          borderRadius: '4px',\n                          transition: 'all 0.2s ease'\n                        }}\n                        onClick={() => onSwitchToMode && onSwitchToMode('proceed')}\n                        title=\"나아가기\"\n                      >\n                        나\n                      </button>\n                      <button \n                        style={{\n                          background: 'none',\n                          border: 'none',\n                          cursor: 'pointer',\n                          fontSize: '12px',\n                          color: '#666',\n                          padding: '4px',\n                          borderRadius: '4px',\n                          transition: 'all 0.2s ease'\n                        }}\n                        onClick={() => showCopyToast('현재 문장 모드입니다')}\n                        title=\"문장\"\n                      >\n                        문\n                      </button>\n                    </div>\n                  )}\n                </div>\n              ))}\n              {isLoading && <LoadingMessage />}\n            </ChatMessages>\n            \n            <ChatInputSection>\n              <MessageInput\n                ref={messageInputRef}\n                onSendMessage={handleSendMessage}\n                disabled={isLoading}\n                placeholder=\"문장에 대해 더 자세히 질문해보세요...\"\n              />\n            </ChatInputSection>\n          </>\n        ) : (\n          <div style={{\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: '#999',\n            fontSize: '14px',\n            textAlign: 'center'\n          }}>\n            <div>문장 스레드를 선택해주세요</div>\n            <div style={{ marginTop: '8px', fontSize: '12px' }}>\n              왼쪽 사이드바에서 문장 스레드를 선택하여 대화를 시작할 수 있습니다\n            </div>\n          </div>\n        )}\n      </ChatSection>\n    </Container>\n  );\n};\n\nexport default SentenceView; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,YAAY,MAA2B,gBAAgB;AAC9D,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAazC,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,SAAS;AAOf,MAAMG,eAAe,GAAGX,MAAM,CAACS,GAAG;AAClC;AACA;AACA;AACA,CAAC;AAED,MAAMG,aAAa,GAAGZ,MAAM,CAACa,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,eAAe,GAAGd,MAAM,CAACS,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMM,cAAc,GAAGf,MAAM,CAACS,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMO,WAAW,GAAGhB,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAED,MAAMQ,UAAU,GAAGjB,MAAM,CAACS,GAA4B;AACtD;AACA,sBAAsBS,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,SAAS,GAAG,SAAS;AACvE;AACA;AACA;AACA,gBAAgBD,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,SAAS,GAAG,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,WAAW,GAAGpB,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAED,MAAMY,UAAU,GAAGrB,MAAM,CAACS,GAAG;AAC7B;AACA;AACA,CAAC;AAED,MAAMa,WAAW,GAAGtB,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACc,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAGxB,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GAPID,YAAY;AASlB,MAAME,gBAAgB,GAAG1B,MAAM,CAACS,GAAG;AACnC;AACA;AACA;AACA,CAAC;AAACkB,GAAA,GAJID,gBAAgB;AAMtB,MAAME,SAAS,GAAG5B,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMoB,KAAK,GAAG7B,MAAM,CAACS,GAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeS,KAAK,IAAIA,KAAK,CAACY,IAAI,GAAG,eAAe,GAAG,kBAAkB;AACzE;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAdIF,KAAK;AAgBX,MAAMG,YAAyC,GAAGA,CAAC;EACjDC,SAAS;EACTC,WAAW;EACXC,eAAe;EACfC,OAAO;EACPC,cAAc;EACdC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAwB,IAAI,CAAC;EACjF,MAAM,CAAC8C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAmBuC,OAAO,CAAC;EAC3E,MAAMW,eAAe,GAAGjD,MAAM,CAAiB,IAAI,CAAC;EACpD,MAAMkD,eAAe,GAAGlD,MAAM,CAAkB,IAAI,CAAC;EACrD,MAAM,CAACmD,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsD,YAAY,EAAEC,eAAe,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMwD,eAAe,GAAGR,YAAY,CAACS,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,WAAW,KAAK,UAAU,CAAC;EAExFzD,SAAS,CAAC,MAAM;IACd+C,eAAe,CAACV,OAAO,CAAC;IACxB;IACA,MAAMqB,mBAAmB,GAAGrB,OAAO,CAACsB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,WAAW,KAAK,UAAU,CAAC;IAC3E,IAAIC,mBAAmB,IAAI,CAAChB,cAAc,EAAE;MAC1CC,iBAAiB,CAACe,mBAAmB,CAAC;IACxC;EACF,CAAC,EAAE,CAACrB,OAAO,CAAC,CAAC;EAEbrC,SAAS,CAAC,MAAM;IACd,IAAIgD,eAAe,CAACa,OAAO,EAAE;MAC3Bb,eAAe,CAACa,OAAO,CAACC,SAAS,GAAGd,eAAe,CAACa,OAAO,CAACE,YAAY;IAC1E;EACF,CAAC,EAAE,CAACrB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEsB,QAAQ,CAAC,CAAC;EAE9B,MAAMC,kBAAkB,GAAIT,MAAsB,IAAK;IACrDb,iBAAiB,CAACa,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMU,iBAAiB,GAAG,MAAOC,OAAe,IAAuB;IACrE,IAAI,CAACzB,cAAc,EAAE,OAAO,KAAK;IAEjCG,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMuB,QAAQ,GAAG,MAAMhE,OAAO,CAACiE,cAAc,CAAC;QAC5CC,SAAS,EAAE5B,cAAc,CAAC6B,EAAE;QAC5BC,YAAY,EAAEL;MAChB,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACL,QAAQ,EAAE;QAC3C;QACA,MAAMM,cAAc,GAAG5B,YAAY,CAAC6B,GAAG,CAACf,CAAC,IACvCA,CAAC,CAACW,EAAE,KAAK7B,cAAc,CAAC6B,EAAE,GACtB;UACE,GAAGX,CAAC;UACJI,QAAQ,EAAE,CAAC,GAAGJ,CAAC,CAACI,QAAQ,EACtB;YACEY,IAAI,EAAE,MAAe;YACrBC,OAAO,EAAEV,OAAO;YAChBW,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UACpC,CAAC,EACDZ,QAAQ,CAACK,IAAI,CAAEL,QAAQ,CACxB;UACDa,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACrC,CAAC,GACDpB,CACN,CAAC;QAEDb,eAAe,CAAC2B,cAAc,CAAC;QAC/BpC,cAAc,CAACoC,cAAc,CAAC;;QAE9B;QACA,MAAMQ,aAAa,GAAGR,cAAc,CAACf,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACW,EAAE,KAAK7B,cAAc,CAAC6B,EAAE,CAAC;QAC1E,IAAIW,aAAa,EAAE;UACjBvC,iBAAiB,CAACuC,aAAa,CAAC;QAClC;QAEArC,YAAY,CAAC,KAAK,CAAC;QACnB,OAAO,IAAI;MACb,CAAC,MAAM;QACLA,YAAY,CAAC,KAAK,CAAC;QACnB,OAAO,KAAK;MACd;IACF,CAAC,CAAC,OAAOsC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjCtC,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMwC,UAAU,GAAIP,SAAiB,IAAK;IACxC,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACQ,kBAAkB,CAAC,OAAO,EAAE;MACrDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAItB,OAAe,IAAK;IACzCd,eAAe,CAACc,OAAO,CAAC;IACxBhB,YAAY,CAAC,IAAI,CAAC;IAClBuC,UAAU,CAAC,MAAMvC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMwC,eAAe,GAAG,MAAAA,CAAOC,IAAY,EAAEC,cAAsB,KAAK;IACtE,IAAI;MACF,MAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,IAAI,CAAC;MACzCH,aAAa,CAACI,cAAc,CAAC;IAC/B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BM,aAAa,CAAC,OAAO,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAMQ,iBAAiB,GAAG,MAAOC,cAAsB,IAAK;IAC1D,MAAMP,eAAe,CAACO,cAAc,EAAE,cAAc,CAAC;EACvD,CAAC;EAED,oBACE5F,OAAA,CAACG,SAAS;IAAA0F,QAAA,gBACR7F,OAAA,CAACwB,KAAK;MAACC,IAAI,EAAEmB,SAAU;MAAAiD,QAAA,EACpB/C;IAAY;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAERjG,OAAA,CAACiB,WAAW;MAAA4E,QAAA,EACTzD,cAAc,gBACbpC,OAAA,CAAAE,SAAA;QAAA2F,QAAA,gBACE7F,OAAA,CAACmB,YAAY;UAAC+E,GAAG,EAAExD,eAAgB;UAAAmD,QAAA,gBAEjC7F,OAAA;YAAKmG,KAAK,EAAE;cACVC,OAAO,EAAE,MAAM;cACfC,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,MAAM;cACpBC,UAAU,EAAE,OAAO;cACnBC,YAAY,EAAE,MAAM;cACpBC,SAAS,EAAE;YACb,CAAE;YAAAZ,QAAA,gBACA7F,OAAA;cAAKmG,KAAK,EAAE;gBAAEO,UAAU,EAAE,MAAM;gBAAEF,YAAY,EAAE,MAAM;gBAAEG,KAAK,EAAE;cAAU,CAAE;cAAAd,QAAA,GACxEhE,WAAW,EAAC,qBACf;YAAA;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNjG,OAAA;cAAKmG,KAAK,EAAE;gBAAES,UAAU,EAAE,UAAU;gBAAEC,UAAU,EAAE,KAAK;gBAAEC,QAAQ,EAAE;cAAO,CAAE;cAAAjB,QAAA,EACzE/D;YAAe;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGL7D,cAAc,CAACsB,QAAQ,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC1C,GAAG,CAAC,CAACR,OAAO,EAAEmD,KAAK,kBACnDhH,OAAA;YAAqBmG,KAAK,EAAE;cAC1BC,OAAO,EAAE,MAAM;cACfC,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,KAAK;cACnBC,UAAU,EAAE1C,OAAO,CAACS,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,OAAO;cACzDkC,YAAY,EAAE;YAChB,CAAE;YAAAX,QAAA,gBACA7F,OAAA;cAAKmG,KAAK,EAAE;gBAAEO,UAAU,EAAE,MAAM;gBAAEF,YAAY,EAAE,KAAK;gBAAEG,KAAK,EAAE;cAAU,CAAE;cAAAd,QAAA,EACvEhC,OAAO,CAACS,IAAI,KAAK,MAAM,GAAG,KAAK,GAAGT,OAAO,CAACoD;YAAY;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACNjG,OAAA;cAAKmG,KAAK,EAAE;gBAAES,UAAU,EAAE,UAAU;gBAAEC,UAAU,EAAE;cAAM,CAAE;cAAAhB,QAAA,EACvDhC,OAAO,CAACU;YAAO;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC,eACNjG,OAAA;cAAKmG,KAAK,EAAE;gBAAEW,QAAQ,EAAE,MAAM;gBAAEH,KAAK,EAAE,MAAM;gBAAEO,SAAS,EAAE;cAAM,CAAE;cAAArB,QAAA,EAC/Dd,UAAU,CAAClB,OAAO,CAACW,SAAS;YAAC;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,EAGLpC,OAAO,CAACS,IAAI,KAAK,WAAW,iBAC3BtE,OAAA;cAAKmG,KAAK,EAAE;gBAAEgB,OAAO,EAAE,MAAM;gBAAEC,GAAG,EAAE,KAAK;gBAAEF,SAAS,EAAE,MAAM;gBAAEG,cAAc,EAAE;cAAa,CAAE;cAAAxB,QAAA,gBAC3F7F,OAAA;gBACEmG,KAAK,EAAE;kBACLI,UAAU,EAAE,MAAM;kBAClBF,MAAM,EAAE,MAAM;kBACdiB,MAAM,EAAE,SAAS;kBACjBR,QAAQ,EAAE,MAAM;kBAChBH,KAAK,EAAE,MAAM;kBACbP,OAAO,EAAE,KAAK;kBACdE,YAAY,EAAE,KAAK;kBACnBiB,UAAU,EAAE;gBACd,CAAE;gBACFC,OAAO,EAAEA,CAAA,KAAM7B,iBAAiB,CAAC9B,OAAO,CAACU,OAAO,CAAE;gBAClDkD,KAAK,EAAC,cAAI;gBAAA5B,QAAA,EACX;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTjG,OAAA;gBACEmG,KAAK,EAAE;kBACLI,UAAU,EAAE,MAAM;kBAClBF,MAAM,EAAE,MAAM;kBACdiB,MAAM,EAAE,SAAS;kBACjBR,QAAQ,EAAE,MAAM;kBAChBH,KAAK,EAAE,MAAM;kBACbP,OAAO,EAAE,KAAK;kBACdE,YAAY,EAAE,KAAK;kBACnBiB,UAAU,EAAE;gBACd,CAAE;gBACFC,OAAO,EAAEA,CAAA,KAAMtF,2BAA2B,IAAIA,2BAA2B,CAAC,CAAE;gBAC5EuF,KAAK,EAAC,cAAI;gBAAA5B,QAAA,EACX;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTjG,OAAA;gBACEmG,KAAK,EAAE;kBACLI,UAAU,EAAE,MAAM;kBAClBF,MAAM,EAAE,MAAM;kBACdiB,MAAM,EAAE,SAAS;kBACjBR,QAAQ,EAAE,MAAM;kBAChBH,KAAK,EAAE,MAAM;kBACbP,OAAO,EAAE,KAAK;kBACdE,YAAY,EAAE,KAAK;kBACnBiB,UAAU,EAAE;gBACd,CAAE;gBACFC,OAAO,EAAEA,CAAA,KAAMvF,cAAc,IAAIA,cAAc,CAAC,SAAS,CAAE;gBAC3DwF,KAAK,EAAC,0BAAM;gBAAA5B,QAAA,EACb;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTjG,OAAA;gBACEmG,KAAK,EAAE;kBACLI,UAAU,EAAE,MAAM;kBAClBF,MAAM,EAAE,MAAM;kBACdiB,MAAM,EAAE,SAAS;kBACjBR,QAAQ,EAAE,MAAM;kBAChBH,KAAK,EAAE,MAAM;kBACbP,OAAO,EAAE,KAAK;kBACdE,YAAY,EAAE,KAAK;kBACnBiB,UAAU,EAAE;gBACd,CAAE;gBACFC,OAAO,EAAEA,CAAA,KAAMrC,aAAa,CAAC,aAAa,CAAE;gBAC5CsC,KAAK,EAAC,cAAI;gBAAA5B,QAAA,EACX;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACN;UAAA,GArFOe,KAAK,GAAG,CAAC;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsFd,CACN,CAAC,EACD3D,SAAS,iBAAItC,OAAA,CAACH,cAAc;YAAAiG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eAEfjG,OAAA,CAACqB,gBAAgB;UAAAwE,QAAA,eACf7F,OAAA,CAACJ,YAAY;YACXsG,GAAG,EAAEvD,eAAgB;YACrB+E,aAAa,EAAE9D,iBAAkB;YACjC+D,QAAQ,EAAErF,SAAU;YACpBsF,WAAW,EAAC;UAAwB;YAAA9B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACc,CAAC;MAAA,eACnB,CAAC,gBAEHjG,OAAA;QAAKmG,KAAK,EAAE;UACV0B,IAAI,EAAE,CAAC;UACPV,OAAO,EAAE,MAAM;UACfW,aAAa,EAAE,QAAQ;UACvBT,cAAc,EAAE,QAAQ;UACxBU,UAAU,EAAE,QAAQ;UACpBpB,KAAK,EAAE,MAAM;UACbG,QAAQ,EAAE,MAAM;UAChBkB,SAAS,EAAE;QACb,CAAE;QAAAnC,QAAA,gBACA7F,OAAA;UAAA6F,QAAA,EAAK;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBjG,OAAA;UAAKmG,KAAK,EAAE;YAAEe,SAAS,EAAE,KAAK;YAAEJ,QAAQ,EAAE;UAAO,CAAE;UAAAjB,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAC9D,EAAA,CA7QIR,YAAyC;AAAAsG,GAAA,GAAzCtG,YAAyC;AA+Q/C,eAAeA,YAAY;AAAC,IAAAtB,EAAA,EAAAa,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAuG,GAAA;AAAAC,YAAA,CAAA7H,EAAA;AAAA6H,YAAA,CAAAhH,GAAA;AAAAgH,YAAA,CAAA9G,GAAA;AAAA8G,YAAA,CAAA5G,GAAA;AAAA4G,YAAA,CAAAxG,GAAA;AAAAwG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}