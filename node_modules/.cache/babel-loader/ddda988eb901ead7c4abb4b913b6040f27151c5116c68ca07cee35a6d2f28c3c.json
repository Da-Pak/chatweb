{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\training\\\\components\\\\InterpretationView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { chatApi } from '../../shared/api/chatApi';\nimport Message from '../../shared/components/Message';\nimport { ViewContainer, ChatContainer, InputContainer, StyledTextArea, SendButton, LoadingText } from '../../shared/styles/ViewStyles';\nimport { showCopyToast } from '../../shared/utils/toast';\nimport { ActionButton, ActionsContainer } from './InterpretationView.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InterpretationView = ({\n  personaId,\n  personaName,\n  selectedThread,\n  onRefreshThreads,\n  onSwitchToMode,\n  onGenerateNewInterpretation\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    if (selectedThread) {\n      setMessages(selectedThread.messages || []);\n    }\n  }, [selectedThread]);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedThread) return;\n    const userMessage = {\n      id: `local-user-${Date.now()}`,\n      role: 'user',\n      content: newMessage,\n      timestamp: new Date().toISOString()\n    };\n    setIsLoading(true);\n    setMessages(prev => [...prev, userMessage]);\n    setNewMessage('');\n    try {\n      const result = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: newMessage\n      });\n      if (result.data) {\n        setMessages(prev => [...prev.slice(0, -1), userMessage, result.data.response]);\n        if (onRefreshThreads) {\n          onRefreshThreads();\n        }\n      } else {\n        console.error('Message sending failed:', result.error);\n        setMessages(prev => prev.slice(0, -1)); // 실패 시 사용자 메시지 제거\n        showCopyToast('메시지 전송에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => prev.slice(0, -1));\n      showCopyToast('오류가 발생했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ViewContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: onGenerateNewInterpretation,\n        children: \"\\uC0C8\\uB85C\\uC6B4 \\uD574\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => onSwitchToMode('proceed'),\n        children: \"\\uB098\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => onSwitchToMode('sentence'),\n        children: \"\\uBB38\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      ref: chatContainerRef,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg,\n        personas: {},\n        showActionButtons: false\n      }, msg.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingText, {\n        children: \"\\uC751\\uB2F5 \\uC0DD\\uC131 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledTextArea, {\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: selectedThread ? `${personaName}에게 메시지를 보내세요...` : '먼저 해석을 시작해주세요.',\n        disabled: !selectedThread || isLoading,\n        onKeyPress: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n        onClick: handleSendMessage,\n        disabled: !selectedThread || isLoading,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(InterpretationView, \"lmugyRz0rqTfcQzdg/KBwyDrU+E=\");\n_c = InterpretationView;\nexport default InterpretationView;\nvar _c;\n$RefreshReg$(_c, \"InterpretationView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","chatApi","Message","ViewContainer","ChatContainer","InputContainer","StyledTextArea","SendButton","LoadingText","showCopyToast","ActionButton","ActionsContainer","jsxDEV","_jsxDEV","InterpretationView","personaId","personaName","selectedThread","onRefreshThreads","onSwitchToMode","onGenerateNewInterpretation","_s","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","chatContainerRef","current","scrollTop","scrollHeight","handleSendMessage","trim","userMessage","id","Date","now","role","content","timestamp","toISOString","prev","result","chatWithThread","thread_id","user_message","data","slice","response","console","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","message","personas","showActionButtons","value","onChange","e","target","placeholder","disabled","onKeyPress","key","shiftKey","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/training/components/InterpretationView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { Message as MessageType, TrainingThread } from '../../shared/types';\nimport Message from '../../shared/components/Message';\nimport { ViewContainer, ChatContainer, InputContainer, StyledTextArea, SendButton, LoadingText } from '../../shared/styles/ViewStyles';\nimport { showCopyToast } from '../../shared/utils/toast';\nimport { ActionButton, ActionsContainer } from './InterpretationView.styles';\n\ninterface InterpretationViewProps {\n  personaId: string;\n  personaName: string;\n  selectedThread: TrainingThread | null;\n  onRefreshThreads?: () => void;\n  onSwitchToMode: (mode: 'interpretation' | 'proceed' | 'sentence') => void;\n  onGenerateNewInterpretation: () => void;\n}\n\nconst InterpretationView: React.FC<InterpretationViewProps> = ({\n  personaId,\n  personaName,\n  selectedThread,\n  onRefreshThreads,\n  onSwitchToMode,\n  onGenerateNewInterpretation,\n}) => {\n  const [messages, setMessages] = useState<MessageType[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (selectedThread) {\n      setMessages(selectedThread.messages || []);\n    }\n  }, [selectedThread]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedThread) return;\n\n    const userMessage: MessageType = {\n      id: `local-user-${Date.now()}`,\n      role: 'user',\n      content: newMessage,\n      timestamp: new Date().toISOString(),\n    };\n\n    setIsLoading(true);\n    setMessages(prev => [...prev, userMessage]);\n    setNewMessage('');\n\n    try {\n      const result = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: newMessage,\n      });\n\n      if (result.data) {\n        setMessages(prev => [...prev.slice(0, -1), userMessage, result.data.response]);\n        if (onRefreshThreads) {\n          onRefreshThreads();\n        }\n      } else {\n        console.error('Message sending failed:', result.error);\n        setMessages(prev => prev.slice(0, -1)); // 실패 시 사용자 메시지 제거\n        showCopyToast('메시지 전송에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => prev.slice(0, -1));\n      showCopyToast('오류가 발생했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  return (\n    <ViewContainer>\n      <ActionsContainer>\n        <ActionButton onClick={onGenerateNewInterpretation}>새로운 해석</ActionButton>\n        <ActionButton onClick={() => onSwitchToMode('proceed')}>나아가기</ActionButton>\n        <ActionButton onClick={() => onSwitchToMode('sentence')}>문장</ActionButton>\n      </ActionsContainer>\n      <ChatContainer ref={chatContainerRef}>\n        {messages.map((msg, index) => (\n          <Message key={msg.id || index} message={msg} personas={{}} showActionButtons={false} />\n        ))}\n        {isLoading && <LoadingText>응답 생성 중...</LoadingText>}\n      </ChatContainer>\n      <InputContainer>\n        <StyledTextArea\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder={selectedThread ? `${personaName}에게 메시지를 보내세요...` : '먼저 해석을 시작해주세요.'}\n          disabled={!selectedThread || isLoading}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage();\n            }\n          }}\n        />\n        <SendButton onClick={handleSendMessage} disabled={!selectedThread || isLoading}>\n          전송\n        </SendButton>\n      </InputContainer>\n    </ViewContainer>\n  );\n};\n\nexport default InterpretationView; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,SAASC,OAAO,QAAQ,0BAA0B;AAElD,OAAOC,OAAO,MAAM,iCAAiC;AACrD,SAASC,aAAa,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,EAAEC,UAAU,EAAEC,WAAW,QAAQ,gCAAgC;AACtI,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW7E,MAAMC,kBAAqD,GAAGA,CAAC;EAC7DC,SAAS;EACTC,WAAW;EACXC,cAAc;EACdC,gBAAgB;EAChBC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAgB,EAAE,CAAC;EAC3D,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM8B,gBAAgB,GAAG5B,MAAM,CAAiB,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,IAAIkB,cAAc,EAAE;MAClBM,WAAW,CAACN,cAAc,CAACK,QAAQ,IAAI,EAAE,CAAC;IAC5C;EACF,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;EAEpBlB,SAAS,CAAC,MAAM;IACd,IAAI6B,gBAAgB,CAACC,OAAO,EAAE;MAC5BD,gBAAgB,CAACC,OAAO,CAACC,SAAS,GAAGF,gBAAgB,CAACC,OAAO,CAACE,YAAY;IAC5E;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,IAAI,CAAChB,cAAc,EAAE;IAE3C,MAAMiB,WAAwB,GAAG;MAC/BC,EAAE,EAAE,cAAcC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MAC9BC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEf,UAAU;MACnBgB,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC;IACpC,CAAC;IAEDd,YAAY,CAAC,IAAI,CAAC;IAClBJ,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAER,WAAW,CAAC,CAAC;IAC3CT,aAAa,CAAC,EAAE,CAAC;IAEjB,IAAI;MACF,MAAMkB,MAAM,GAAG,MAAM1C,OAAO,CAAC2C,cAAc,CAAC;QAC1CC,SAAS,EAAE5B,cAAc,CAACkB,EAAE;QAC5BW,YAAY,EAAEtB;MAChB,CAAC,CAAC;MAEF,IAAImB,MAAM,CAACI,IAAI,EAAE;QACfxB,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEd,WAAW,EAAES,MAAM,CAACI,IAAI,CAACE,QAAQ,CAAC,CAAC;QAC9E,IAAI/B,gBAAgB,EAAE;UACpBA,gBAAgB,CAAC,CAAC;QACpB;MACF,CAAC,MAAM;QACLgC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAER,MAAM,CAACQ,KAAK,CAAC;QACtD5B,WAAW,CAACmB,IAAI,IAAIA,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxCvC,aAAa,CAAC,iBAAiB,CAAC;MAClC;IACF,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C5B,WAAW,CAACmB,IAAI,IAAIA,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACtCvC,aAAa,CAAC,aAAa,CAAC;IAC9B,CAAC,SAAS;MACRkB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEd,OAAA,CAACV,aAAa;IAAAiD,QAAA,gBACZvC,OAAA,CAACF,gBAAgB;MAAAyC,QAAA,gBACfvC,OAAA,CAACH,YAAY;QAAC2C,OAAO,EAAEjC,2BAA4B;QAAAgC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACzE5C,OAAA,CAACH,YAAY;QAAC2C,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAAC,SAAS,CAAE;QAAAiC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC3E5C,OAAA,CAACH,YAAY;QAAC2C,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAAC,UAAU,CAAE;QAAAiC,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACnB5C,OAAA,CAACT,aAAa;MAACsD,GAAG,EAAE9B,gBAAiB;MAAAwB,QAAA,GAClC9B,QAAQ,CAACqC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBhD,OAAA,CAACX,OAAO;QAAuB4D,OAAO,EAAEF,GAAI;QAACG,QAAQ,EAAE,CAAC,CAAE;QAACC,iBAAiB,EAAE;MAAM,GAAtEJ,GAAG,CAACzB,EAAE,IAAI0B,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyD,CACvF,CAAC,EACD/B,SAAS,iBAAIb,OAAA,CAACL,WAAW;QAAA4C,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAChB5C,OAAA,CAACR,cAAc;MAAA+C,QAAA,gBACbvC,OAAA,CAACP,cAAc;QACb2D,KAAK,EAAEzC,UAAW;QAClB0C,QAAQ,EAAGC,CAAC,IAAK1C,aAAa,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAEpD,cAAc,GAAG,GAAGD,WAAW,iBAAiB,GAAG,gBAAiB;QACjFsD,QAAQ,EAAE,CAACrD,cAAc,IAAIS,SAAU;QACvC6C,UAAU,EAAGJ,CAAC,IAAK;UACjB,IAAIA,CAAC,CAACK,GAAG,KAAK,OAAO,IAAI,CAACL,CAAC,CAACM,QAAQ,EAAE;YACpCN,CAAC,CAACO,cAAc,CAAC,CAAC;YAClB1C,iBAAiB,CAAC,CAAC;UACrB;QACF;MAAE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF5C,OAAA,CAACN,UAAU;QAAC8C,OAAO,EAAErB,iBAAkB;QAACsC,QAAQ,EAAE,CAACrD,cAAc,IAAIS,SAAU;QAAA0B,QAAA,EAAC;MAEhF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB,CAAC;AAACpC,EAAA,CAhGIP,kBAAqD;AAAA6D,EAAA,GAArD7D,kBAAqD;AAkG3D,eAAeA,kBAAkB;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}