{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\ChatArea.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\nimport TrainingCategoryView from './TrainingCategoryView';\nimport PersonaAdminPanel from './PersonaAdminPanel';\nimport { MainArea, ChatContent, LoadingSpinner, EmptyState, EmptyStateTitle, EmptyStateText } from '../styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatArea = ({\n  selectedConversation,\n  conversations,\n  personas,\n  globalMessages,\n  isLoading,\n  error,\n  onSendInitialMessage,\n  onContinueConversation,\n  onClearError,\n  selectedPersonaItem,\n  onSelectPersona,\n  onInterpretationComplete,\n  selectedConversationItem,\n  currentInterpretation,\n  onInterpretationMessage\n}) => {\n  _s();\n  var _personas$currentConv;\n  const chatContentRef = useRef(null);\n  const currentConversation = selectedConversation ? conversations[selectedConversation] : null;\n\n  // 메시지가 추가될 때마다 스크롤을 맨 아래로\n  useEffect(() => {\n    if (chatContentRef.current) {\n      chatContentRef.current.scrollTop = chatContentRef.current.scrollHeight;\n    }\n  }, [currentConversation === null || currentConversation === void 0 ? void 0 : currentConversation.messages, globalMessages, isLoading]);\n  const handleSendMessage = async message => {\n    if (selectedConversation) {\n      // 기존 대화에 메시지 추가\n      return await onContinueConversation(selectedConversation, message);\n    } else if (currentInterpretation) {\n      // 해석 모드에서는 해석 관련 메시지 전송\n      return await onInterpretationMessage(message);\n    } else {\n      // 새로운 대화 시작\n      return await onSendInitialMessage(message);\n    }\n  };\n  const getHeaderTitle = () => {\n    if (selectedConversation && currentConversation) {\n      const persona = personas[currentConversation.persona_id];\n      return `${persona === null || persona === void 0 ? void 0 : persona.name}과의 대화`;\n    }\n    return '다중 페르소나 채팅';\n  };\n  const getHeaderSubtitle = () => {\n    if (selectedConversation && currentConversation) {\n      return `${currentConversation.messages.length}개의 메시지`;\n    }\n    return '모든 페르소나와 대화하거나 개별 페르소나를 선택하세요';\n  };\n  const renderInitialResponses = () => {\n    if (!globalMessages.length) return null;\n    const latestMessage = globalMessages[globalMessages.length - 1];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        message: {\n          role: 'user',\n          content: latestMessage.user_message,\n          timestamp: latestMessage.timestamp\n        },\n        personas: personas,\n        showActionButtons: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), latestMessage.responses.map(response => /*#__PURE__*/_jsxDEV(Message, {\n        message: {\n          role: 'assistant',\n          content: response.content,\n          timestamp: response.timestamp,\n          persona_id: response.persona_id,\n          persona_name: response.persona_name\n        },\n        personas: personas,\n        showActionButtons: true\n      }, `${latestMessage.id}_${response.persona_id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px 0',\n          padding: '16px',\n          backgroundColor: '#f8f8f8',\n          borderRadius: '8px',\n          border: 'none',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            color: '#666',\n            marginBottom: '8px'\n          },\n          children: \"\\uD83D\\uDCA1 \\uAC01 \\uD398\\uB974\\uC18C\\uB098\\uC640 \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uB300\\uD654\\uB97C \\uC774\\uC5B4\\uAC00\\uB824\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '13px',\n            color: '#888'\n          },\n          children: \"\\uC67C\\uCABD \\uC0AC\\uC774\\uB4DC\\uBC14\\uC5D0\\uC11C \\uD398\\uB974\\uC18C\\uB098\\uB97C \\uC120\\uD0DD\\uD558\\uAC70\\uB098, \\uD2B9\\uC815 \\uB300\\uD654\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  };\n  const renderConversation = () => {\n    if (!currentConversation) return null;\n    return currentConversation.messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      message: message,\n      personas: personas,\n      showActionButtons: message.role === 'assistant'\n    }, `${currentConversation.id}_${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this));\n  };\n  const renderInterpretationChat = () => {\n    if (!currentInterpretation) return null;\n    return currentInterpretation.messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      message: {\n        ...message,\n        persona_id: message.role === 'assistant' ? currentInterpretation.personaId : undefined,\n        persona_name: message.role === 'assistant' ? currentInterpretation.personaName : undefined\n      },\n      personas: personas,\n      showActionButtons: message.role === 'assistant'\n    }, `interpretation_${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEmptyState = () => /*#__PURE__*/_jsxDEV(EmptyState, {\n    children: [/*#__PURE__*/_jsxDEV(EmptyStateTitle, {\n      children: \"\\uC0C8\\uB85C\\uC6B4 \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmptyStateText, {\n      children: Object.keys(personas).length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\uC544\\uB798\\uC5D0 \\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uBA74 \", Object.keys(personas).length, \"\\uAC1C\\uC758 \\uD398\\uB974\\uC18C\\uB098\\uAC00\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 64\n        }, this), \"\\uAC01\\uAC01 \\uB2E4\\uB978 \\uAD00\\uC810\\uC5D0\\uC11C \\uB2F5\\uBCC0\\uD574\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"]\n      }, void 0, true) : '페르소나 정보를 불러오는 중입니다...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MainArea, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '80px',\n        borderBottom: '1px solid #ddd',\n        background: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }, this), selectedPersonaItem === 'training' ? /*#__PURE__*/_jsxDEV(TrainingCategoryView, {\n      personas: personas,\n      onSelectPersona: onSelectPersona || (() => {}),\n      onInterpretationComplete: onInterpretationComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this) : selectedPersonaItem === 'admin' ? /*#__PURE__*/_jsxDEV(PersonaAdminPanel, {\n      onClose: () => {\n        // 관리 모드 종료 시 PersonaSidebar로 돌아가기\n        if (onSelectPersona) {\n          onSelectPersona(''); // 빈 값으로 설정하여 PersonaSidebar의 selectedItem을 null로 만듦\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChatContent, {\n        ref: chatContentRef,\n        children: [!selectedConversation && !currentInterpretation && globalMessages.length === 0 && renderEmptyState(), !selectedConversation && !currentInterpretation && globalMessages.length > 0 && renderInitialResponses(), selectedConversation && renderConversation(), !selectedConversation && currentInterpretation && renderInterpretationChat(), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: handleSendMessage,\n        disabled: isLoading || Object.keys(personas).length === 0,\n        placeholder: selectedConversation && currentConversation ? `${(_personas$currentConv = personas[currentConversation.persona_id]) === null || _personas$currentConv === void 0 ? void 0 : _personas$currentConv.name}에게 메시지를 보내세요...` : currentInterpretation ? `${currentInterpretation.personaName}와 대화해보세요...` : \"모든 페르소나에게 질문해보세요...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatArea, \"mOv7bv2kefqXgZgTFrd064YEgxs=\");\n_c = ChatArea;\nexport default ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useEffect","useRef","Message","MessageInput","TrainingCategoryView","PersonaAdminPanel","MainArea","ChatContent","LoadingSpinner","EmptyState","EmptyStateTitle","EmptyStateText","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatArea","selectedConversation","conversations","personas","globalMessages","isLoading","error","onSendInitialMessage","onContinueConversation","onClearError","selectedPersonaItem","onSelectPersona","onInterpretationComplete","selectedConversationItem","currentInterpretation","onInterpretationMessage","_s","_personas$currentConv","chatContentRef","currentConversation","current","scrollTop","scrollHeight","messages","handleSendMessage","message","getHeaderTitle","persona","persona_id","name","getHeaderSubtitle","length","renderInitialResponses","latestMessage","children","role","content","user_message","timestamp","showActionButtons","fileName","_jsxFileName","lineNumber","columnNumber","responses","map","response","persona_name","id","style","margin","padding","backgroundColor","borderRadius","border","textAlign","fontSize","color","marginBottom","renderConversation","index","renderInterpretationChat","personaId","undefined","personaName","renderEmptyState","Object","keys","height","borderBottom","background","onClose","ref","onSendMessage","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/ChatArea.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Conversation, Persona, GlobalMessage } from '../types';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\nimport TrainingCategoryView from './TrainingCategoryView';\nimport InterpretationView from './InterpretationView';\nimport PersonaAdminPanel from './PersonaAdminPanel';\nimport {\n  MainArea,\n  ChatHeader,\n  ChatHeaderTitle,\n  ChatContent,\n  LoadingSpinner,\n  ErrorMessage,\n  EmptyState,\n  EmptyStateTitle,\n  EmptyStateText,\n} from '../styles/GlobalStyle';\n\ninterface ChatAreaProps {\n  selectedConversation: string | null;\n  conversations: Record<string, Conversation>;\n  personas: Record<string, Persona>;\n  globalMessages: GlobalMessage[];\n  isLoading: boolean;\n  error: string | null;\n  onSendInitialMessage: (message: string) => Promise<boolean>;\n  onContinueConversation: (conversationId: string, message: string) => Promise<boolean>;\n  onClearError: () => void;\n  selectedPersonaItem?: string | null; // 훈습 모드 확인용\n  onSelectPersona?: (personaId: string) => void; // 페르소나 선택 핸들러\n  onInterpretationComplete: (personaId: string, interpretation: string) => void; // 해석 완료 핸들러\n  selectedConversationItem?: string | null; // 선택된 대화 항목\n  currentInterpretation?: {\n    personaId: string;\n    personaName: string;\n    content: string;\n    messages: Array<{\n      role: 'user' | 'assistant';\n      content: string;\n      timestamp: string;\n    }>;\n  } | null;\n  onInterpretationMessage: (message: string) => Promise<boolean>; // 해석 채팅 메시지 핸들러\n}\n\nconst ChatArea: React.FC<ChatAreaProps> = ({\n  selectedConversation,\n  conversations,\n  personas,\n  globalMessages,\n  isLoading,\n  error,\n  onSendInitialMessage,\n  onContinueConversation,\n  onClearError,\n  selectedPersonaItem,\n  onSelectPersona,\n  onInterpretationComplete,\n  selectedConversationItem,\n  currentInterpretation,\n  onInterpretationMessage,\n}) => {\n  const chatContentRef = useRef<HTMLDivElement>(null);\n  const currentConversation = selectedConversation ? conversations[selectedConversation] : null;\n\n  // 메시지가 추가될 때마다 스크롤을 맨 아래로\n  useEffect(() => {\n    if (chatContentRef.current) {\n      chatContentRef.current.scrollTop = chatContentRef.current.scrollHeight;\n    }\n  }, [currentConversation?.messages, globalMessages, isLoading]);\n\n  const handleSendMessage = async (message: string) => {\n    if (selectedConversation) {\n      // 기존 대화에 메시지 추가\n      return await onContinueConversation(selectedConversation, message);\n    } else if (currentInterpretation) {\n      // 해석 모드에서는 해석 관련 메시지 전송\n      return await onInterpretationMessage(message);\n    } else {\n      // 새로운 대화 시작\n      return await onSendInitialMessage(message);\n    }\n  };\n\n  const getHeaderTitle = () => {\n    if (selectedConversation && currentConversation) {\n      const persona = personas[currentConversation.persona_id];\n      return `${persona?.name}과의 대화`;\n    }\n    return '다중 페르소나 채팅';\n  };\n\n  const getHeaderSubtitle = () => {\n    if (selectedConversation && currentConversation) {\n      return `${currentConversation.messages.length}개의 메시지`;\n    }\n    return '모든 페르소나와 대화하거나 개별 페르소나를 선택하세요';\n  };\n\n  const renderInitialResponses = () => {\n    if (!globalMessages.length) return null;\n    \n    const latestMessage = globalMessages[globalMessages.length - 1];\n    \n    return (\n      <div>\n        {/* 사용자 질문 */}\n        <Message\n          message={{\n            role: 'user',\n            content: latestMessage.user_message,\n            timestamp: latestMessage.timestamp,\n          }}\n          personas={personas}\n          showActionButtons={false}\n        />\n        \n        {/* 모든 페르소나 응답 */}\n        {latestMessage.responses.map((response) => (\n          <Message\n            key={`${latestMessage.id}_${response.persona_id}`}\n            message={{\n              role: 'assistant',\n              content: response.content,\n              timestamp: response.timestamp,\n              persona_id: response.persona_id,\n              persona_name: response.persona_name,\n            }}\n            personas={personas}\n            showActionButtons={true}\n          />\n        ))}\n        \n        <div style={{\n          margin: '20px 0',\n          padding: '16px',\n          backgroundColor: '#f8f8f8',\n          borderRadius: '8px',\n          border: 'none',\n          textAlign: 'center',\n        }}>\n          <div style={{ fontSize: '14px', color: '#666', marginBottom: '8px' }}>\n            💡 각 페르소나와 개별적으로 대화를 이어가려면\n          </div>\n          <div style={{ fontSize: '13px', color: '#888' }}>\n            왼쪽 사이드바에서 페르소나를 선택하거나, 특정 대화를 선택하세요\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderConversation = () => {\n    if (!currentConversation) return null;\n\n    return currentConversation.messages.map((message, index) => (\n      <Message\n        key={`${currentConversation.id}_${index}`}\n        message={message}\n        personas={personas}\n        showActionButtons={message.role === 'assistant'}\n      />\n    ));\n  };\n\n  const renderInterpretationChat = () => {\n    if (!currentInterpretation) return null;\n\n    return currentInterpretation.messages.map((message, index) => (\n      <Message\n        key={`interpretation_${index}`}\n        message={{\n          ...message,\n          persona_id: message.role === 'assistant' ? currentInterpretation.personaId : undefined,\n          persona_name: message.role === 'assistant' ? currentInterpretation.personaName : undefined,\n        }}\n        personas={personas}\n        showActionButtons={message.role === 'assistant'}\n      />\n    ));\n  };\n\n  const renderEmptyState = () => (\n    <EmptyState>\n      <EmptyStateTitle>새로운 대화를 시작해보세요!</EmptyStateTitle>\n      <EmptyStateText>\n        {Object.keys(personas).length > 0 ? (\n          <>\n            아래에 질문을 입력하면 {Object.keys(personas).length}개의 페르소나가<br />\n            각각 다른 관점에서 답변해드립니다.\n          </>\n        ) : (\n          '페르소나 정보를 불러오는 중입니다...'\n        )}\n      </EmptyStateText>\n    </EmptyState>\n  );\n\n  return (\n    <MainArea>\n      {/* 메인 영역 헤더 - 사이드바와 높이 맞춤 (80px) - 빈 공간 */}\n          <div style={{ \n        height: '80px',\n        borderBottom: '1px solid #ddd',\n        background: 'white',\n          }}>\n        {/* 빈 헤더 공간 */}\n          </div>\n\n      {/* 훈습 모드일 때 카테고리 뷰 표시 */}\n      {selectedPersonaItem === 'training' ? (\n        <TrainingCategoryView\n          personas={personas}\n          onSelectPersona={onSelectPersona || (() => {})}\n          onInterpretationComplete={onInterpretationComplete}\n        />\n      ) : selectedPersonaItem === 'admin' ? (\n        <PersonaAdminPanel \n          onClose={() => {\n            // 관리 모드 종료 시 PersonaSidebar로 돌아가기\n            if (onSelectPersona) {\n              onSelectPersona(''); // 빈 값으로 설정하여 PersonaSidebar의 selectedItem을 null로 만듦\n            }\n          }}\n        />\n      ) : (\n        <>\n      <ChatContent ref={chatContentRef}>\n        {/* {error && (\n          <ErrorMessage onClick={onClearError}>\n            {error} (클릭하여 닫기)\n          </ErrorMessage>\n        )} */}\n\n            {!selectedConversation && !currentInterpretation && globalMessages.length === 0 && renderEmptyState()}\n            {!selectedConversation && !currentInterpretation && globalMessages.length > 0 && renderInitialResponses()}\n        {selectedConversation && renderConversation()}\n            {!selectedConversation && currentInterpretation && renderInterpretationChat()}\n\n        {isLoading && <LoadingSpinner />}\n      </ChatContent>\n\n      <MessageInput\n        onSendMessage={handleSendMessage}\n        disabled={isLoading || Object.keys(personas).length === 0}\n        placeholder={\n          selectedConversation && currentConversation\n            ? `${personas[currentConversation.persona_id]?.name}에게 메시지를 보내세요...`\n                : currentInterpretation\n                ? `${currentInterpretation.personaName}와 대화해보세요...`\n            : \"모든 페르소나에게 질문해보세요...\"\n        }\n      />\n        </>\n      )}\n    </MainArea>\n  );\n};\n\nexport default ChatArea; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}