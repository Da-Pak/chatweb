{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\ConversationSidebar.tsx\";\nimport React from 'react';\nimport { Sidebar, SidebarContent, SidebarToggleButton, ConversationMenuItem } from '../styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle\n}) => {\n  const menuItems = [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"250px\",\n    isCollapsed: isCollapsed,\n    variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle,\n      children: isCollapsed ? '▷' : '◁'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      isCollapsed: isCollapsed,\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ConversationMenuItem, {\n        isSelected: selectedItem === item.id,\n        onClick: () => onSelectItem(item.id),\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c;\n$RefreshReg$(_c, \"ConversationSidebar\");","map":{"version":3,"names":["React","Sidebar","SidebarContent","SidebarToggleButton","ConversationMenuItem","jsxDEV","_jsxDEV","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","menuItems","id","name","width","variant","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","isSelected","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/ConversationSidebar.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarToggleButton,\r\n  ConversationMenuItem,\r\n} from '../styles/GlobalStyle';\r\n\r\ninterface ConversationSidebarProps {\r\n  selectedItem: string | null;\r\n  onSelectItem: (itemId: string | null) => void;\r\n  isCollapsed?: boolean;\r\n  onToggle?: () => void;\r\n}\r\n\r\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\r\n  selectedItem,\r\n  onSelectItem,\r\n  isCollapsed = false,\r\n  onToggle,\r\n}) => {\r\n  const menuItems = [\r\n    { id: 'interpretation', name: '해석' },\r\n    { id: 'proceed', name: '나아가기' },\r\n    { id: 'sentence', name: '문장' },\r\n    { id: 'interaction_history', name: '상호작용 기록' },\r\n  ];\r\n\r\n  return (\r\n    <Sidebar width=\"250px\" isCollapsed={isCollapsed} variant=\"conversation\">\r\n      {onToggle && (\r\n        <SidebarToggleButton onClick={onToggle}>\r\n          {isCollapsed ? '▷' : '◁'}\r\n        </SidebarToggleButton>\r\n      )}\r\n\r\n      <SidebarContent isCollapsed={isCollapsed}>\r\n        {menuItems.map((item) => (\r\n          <ConversationMenuItem\r\n            key={item.id}\r\n            isSelected={selectedItem === item.id}\r\n            onClick={() => onSelectItem(item.id)}\r\n          >\r\n            {item.name}\r\n          </ConversationMenuItem>\r\n        ))}\r\n      </SidebarContent>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default ConversationSidebar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,OAAO,EACPC,cAAc,EACdC,mBAAmB,EACnBC,oBAAoB,QACf,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS/B,MAAMC,mBAAuD,GAAGA,CAAC;EAC/DC,YAAY;EACZC,YAAY;EACZC,WAAW,GAAG,KAAK;EACnBC;AACF,CAAC,KAAK;EACJ,MAAMC,SAAS,GAAG,CAChB;IAAEC,EAAE,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAK,CAAC,EACpC;IAAED,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC/B;IAAED,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC9B;IAAED,EAAE,EAAE,qBAAqB;IAAEC,IAAI,EAAE;EAAU,CAAC,CAC/C;EAED,oBACER,OAAA,CAACL,OAAO;IAACc,KAAK,EAAC,OAAO;IAACL,WAAW,EAAEA,WAAY;IAACM,OAAO,EAAC,cAAc;IAAAC,QAAA,GACpEN,QAAQ,iBACPL,OAAA,CAACH,mBAAmB;MAACe,OAAO,EAAEP,QAAS;MAAAM,QAAA,EACpCP,WAAW,GAAG,GAAG,GAAG;IAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACtB,eAEDhB,OAAA,CAACJ,cAAc;MAACQ,WAAW,EAAEA,WAAY;MAAAO,QAAA,EACtCL,SAAS,CAACW,GAAG,CAAEC,IAAI,iBAClBlB,OAAA,CAACF,oBAAoB;QAEnBqB,UAAU,EAAEjB,YAAY,KAAKgB,IAAI,CAACX,EAAG;QACrCK,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACe,IAAI,CAACX,EAAE,CAAE;QAAAI,QAAA,EAEpCO,IAAI,CAACV;MAAI,GAJLU,IAAI,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKQ,CACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAACI,EAAA,GAlCInB,mBAAuD;AAoC7D,eAAeA,mBAAmB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}