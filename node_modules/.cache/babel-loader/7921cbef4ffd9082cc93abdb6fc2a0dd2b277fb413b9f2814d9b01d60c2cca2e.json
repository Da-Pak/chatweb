{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\vault\\\\components\\\\MemoVaultView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi } from '../../training/api/sentenceApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8f9fa;\n`;\n_c = Container;\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = Header;\nconst FilterDropdownButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n_c3 = FilterDropdownButton;\nconst FilterDropdownMenu = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n_c4 = FilterDropdownMenu;\nconst FilterDropdownItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n_c5 = FilterDropdownItem;\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c6 = FilterContainer;\nconst NavigationButton = styled.button`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border: 1px solid #dee2e6;\n  background: #fff;\n  color: #333;\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s;\n  \n  &:hover:not(:disabled) {\n    background: #f8f9fa;\n    border-color: #adb5bd;\n  }\n`;\n_c7 = NavigationButton;\nconst ResetButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  border: 1px solid #dc3545;\n  background: #fff;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.2s;\n  \n  &:hover {\n    background: #dc3545;\n    color: #fff;\n  }\n`;\n_c8 = ResetButton;\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 0;\n  overflow-y: auto;\n`;\n_c9 = ContentArea;\nconst MemoGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 16px;\n`;\n_c0 = MemoGrid;\nconst MemoContainer = styled.div`\n  position: relative;\n`;\n_c1 = MemoContainer;\nconst MemoRow = styled.div`\n  width: 100%;\n  background: ${props => props.$isHighlighted ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'};\n  border: 1px solid ${props => props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: ${props => props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    background: ${props => props.$isHighlighted ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)' : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'};\n  }\n  \n  ${props => props.$isPinned && `\n    background: ${props.$isHighlighted ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'};\n    border-color: ${props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: ${props.$isHighlighted ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)' : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'};\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: ${props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    }\n  `}\n`;\n_c10 = MemoRow;\nconst MemoContent = styled.div`\n  flex: 1;\n  padding-bottom: 50px; // 하단 메타 정보를 위한 공간\n`;\n_c11 = MemoContent;\nconst UserMemoContent = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 600;\n  margin-bottom: 8px;\n`;\n_c12 = UserMemoContent;\nconst SentenceContent = styled.div`\n  font-size: 13px;\n  color: #666;\n  line-height: 1.4;\n  padding-top: 8px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  word-break: break-word;\n  \n  &::before {\n    content: \"↘︎ \";\n    color: #999;\n    font-weight: bold;\n  }\n`;\n_c13 = SentenceContent;\nconst StatusIndicators = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 40px;\n  display: flex;\n  gap: 4px;\n  z-index: 1;\n`;\n_c14 = StatusIndicators;\nconst StatusIndicator = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  color: white;\n  font-weight: bold;\n  background: ${props => {\n  if (props.$type === 'highlight') {\n    return props.$color === 'yellow' ? '#ffc107' : props.$color === 'green' ? '#28a745' : props.$color === 'blue' ? '#007bff' : '#ffc107';\n  }\n  return '#6c757d'; // 메모 색상\n}};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  \n  &::before {\n    content: ${props => props.$type === 'highlight' ? '\"H\"' : '\"M\"'};\n  }\n`;\n_c15 = StatusIndicator;\nconst MemoMeta = styled.div`\n  position: absolute;\n  bottom: 8px;\n  left: 20px;\n  right: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n`;\n_c16 = MemoMeta;\nconst ThreadTypeLabel = styled.span`\n  background: rgba(0, 0, 0, 0.1);\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  font-size: 11px;\n`;\n_c17 = ThreadTypeLabel;\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n  font-size: 11px;\n`;\n_c18 = DateLabel;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n_c19 = EmptyState;\nconst ContextMenuContainer = styled.div`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n_c20 = ContextMenuContainer;\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n_c21 = ContextMenuItem;\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n_c22 = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n_c23 = ModalContent;\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n_c24 = ModalTitle;\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n_c25 = ModalMessage;\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n_c26 = ModalButtons;\nconst ModalButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n_c27 = ModalButton;\nconst MemoVaultView = ({\n  personas,\n  onNavigateToThread\n}) => {\n  _s();\n  const [memos, setMemos] = useState([]);\n  const [filteredMemos, setFilteredMemos] = useState([]);\n  const [currentFilter, setCurrentFilter] = useState('전체');\n  const [loading, setLoading] = useState(true);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState(['전체', '해석', '나아가기', '문장', '언어화']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n  useEffect(() => {\n    loadMemos();\n  }, []);\n  useEffect(() => {\n    applyFilter();\n  }, [memos, currentFilter]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = event => {\n      const target = event.target;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n  const loadMemos = async () => {\n    try {\n      setLoading(true);\n      const data = await sentenceApi.getVaultMemos();\n      setMemos(data);\n\n      // 필터 옵션에 페르소나들 추가\n      const personaNames = Object.values(personas).map(p => p.name);\n      setFilterOptions(['전체', '해석', '나아가기', '문장', '언어화', ...personaNames]);\n    } catch (error) {\n      console.error('메모 저장고 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applyFilter = () => {\n    let filtered = [...memos];\n    if (currentFilter !== '전체') {\n      if (currentFilter === '해석') {\n        filtered = filtered.filter(m => m.source_thread_type === 'interpretation');\n      } else if (currentFilter === '나아가기') {\n        filtered = filtered.filter(m => m.source_thread_type === 'proceed');\n      } else if (currentFilter === '문장') {\n        filtered = filtered.filter(m => m.source_thread_type === 'sentence');\n      } else if (currentFilter === '언어화') {\n        filtered = filtered.filter(m => m.source_thread_type === 'verbalization');\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(m => {\n            var _m$source_message_id;\n            return m.tags.includes(personaId) || ((_m$source_message_id = m.source_message_id) === null || _m$source_message_id === void 0 ? void 0 : _m$source_message_id.includes(personaId));\n          });\n        }\n      }\n    }\n\n    // 날짜순 정렬 (최신순)\n    filtered.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    setFilteredMemos(filtered);\n  };\n  const handleFilterChange = filter => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n  const handleNavigateFilter = direction => {\n    const newIndex = direction === 'prev' ? Math.max(0, currentFilterIndex - 1) : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n  const handleResetData = async () => {\n    if (window.confirm('모든 메모와 저장고 데이터를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.')) {\n      try {\n        await sentenceApi.resetDevData();\n        await loadMemos(); // 목록 새로고침\n        alert('데이터가 리셋되었습니다.');\n      } catch (error) {\n        console.error('데이터 리셋 실패:', error);\n        alert('데이터 리셋에 실패했습니다.');\n      }\n    }\n  };\n  const handleMemoClick = (e, memo) => {\n    e.preventDefault();\n    if (e.type === 'contextmenu') {\n      setContextMenu({\n        x: e.pageX,\n        y: e.pageY,\n        memo\n      });\n      return;\n    }\n\n    // 일반 클릭 시 상호작용 확인 모달\n    setConfirmationModal({\n      type: 'interact',\n      memo\n    });\n  };\n  const handleContextMenuAction = async (action, memo) => {\n    setContextMenu(null);\n    if (action === 'interact') {\n      setConfirmationModal({\n        type: 'interact',\n        memo\n      });\n    } else if (action === 'delete') {\n      setConfirmationModal({\n        type: 'delete',\n        memo\n      });\n    }\n  };\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    try {\n      if (confirmationModal.type === 'interact') {\n        const response = await sentenceApi.interactWithVaultMemo(confirmationModal.memo.id);\n        if (response.success && response.source_thread_id && response.source_thread_type) {\n          // 원본 스레드로 이동하면서 상호작용 메시지 전달\n          onNavigateToThread(response.source_thread_id, response.source_thread_type, response.interaction_message);\n        }\n      } else if (confirmationModal.type === 'delete') {\n        await sentenceApi.deleteVaultMemo(confirmationModal.memo.id);\n        await loadMemos(); // 목록 새로고침\n      }\n    } catch (error) {\n      console.error('메모 액션 실패:', error);\n    } finally {\n      setConfirmationModal(null);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getThreadTypeLabel = threadType => {\n    switch (threadType) {\n      case 'interpretation':\n        return '해석';\n      case 'proceed':\n        return '나아가기';\n      case 'sentence':\n        return '문장';\n      case 'verbalization':\n        return '언어화';\n      default:\n        return threadType || '알수없음';\n    }\n  };\n  const getPersonaName = memo => {\n    // source_message_id에서 페르소나 ID 추출 시도\n    if (memo.source_message_id) {\n      const parts = memo.source_message_id.split('_');\n      if (parts.length > 1) {\n        const personaId = parts[1];\n        const persona = personas[personaId];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n\n    // tags에서 페르소나 찾기 (thread_type이 아닌 것들만)\n    const excludeTypes = ['interpretation', 'proceed', 'sentence', 'verbalization'];\n    for (const tag of memo.tags) {\n      if (!excludeTypes.includes(tag)) {\n        const persona = personas[tag];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n\n    // 언어화 특별 처리\n    if (memo.source_message_id === 'verbalization_chat' || memo.source_thread_type === 'verbalization' || memo.tags.includes('verbalization')) {\n      return '언어화';\n    }\n    return '알수없음';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '60px 20px',\n          color: '#6c757d'\n        },\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('prev'),\n        disabled: currentFilterIndex === 0,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n        className: \"filter-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(FilterDropdownButton, {\n          $isOpen: showFilterDropdown,\n          onClick: toggleFilterDropdown,\n          children: [currentFilter, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterDropdownMenu, {\n          $isOpen: showFilterDropdown,\n          children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(FilterDropdownItem, {\n            $isSelected: option === currentFilter,\n            onClick: () => handleFilterChange(option),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('next'),\n        disabled: currentFilterIndex === filterOptions.length - 1,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n        onClick: handleResetData,\n        children: \"\\uD83D\\uDD04 \\uB370\\uC774\\uD130 \\uB9AC\\uC14B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: filteredMemos.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"\\uC800\\uC7A5\\uB41C \\uBA54\\uBAA8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: \"\\uD6C8\\uC2B5\\uC774\\uB098 \\uC5B8\\uC5B4\\uD654 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBA54\\uBAA8\\uB97C \\uC0DD\\uC131\\uD558\\uBA74 \\uC790\\uB3D9\\uC73C\\uB85C \\uC800\\uC7A5\\uB429\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MemoGrid, {\n        children: filteredMemos.map(memo => /*#__PURE__*/_jsxDEV(MemoContainer, {\n          children: /*#__PURE__*/_jsxDEV(MemoRow, {\n            $isHighlighted: true,\n            onClick: e => handleMemoClick(e, memo),\n            onContextMenu: e => handleMemoClick(e, memo),\n            children: [/*#__PURE__*/_jsxDEV(MemoContent, {\n              children: [/*#__PURE__*/_jsxDEV(UserMemoContent, {\n                children: memo.memo_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(SentenceContent, {\n                children: memo.sentence_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StatusIndicators, {\n              children: /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                $type: \"memo\",\n                title: \"\\uBA54\\uBAA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MemoMeta, {\n              children: [/*#__PURE__*/_jsxDEV(ThreadTypeLabel, {\n                children: [getPersonaName(memo), \" - \", getThreadTypeLabel(memo.source_thread_type)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DateLabel, {\n                children: formatDate(memo.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 17\n          }, this)\n        }, memo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenuContainer, {\n      $x: contextMenu.x,\n      $y: contextMenu.y,\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('interact', contextMenu.memo),\n        children: \"\\uD83D\\uDD04 \\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('delete', contextMenu.memo),\n        children: \"\\uD83D\\uDDD1\\uFE0F \\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 9\n    }, this), confirmationModal && /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClick: () => setConfirmationModal(null),\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: confirmationModal.type === 'interact' ? '메모 상호작용' : '메모 삭제'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalMessage, {\n          children: confirmationModal.type === 'interact' ? `이 메모와 상호작용하시겠습니까? 원본 위치로 이동하여 \"${confirmationModal.memo.sentence_content} - ${confirmationModal.memo.memo_content}\" 형식으로 입력창에 삽입됩니다.` : '이 메모를 삭제하시겠습니까? 삭제된 메모는 복구할 수 없습니다.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"secondary\",\n            onClick: () => setConfirmationModal(null),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"primary\",\n            onClick: handleConfirmAction,\n            children: confirmationModal.type === 'interact' ? '상호작용' : '삭제'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 667,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoVaultView, \"mWUiw76yBpeFxS2ZNH2TkpL/y5w=\");\n_c28 = MemoVaultView;\nexport default MemoVaultView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FilterDropdownButton\");\n$RefreshReg$(_c4, \"FilterDropdownMenu\");\n$RefreshReg$(_c5, \"FilterDropdownItem\");\n$RefreshReg$(_c6, \"FilterContainer\");\n$RefreshReg$(_c7, \"NavigationButton\");\n$RefreshReg$(_c8, \"ResetButton\");\n$RefreshReg$(_c9, \"ContentArea\");\n$RefreshReg$(_c0, \"MemoGrid\");\n$RefreshReg$(_c1, \"MemoContainer\");\n$RefreshReg$(_c10, \"MemoRow\");\n$RefreshReg$(_c11, \"MemoContent\");\n$RefreshReg$(_c12, \"UserMemoContent\");\n$RefreshReg$(_c13, \"SentenceContent\");\n$RefreshReg$(_c14, \"StatusIndicators\");\n$RefreshReg$(_c15, \"StatusIndicator\");\n$RefreshReg$(_c16, \"MemoMeta\");\n$RefreshReg$(_c17, \"ThreadTypeLabel\");\n$RefreshReg$(_c18, \"DateLabel\");\n$RefreshReg$(_c19, \"EmptyState\");\n$RefreshReg$(_c20, \"ContextMenuContainer\");\n$RefreshReg$(_c21, \"ContextMenuItem\");\n$RefreshReg$(_c22, \"ModalOverlay\");\n$RefreshReg$(_c23, \"ModalContent\");\n$RefreshReg$(_c24, \"ModalTitle\");\n$RefreshReg$(_c25, \"ModalMessage\");\n$RefreshReg$(_c26, \"ModalButtons\");\n$RefreshReg$(_c27, \"ModalButton\");\n$RefreshReg$(_c28, \"MemoVaultView\");","map":{"version":3,"names":["React","useState","useEffect","styled","sentenceApi","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","FilterDropdownButton","button","props","$isOpen","_c3","FilterDropdownMenu","_c4","FilterDropdownItem","$isSelected","_c5","FilterContainer","_c6","NavigationButton","disabled","_c7","ResetButton","_c8","ContentArea","_c9","MemoGrid","_c0","MemoContainer","_c1","MemoRow","$isHighlighted","$isPinned","_c10","MemoContent","_c11","UserMemoContent","_c12","SentenceContent","_c13","StatusIndicators","_c14","StatusIndicator","$type","$color","_c15","MemoMeta","_c16","ThreadTypeLabel","span","_c17","DateLabel","_c18","EmptyState","_c19","ContextMenuContainer","$y","$x","_c20","ContextMenuItem","_c21","ModalOverlay","_c22","ModalContent","_c23","ModalTitle","h3","_c24","ModalMessage","p","_c25","ModalButtons","_c26","ModalButton","$variant","_c27","MemoVaultView","personas","onNavigateToThread","_s","memos","setMemos","filteredMemos","setFilteredMemos","currentFilter","setCurrentFilter","loading","setLoading","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","showFilterDropdown","setShowFilterDropdown","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadMemos","applyFilter","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","data","getVaultMemos","personaNames","Object","values","map","name","error","console","filtered","filter","m","source_thread_type","personaId","keys","find","id","_m$source_message_id","tags","includes","source_message_id","sort","a","b","Date","created_at","getTime","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","toggleFilterDropdown","handleResetData","window","confirm","resetDevData","alert","handleMemoClick","e","memo","preventDefault","type","x","pageX","y","pageY","handleContextMenuAction","action","handleConfirmAction","response","interactWithVaultMemo","success","source_thread_id","interaction_message","deleteVaultMemo","formatDate","dateString","date","toLocaleDateString","month","day","hour","minute","getThreadTypeLabel","threadType","getPersonaName","parts","split","persona","excludeTypes","tag","children","style","textAlign","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","option","onContextMenu","memo_content","sentence_content","title","stopPropagation","_c28","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/vault/components/MemoVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, MemoVaultItem } from '../../training/api/sentenceApi';\nimport { Persona } from '../../shared/types';\n\ninterface MemoVaultViewProps {\n  personas: Record<string, Persona>;\n  onNavigateToThread: (threadId: string, threadType: string, interactionMessage?: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  memo: MemoVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'delete';\n  memo: MemoVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8f9fa;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterDropdownButton = styled.button<{ $isOpen: boolean }>`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n\nconst FilterDropdownMenu = styled.div<{ $isOpen: boolean }>`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n\nconst FilterDropdownItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst NavigationButton = styled.button<{ disabled?: boolean }>`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border: 1px solid #dee2e6;\n  background: #fff;\n  color: #333;\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s;\n  \n  &:hover:not(:disabled) {\n    background: #f8f9fa;\n    border-color: #adb5bd;\n  }\n`;\n\nconst ResetButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  border: 1px solid #dc3545;\n  background: #fff;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.2s;\n  \n  &:hover {\n    background: #dc3545;\n    color: #fff;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 0;\n  overflow-y: auto;\n`;\n\nconst MemoGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 16px;\n`;\n\nconst MemoContainer = styled.div`\n  position: relative;\n`;\n\nconst MemoRow = styled.div<{ $isPinned?: boolean; $isHighlighted?: boolean }>`\n  width: 100%;\n  background: ${props => props.$isHighlighted \n    ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' \n    : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'\n  };\n  border: 1px solid ${props => props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: ${props => props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    background: ${props => props.$isHighlighted\n      ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)'\n      : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'\n    };\n  }\n  \n  ${props => props.$isPinned && `\n    background: ${props.$isHighlighted \n      ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' \n      : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'\n    };\n    border-color: ${props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: ${props.$isHighlighted\n        ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)'\n        : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'\n      };\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: ${props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    }\n  `}\n`;\n\nconst MemoContent = styled.div`\n  flex: 1;\n  padding-bottom: 50px; // 하단 메타 정보를 위한 공간\n`;\n\nconst UserMemoContent = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 600;\n  margin-bottom: 8px;\n`;\n\nconst SentenceContent = styled.div`\n  font-size: 13px;\n  color: #666;\n  line-height: 1.4;\n  padding-top: 8px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  word-break: break-word;\n  \n  &::before {\n    content: \"↘︎ \";\n    color: #999;\n    font-weight: bold;\n  }\n`;\n\nconst StatusIndicators = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 40px;\n  display: flex;\n  gap: 4px;\n  z-index: 1;\n`;\n\nconst StatusIndicator = styled.div<{ $type: 'highlight' | 'memo'; $color?: string }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  color: white;\n  font-weight: bold;\n  background: ${props => {\n    if (props.$type === 'highlight') {\n      return props.$color === 'yellow' ? '#ffc107' : \n             props.$color === 'green' ? '#28a745' :\n             props.$color === 'blue' ? '#007bff' : '#ffc107';\n    }\n    return '#6c757d'; // 메모 색상\n  }};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  \n  &::before {\n    content: ${props => props.$type === 'highlight' ? '\"H\"' : '\"M\"'};\n  }\n`;\n\nconst MemoMeta = styled.div`\n  position: absolute;\n  bottom: 8px;\n  left: 20px;\n  right: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n`;\n\nconst ThreadTypeLabel = styled.span`\n  background: rgba(0, 0, 0, 0.1);\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  font-size: 11px;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n  font-size: 11px;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst MemoVaultView: React.FC<MemoVaultViewProps> = ({\n  personas,\n  onNavigateToThread\n}) => {\n  const [memos, setMemos] = useState<MemoVaultItem[]>([]);\n  const [filteredMemos, setFilteredMemos] = useState<MemoVaultItem[]>([]);\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n  \n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '해석', '나아가기', '문장', '언어화']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  useEffect(() => {\n    loadMemos();\n  }, []);\n\n  useEffect(() => {\n    applyFilter();\n  }, [memos, currentFilter]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  const loadMemos = async () => {\n    try {\n      setLoading(true);\n      const data = await sentenceApi.getVaultMemos();\n      setMemos(data);\n      \n      // 필터 옵션에 페르소나들 추가\n      const personaNames = Object.values(personas).map(p => p.name);\n      setFilterOptions(['전체', '해석', '나아가기', '문장', '언어화', ...personaNames]);\n    } catch (error) {\n      console.error('메모 저장고 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilter = () => {\n    let filtered = [...memos];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '해석') {\n        filtered = filtered.filter(m => m.source_thread_type === 'interpretation');\n      } else if (currentFilter === '나아가기') {\n        filtered = filtered.filter(m => m.source_thread_type === 'proceed');\n      } else if (currentFilter === '문장') {\n        filtered = filtered.filter(m => m.source_thread_type === 'sentence');\n      } else if (currentFilter === '언어화') {\n        filtered = filtered.filter(m => m.source_thread_type === 'verbalization');\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(m => m.tags.includes(personaId) || m.source_message_id?.includes(personaId));\n        }\n      }\n    }\n\n    // 날짜순 정렬 (최신순)\n    filtered.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n    setFilteredMemos(filtered);\n  };\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n\n  const handleResetData = async () => {\n    if (window.confirm('모든 메모와 저장고 데이터를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.')) {\n      try {\n        await sentenceApi.resetDevData();\n        await loadMemos(); // 목록 새로고침\n        alert('데이터가 리셋되었습니다.');\n      } catch (error) {\n        console.error('데이터 리셋 실패:', error);\n        alert('데이터 리셋에 실패했습니다.');\n      }\n    }\n  };\n\n  const handleMemoClick = (e: React.MouseEvent, memo: MemoVaultItem) => {\n    e.preventDefault();\n    \n    if (e.type === 'contextmenu') {\n      setContextMenu({\n        x: e.pageX,\n        y: e.pageY,\n        memo\n      });\n      return;\n    }\n\n    // 일반 클릭 시 상호작용 확인 모달\n    setConfirmationModal({\n      type: 'interact',\n      memo\n    });\n  };\n\n  const handleContextMenuAction = async (action: 'interact' | 'delete', memo: MemoVaultItem) => {\n    setContextMenu(null);\n    \n    if (action === 'interact') {\n      setConfirmationModal({\n        type: 'interact',\n        memo\n      });\n    } else if (action === 'delete') {\n      setConfirmationModal({\n        type: 'delete',\n        memo\n      });\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n\n    try {\n      if (confirmationModal.type === 'interact') {\n        const response = await sentenceApi.interactWithVaultMemo(confirmationModal.memo.id);\n        \n        if (response.success && response.source_thread_id && response.source_thread_type) {\n          // 원본 스레드로 이동하면서 상호작용 메시지 전달\n          onNavigateToThread(\n            response.source_thread_id,\n            response.source_thread_type,\n            response.interaction_message\n          );\n        }\n      } else if (confirmationModal.type === 'delete') {\n        await sentenceApi.deleteVaultMemo(confirmationModal.memo.id);\n        await loadMemos(); // 목록 새로고침\n      }\n    } catch (error) {\n      console.error('메모 액션 실패:', error);\n    } finally {\n      setConfirmationModal(null);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getThreadTypeLabel = (threadType?: string) => {\n    switch (threadType) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      case 'verbalization': return '언어화';\n      default: return threadType || '알수없음';\n    }\n  };\n\n  const getPersonaName = (memo: MemoVaultItem) => {\n    // source_message_id에서 페르소나 ID 추출 시도\n    if (memo.source_message_id) {\n      const parts = memo.source_message_id.split('_');\n      if (parts.length > 1) {\n        const personaId = parts[1];\n        const persona = personas[personaId];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n    \n    // tags에서 페르소나 찾기 (thread_type이 아닌 것들만)\n    const excludeTypes = ['interpretation', 'proceed', 'sentence', 'verbalization'];\n    for (const tag of memo.tags) {\n      if (!excludeTypes.includes(tag)) {\n        const persona = personas[tag];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n    \n    // 언어화 특별 처리\n    if (memo.source_message_id === 'verbalization_chat' || \n        memo.source_thread_type === 'verbalization' ||\n        memo.tags.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    return '알수없음';\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ textAlign: 'center', padding: '60px 20px', color: '#6c757d' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <FilterContainer className=\"filter-dropdown\">\n          <FilterDropdownButton\n            $isOpen={showFilterDropdown}\n            onClick={toggleFilterDropdown}\n          >\n            {currentFilter}\n            <span className=\"arrow\">▼</span>\n          </FilterDropdownButton>\n          <FilterDropdownMenu $isOpen={showFilterDropdown}>\n            {filterOptions.map(option => (\n              <FilterDropdownItem\n                key={option}\n                $isSelected={option === currentFilter}\n                onClick={() => handleFilterChange(option)}\n              >\n                {option}\n              </FilterDropdownItem>\n            ))}\n          </FilterDropdownMenu>\n        </FilterContainer>\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n        \n        <ResetButton onClick={handleResetData}>\n          🔄 데이터 리셋\n        </ResetButton>\n      </Header>\n\n      <ContentArea>\n        {filteredMemos.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 메모가 없습니다</div>\n            <div className=\"description\">\n              훈습이나 언어화 페이지에서 메모를 생성하면 자동으로 저장됩니다\n            </div>\n          </EmptyState>\n        ) : (\n          <MemoGrid>\n            {filteredMemos.map(memo => (\n              <MemoContainer key={memo.id}>\n                <MemoRow\n                  $isHighlighted={true}\n                  onClick={(e) => handleMemoClick(e, memo)}\n                  onContextMenu={(e) => handleMemoClick(e, memo)}\n                >\n                  <MemoContent>\n                    <UserMemoContent>{memo.memo_content}</UserMemoContent>\n                    \n                    <SentenceContent>\n                      {memo.sentence_content}\n                    </SentenceContent>\n                  </MemoContent>\n                  \n                  <StatusIndicators>\n                    <StatusIndicator \n                      $type=\"memo\" \n                      title=\"메모\"\n                    />\n                  </StatusIndicators>\n                  \n                  <MemoMeta>\n                    <ThreadTypeLabel>\n                      {getPersonaName(memo)} - {getThreadTypeLabel(memo.source_thread_type)}\n                    </ThreadTypeLabel>\n                    <DateLabel>\n                      {formatDate(memo.created_at)}\n                    </DateLabel>\n                  </MemoMeta>\n                </MemoRow>\n              </MemoContainer>\n            ))}\n          </MemoGrid>\n        )}\n      </ContentArea>\n\n      {/* 컨텍스트 메뉴 */}\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem\n            onClick={() => handleContextMenuAction('interact', contextMenu.memo)}\n          >\n            🔄 상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem\n            onClick={() => handleContextMenuAction('delete', contextMenu.memo)}\n          >\n            🗑️ 삭제하기\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {/* 확인 모달 */}\n      {confirmationModal && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>\n              {confirmationModal.type === 'interact' ? '메모 상호작용' : '메모 삭제'}\n            </ModalTitle>\n            <ModalMessage>\n              {confirmationModal.type === 'interact' \n                ? `이 메모와 상호작용하시겠습니까? 원본 위치로 이동하여 \"${confirmationModal.memo.sentence_content} - ${confirmationModal.memo.memo_content}\" 형식으로 입력창에 삽입됩니다.`\n                : '이 메모를 삭제하시겠습니까? 삭제된 메모는 복구할 수 없습니다.'\n              }\n            </ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                취소\n              </ModalButton>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {confirmationModal.type === 'interact' ? '상호작용' : '삭제'}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default MemoVaultView; "],"mappings":"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IAAI;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GANIF,eAAe;AAQrB,MAAMG,SAAS,GAAGrD,MAAM,CAACmD,IAAI;AAC7B;AACA;AACA;AACA,CAAC;AAACG,IAAA,GAJID,SAAS;AAMf,MAAME,UAAU,GAAGvD,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmD,IAAA,GAnBID,UAAU;AAqBhB,MAAME,oBAAoB,GAAGzD,MAAM,CAACK,GAA+B;AACnE;AACA,SAASM,KAAK,IAAIA,KAAK,CAAC+C,EAAE;AAC1B,UAAU/C,KAAK,IAAIA,KAAK,CAACgD,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIH,oBAAoB;AAa1B,MAAMI,eAAe,GAAG7D,MAAM,CAACK,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyD,IAAA,GAbID,eAAe;AAerB,MAAME,YAAY,GAAG/D,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC2D,IAAA,GAXID,YAAY;AAalB,MAAME,YAAY,GAAGjE,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6D,IAAA,GAPID,YAAY;AASlB,MAAME,UAAU,GAAGnE,MAAM,CAACoE,EAAE;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,UAAU;AAOhB,MAAMG,YAAY,GAAGtE,MAAM,CAACuE,CAAC;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,YAAY;AAOlB,MAAMG,YAAY,GAAGzE,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAACqE,IAAA,GAJID,YAAY;AAMlB,MAAME,WAAW,GAAG3E,MAAM,CAACU,MAA6C;AACx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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}