{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\vault\\\\components\\\\MemoVaultView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi } from '../../training/api/sentenceApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 스타일 컴포넌트들 (SentenceVaultView와 유사하게 구성)\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: #f8f9fa;\n`;\n_c = Container;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 24px;\n  background: white;\n  border-bottom: 1px solid #e9ecef;\n`;\n_c2 = Header;\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n  color: #2c3e50;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  \n  &::before {\n    content: '📋';\n    font-size: 28px;\n  }\n`;\n_c3 = Title;\nconst FilterSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n_c4 = FilterSection;\nconst FilterButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 20px;\n  border: 1px solid #dee2e6;\n  background: ${props => props.$isActive ? '#007bff' : 'white'};\n  color: ${props => props.$isActive ? 'white' : '#6c757d'};\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.$isActive ? '#0056b3' : '#f8f9fa'};\n    border-color: ${props => props.$isActive ? '#0056b3' : '#adb5bd'};\n  }\n`;\n_c5 = FilterButton;\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px 24px;\n  overflow-y: auto;\n`;\n_c6 = ContentArea;\nconst MemoGrid = styled.div`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n`;\n_c7 = MemoGrid;\nconst MemoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c8 = MemoContainer;\nconst MemoRow = styled.div`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 120px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  ${props => props.$isPinned && `\n    background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n    border-color: #ffc107;\n    \n    &:hover {\n      background: linear-gradient(135deg, #ffd60a 0%, #ffb300 100%);\n      border-color: #ffb300;\n    }\n  `}\n`;\n_c9 = MemoRow;\nconst MemoContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  flex: 1;\n`;\n_c0 = MemoContent;\nconst UserMemoText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #495057;\n  font-weight: 600;\n  background: rgba(108, 117, 125, 0.1);\n  padding: 8px 12px;\n  border-radius: 8px;\n  border-left: 4px solid #6c757d;\n`;\n_c1 = UserMemoText;\nconst ArrowIndicator = styled.div`\n  font-size: 16px;\n  color: #6c757d;\n  text-align: center;\n  margin: 4px 0;\n`;\n_c10 = ArrowIndicator;\nconst SentenceText = styled.div`\n  font-size: 14px;\n  line-height: 1.6;\n  color: #6c757d;\n  font-style: italic;\n  background: rgba(0, 123, 255, 0.1);\n  padding: 8px 12px;\n  border-radius: 8px;\n  border-left: 4px solid #007bff;\n`;\n_c11 = SentenceText;\nconst MemoMetaExternal = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n_c12 = MemoMetaExternal;\nconst PersonaLabel = styled.span`\n  background: #007bff;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n  font-size: 11px;\n`;\n_c13 = PersonaLabel;\nconst DateLabel = styled.span`\n  color: #6c757d;\n`;\n_c14 = DateLabel;\nconst PinIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.$isPinned ? '#ffc107' : '#e9ecef'};\n  color: ${props => props.$isPinned ? 'white' : '#6c757d'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 12px;\n  z-index: 1;\n  \n  &:hover {\n    background: ${props => props.$isPinned ? '#ffb300' : '#adb5bd'};\n    transform: scale(1.1);\n  }\n  \n  &::before {\n    content: '📌';\n  }\n`;\n_c15 = PinIcon;\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 400px;\n  color: #6c757d;\n  text-align: center;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 600;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n    color: #adb5bd;\n  }\n`;\n_c16 = EmptyState;\nconst ContextMenuContainer = styled.div`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 150px;\n  overflow: hidden;\n`;\n_c17 = ContextMenuContainer;\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  font-size: 14px;\n  color: #495057;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n_c18 = ContextMenuItem;\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n_c19 = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n_c20 = ModalContent;\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n_c21 = ModalTitle;\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n_c22 = ModalMessage;\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n_c23 = ModalButtons;\nconst ModalButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n_c24 = ModalButton;\nconst MemoVaultView = ({\n  personas,\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  _s();\n  const [memos, setMemos] = useState([]);\n  const [filteredMemos, setFilteredMemos] = useState([]);\n  const [currentFilter, setCurrentFilter] = useState('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedMemos, setPinnedMemos] = useState(new Set());\n  const [contextMenu, setContextMenu] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState(null);\n\n  // 필터 옵션들\n  const filterOptions = ['전체', '해석', '나아가기', '언어화'];\n  useEffect(() => {\n    loadMemos();\n  }, []);\n  useEffect(() => {\n    applyFilter();\n  }, [memos, currentFilter, pinnedMemos]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n  const loadMemos = async () => {\n    try {\n      setLoading(true);\n      const response = await sentenceApi.getMemoVault();\n      setMemos(response.memo_items);\n    } catch (error) {\n      console.error('메모 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applyFilter = () => {\n    let filtered = [...memos];\n\n    // 타입별 필터링\n    if (currentFilter !== '전체') {\n      const filterMapping = {\n        '해석': 'interpretation',\n        '나아가기': 'proceed',\n        '언어화': 'verbalization'\n      };\n      const targetType = filterMapping[currentFilter];\n      if (targetType) {\n        filtered = filtered.filter(memo => memo.thread_type === targetType);\n      }\n    }\n\n    // 핀된 메모를 상단으로\n    const pinned = filtered.filter(memo => pinnedMemos.has(memo.id));\n    const unpinned = filtered.filter(memo => !pinnedMemos.has(memo.id));\n    setFilteredMemos([...pinned, ...unpinned]);\n  };\n  const togglePin = memoId => {\n    setPinnedMemos(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(memoId)) {\n        newSet.delete(memoId);\n      } else {\n        newSet.add(memoId);\n      }\n      return newSet;\n    });\n  };\n  const getPersonaName = memo => {\n    if (memo.persona_name) return memo.persona_name;\n    if (memo.thread_type === 'verbalization') return '언어화';\n    return '알 수 없음';\n  };\n  const handleMemoClick = (event, memo) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      memo\n    });\n  };\n  const handleContextMenuAction = (action, memo) => {\n    setContextMenu(null);\n    switch (action) {\n      case 'interact':\n      case 'delete':\n        setConfirmationModal({\n          type: action,\n          memo\n        });\n        break;\n      case 'pin':\n        togglePin(memo.id);\n        break;\n    }\n  };\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    const {\n      type,\n      memo\n    } = confirmationModal;\n    try {\n      if (type === 'interact') {\n        // 상호작용 하기 - 메모 위치로 이동 후 입력창에 텍스트 입력\n        const response = await sentenceApi.navigateToMemoLocation(memo.memo_id);\n\n        // 메모 위치로 이동\n        if (memo.thread_id && memo.thread_type) {\n          onNavigateToThread(memo.thread_id, memo.thread_type);\n        } else if (memo.persona_id) {\n          onNavigateToPersona(memo.persona_id, 'sentence');\n        }\n\n        // 입력창에 텍스트 설정 (App.tsx에서 처리하도록 이벤트 발생)\n        window.dispatchEvent(new CustomEvent('setInputText', {\n          detail: response.combined_text\n        }));\n      } else if (type === 'delete') {\n        // 메모 삭제\n        await sentenceApi.deleteMemoVaultItem(memo.memo_id);\n        await loadMemos(); // 목록 새로고침\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n    } finally {\n      setConfirmationModal(null);\n    }\n  };\n  const modalContent = confirmationModal ? (() => {\n    switch (confirmationModal.type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `\"${confirmationModal.memo.memo_content}\"에 대해 상호작용하시겠습니까? 메모의 원본 위치로 이동하고 입력창에 관련 텍스트가 입력됩니다.`,\n          confirmText: '상호작용 하기',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '메모 삭제',\n          message: `\"${confirmationModal.memo.memo_content}\" 메모를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`,\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  })() : null;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"\\uBA54\\uBAA8\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uBA54\\uBAA8 \\uC800\\uC7A5\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterSection, {\n        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(FilterButton, {\n          $isActive: currentFilter === option,\n          onClick: () => setCurrentFilter(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: filteredMemos.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"\\uC800\\uC7A5\\uB41C \\uBA54\\uBAA8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: \"\\uD6C8\\uC2B5 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBA54\\uBAA8\\uB97C \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MemoGrid, {\n        children: filteredMemos.map(memo => /*#__PURE__*/_jsxDEV(MemoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MemoRow, {\n            $isPinned: pinnedMemos.has(memo.id),\n            onClick: e => handleMemoClick(e, memo),\n            children: [/*#__PURE__*/_jsxDEV(MemoContent, {\n              children: [/*#__PURE__*/_jsxDEV(UserMemoText, {\n                children: memo.memo_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ArrowIndicator, {\n                children: \"\\u2198\\uFE0E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(SentenceText, {\n                children: memo.sentence_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PinIcon, {\n              $isPinned: pinnedMemos.has(memo.id),\n              onClick: e => {\n                e.stopPropagation();\n                togglePin(memo.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MemoMetaExternal, {\n            children: [/*#__PURE__*/_jsxDEV(PersonaLabel, {\n              children: getPersonaName(memo)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DateLabel, {\n              children: new Date(memo.created_at).toLocaleDateString('ko-KR')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 17\n          }, this)]\n        }, memo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenuContainer, {\n      $x: contextMenu.x,\n      $y: contextMenu.y,\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('interact', contextMenu.memo),\n        children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('pin', contextMenu.memo),\n        children: pinnedMemos.has(contextMenu.memo.id) ? '고정 해제' : '고정'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('delete', contextMenu.memo),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 9\n    }, this), confirmationModal && modalContent && /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClick: () => setConfirmationModal(null),\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: modalContent.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalMessage, {\n          children: modalContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"secondary\",\n            onClick: () => setConfirmationModal(null),\n            children: modalContent.cancelText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"primary\",\n            onClick: handleConfirmAction,\n            children: modalContent.confirmText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 530,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoVaultView, \"jpS/YVHttHl4KSAoUbSGerRIgy8=\");\n_c25 = MemoVaultView;\nexport default MemoVaultView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"FilterSection\");\n$RefreshReg$(_c5, \"FilterButton\");\n$RefreshReg$(_c6, \"ContentArea\");\n$RefreshReg$(_c7, \"MemoGrid\");\n$RefreshReg$(_c8, \"MemoContainer\");\n$RefreshReg$(_c9, \"MemoRow\");\n$RefreshReg$(_c0, \"MemoContent\");\n$RefreshReg$(_c1, \"UserMemoText\");\n$RefreshReg$(_c10, \"ArrowIndicator\");\n$RefreshReg$(_c11, \"SentenceText\");\n$RefreshReg$(_c12, \"MemoMetaExternal\");\n$RefreshReg$(_c13, \"PersonaLabel\");\n$RefreshReg$(_c14, \"DateLabel\");\n$RefreshReg$(_c15, \"PinIcon\");\n$RefreshReg$(_c16, \"EmptyState\");\n$RefreshReg$(_c17, \"ContextMenuContainer\");\n$RefreshReg$(_c18, \"ContextMenuItem\");\n$RefreshReg$(_c19, \"ModalOverlay\");\n$RefreshReg$(_c20, \"ModalContent\");\n$RefreshReg$(_c21, \"ModalTitle\");\n$RefreshReg$(_c22, \"ModalMessage\");\n$RefreshReg$(_c23, \"ModalButtons\");\n$RefreshReg$(_c24, \"ModalButton\");\n$RefreshReg$(_c25, \"MemoVaultView\");","map":{"version":3,"names":["React","useState","useEffect","styled","sentenceApi","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","Title","h2","_c3","FilterSection","_c4","FilterButton","button","props","$isActive","_c5","ContentArea","_c6","MemoGrid","_c7","MemoContainer","_c8","MemoRow","$isPinned","_c9","MemoContent","_c0","UserMemoText","_c1","ArrowIndicator","_c10","SentenceText","_c11","MemoMetaExternal","_c12","PersonaLabel","span","_c13","DateLabel","_c14","PinIcon","_c15","EmptyState","_c16","ContextMenuContainer","$y","$x","_c17","ContextMenuItem","_c18","ModalOverlay","_c19","ModalContent","_c20","ModalTitle","h3","_c21","ModalMessage","p","_c22","ModalButtons","_c23","ModalButton","$variant","_c24","MemoVaultView","personas","onNavigateToPersona","onNavigateToThread","onNavigateToPersonaWithSentence","_s","memos","setMemos","filteredMemos","setFilteredMemos","currentFilter","setCurrentFilter","loading","setLoading","pinnedMemos","setPinnedMemos","Set","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","filterOptions","loadMemos","applyFilter","handleClickOutside","document","addEventListener","removeEventListener","response","getMemoVault","memo_items","error","console","filtered","filterMapping","targetType","filter","memo","thread_type","pinned","has","id","unpinned","togglePin","memoId","prev","newSet","delete","add","getPersonaName","persona_name","handleMemoClick","event","preventDefault","stopPropagation","x","clientX","y","clientY","handleContextMenuAction","action","type","handleConfirmAction","navigateToMemoLocation","memo_id","thread_id","persona_id","window","dispatchEvent","CustomEvent","detail","combined_text","deleteMemoVaultItem","modalContent","title","message","memo_content","confirmText","cancelText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","length","e","sentence_content","Date","created_at","toLocaleDateString","_c25","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/vault/components/MemoVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { sentenceApi, MemoVaultItem } from '../../training/api/sentenceApi';\r\n\r\ninterface Persona {\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  prompt: string;\r\n  category: string;\r\n  subcategory: string;\r\n}\r\n\r\ninterface MemoVaultViewProps {\r\n  personas: Record<string, Persona>;\r\n  onNavigateToPersona: (personaId: string, mode: 'sentence') => void;\r\n  onNavigateToThread: (threadId: string, threadType: string) => void;\r\n  onNavigateToPersonaWithSentence?: (personaId: string, mode: 'sentence', selectedSentence: string) => void;\r\n}\r\n\r\ninterface ContextMenu {\r\n  x: number;\r\n  y: number;\r\n  memo: MemoVaultItem;\r\n}\r\n\r\ninterface ConfirmationModalData {\r\n  type: 'interact' | 'delete';\r\n  memo: MemoVaultItem;\r\n}\r\n\r\n// 스타일 컴포넌트들 (SentenceVaultView와 유사하게 구성)\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background: #f8f9fa;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 24px;\r\n  background: white;\r\n  border-bottom: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  \r\n  &::before {\r\n    content: '📋';\r\n    font-size: 28px;\r\n  }\r\n`;\r\n\r\nconst FilterSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n`;\r\n\r\nconst FilterButton = styled.button<{ $isActive: boolean }>`\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  border: 1px solid #dee2e6;\r\n  background: ${props => props.$isActive ? '#007bff' : 'white'};\r\n  color: ${props => props.$isActive ? 'white' : '#6c757d'};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.$isActive ? '#0056b3' : '#f8f9fa'};\r\n    border-color: ${props => props.$isActive ? '#0056b3' : '#adb5bd'};\r\n  }\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  flex: 1;\r\n  padding: 20px 24px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst MemoGrid = styled.div`\r\n  display: grid;\r\n  gap: 16px;\r\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n`;\r\n\r\nconst MemoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst MemoRow = styled.div<{ $isPinned: boolean }>`\r\n  width: 100%;\r\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 16px;\r\n  padding: 20px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all 0.2s ease;\r\n  min-height: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    transform: translateY(-1px);\r\n    border-color: #adb5bd;\r\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\r\n  }\r\n  \r\n  ${props => props.$isPinned && `\r\n    background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\r\n    border-color: #ffc107;\r\n    \r\n    &:hover {\r\n      background: linear-gradient(135deg, #ffd60a 0%, #ffb300 100%);\r\n      border-color: #ffb300;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst MemoContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  flex: 1;\r\n`;\r\n\r\nconst UserMemoText = styled.div`\r\n  font-size: 15px;\r\n  line-height: 1.6;\r\n  color: #495057;\r\n  font-weight: 600;\r\n  background: rgba(108, 117, 125, 0.1);\r\n  padding: 8px 12px;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #6c757d;\r\n`;\r\n\r\nconst ArrowIndicator = styled.div`\r\n  font-size: 16px;\r\n  color: #6c757d;\r\n  text-align: center;\r\n  margin: 4px 0;\r\n`;\r\n\r\nconst SentenceText = styled.div`\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n  background: rgba(0, 123, 255, 0.1);\r\n  padding: 8px 12px;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #007bff;\r\n`;\r\n\r\nconst MemoMetaExternal = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  color: #6c757d;\r\n  gap: 8px;\r\n`;\r\n\r\nconst PersonaLabel = styled.span`\r\n  background: #007bff;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-weight: 500;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst DateLabel = styled.span`\r\n  color: #6c757d;\r\n`;\r\n\r\nconst PinIcon = styled.div<{ $isPinned: boolean }>`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: ${props => props.$isPinned ? '#ffc107' : '#e9ecef'};\r\n  color: ${props => props.$isPinned ? 'white' : '#6c757d'};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  \r\n  &:hover {\r\n    background: ${props => props.$isPinned ? '#ffb300' : '#adb5bd'};\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  &::before {\r\n    content: '📌';\r\n  }\r\n`;\r\n\r\nconst EmptyState = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 400px;\r\n  color: #6c757d;\r\n  text-align: center;\r\n  \r\n  .icon {\r\n    font-size: 64px;\r\n    margin-bottom: 16px;\r\n  }\r\n  \r\n  .title {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .description {\r\n    font-size: 14px;\r\n    color: #adb5bd;\r\n  }\r\n`;\r\n\r\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\r\n  position: fixed;\r\n  top: ${props => props.$y}px;\r\n  left: ${props => props.$x}px;\r\n  background: white;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  z-index: 1000;\r\n  min-width: 150px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ContextMenuItem = styled.div`\r\n  padding: 12px 16px;\r\n  font-size: 14px;\r\n  color: #495057;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: #f8f9fa;\r\n  }\r\n  \r\n  &:not(:last-child) {\r\n    border-bottom: 1px solid #f1f3f4;\r\n  }\r\n`;\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 2000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  max-width: 400px;\r\n  width: 90%;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst ModalTitle = styled.h3`\r\n  margin: 0 0 16px 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst ModalMessage = styled.p`\r\n  margin: 0 0 24px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst ModalButtons = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: 1px solid;\r\n  \r\n  ${props => props.$variant === 'primary' ? `\r\n    background: #007bff;\r\n    color: white;\r\n    border-color: #007bff;\r\n    \r\n    &:hover {\r\n      background: #0056b3;\r\n      border-color: #0056b3;\r\n    }\r\n  ` : `\r\n    background: white;\r\n    color: #6c757d;\r\n    border-color: #dee2e6;\r\n    \r\n    &:hover {\r\n      background: #f8f9fa;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst MemoVaultView: React.FC<MemoVaultViewProps> = ({\r\n  personas,\r\n  onNavigateToPersona,\r\n  onNavigateToThread,\r\n  onNavigateToPersonaWithSentence\r\n}) => {\r\n  const [memos, setMemos] = useState<MemoVaultItem[]>([]);\r\n  const [filteredMemos, setFilteredMemos] = useState<MemoVaultItem[]>([]);\r\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\r\n  const [loading, setLoading] = useState(true);\r\n  const [pinnedMemos, setPinnedMemos] = useState<Set<string>>(new Set());\r\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\r\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\r\n\r\n  // 필터 옵션들\r\n  const filterOptions = ['전체', '해석', '나아가기', '언어화'];\r\n\r\n  useEffect(() => {\r\n    loadMemos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applyFilter();\r\n  }, [memos, currentFilter, pinnedMemos]);\r\n\r\n  // 컨텍스트 메뉴 외부 클릭 감지\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setContextMenu(null);\r\n    };\r\n\r\n    if (contextMenu) {\r\n      document.addEventListener('click', handleClickOutside);\r\n      return () => document.removeEventListener('click', handleClickOutside);\r\n    }\r\n  }, [contextMenu]);\r\n\r\n  const loadMemos = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await sentenceApi.getMemoVault();\r\n      setMemos(response.memo_items);\r\n    } catch (error) {\r\n      console.error('메모 로딩 실패:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilter = () => {\r\n    let filtered = [...memos];\r\n\r\n    // 타입별 필터링\r\n    if (currentFilter !== '전체') {\r\n      const filterMapping: Record<string, string> = {\r\n        '해석': 'interpretation',\r\n        '나아가기': 'proceed',\r\n        '언어화': 'verbalization'\r\n      };\r\n      \r\n      const targetType = filterMapping[currentFilter];\r\n      if (targetType) {\r\n        filtered = filtered.filter(memo => memo.thread_type === targetType);\r\n      }\r\n    }\r\n\r\n    // 핀된 메모를 상단으로\r\n    const pinned = filtered.filter(memo => pinnedMemos.has(memo.id));\r\n    const unpinned = filtered.filter(memo => !pinnedMemos.has(memo.id));\r\n    \r\n    setFilteredMemos([...pinned, ...unpinned]);\r\n  };\r\n\r\n  const togglePin = (memoId: string) => {\r\n    setPinnedMemos(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(memoId)) {\r\n        newSet.delete(memoId);\r\n      } else {\r\n        newSet.add(memoId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const getPersonaName = (memo: MemoVaultItem): string => {\r\n    if (memo.persona_name) return memo.persona_name;\r\n    if (memo.thread_type === 'verbalization') return '언어화';\r\n    return '알 수 없음';\r\n  };\r\n\r\n  const handleMemoClick = (event: React.MouseEvent, memo: MemoVaultItem) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    setContextMenu({\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n      memo\r\n    });\r\n  };\r\n\r\n  const handleContextMenuAction = (action: string, memo: MemoVaultItem) => {\r\n    setContextMenu(null);\r\n    \r\n    switch (action) {\r\n      case 'interact':\r\n      case 'delete':\r\n        setConfirmationModal({ type: action as any, memo });\r\n        break;\r\n      case 'pin':\r\n        togglePin(memo.id);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleConfirmAction = async () => {\r\n    if (!confirmationModal) return;\r\n\r\n    const { type, memo } = confirmationModal;\r\n\r\n    try {\r\n      if (type === 'interact') {\r\n        // 상호작용 하기 - 메모 위치로 이동 후 입력창에 텍스트 입력\r\n        const response = await sentenceApi.navigateToMemoLocation(memo.memo_id);\r\n        \r\n        // 메모 위치로 이동\r\n        if (memo.thread_id && memo.thread_type) {\r\n          onNavigateToThread(memo.thread_id, memo.thread_type);\r\n        } else if (memo.persona_id) {\r\n          onNavigateToPersona(memo.persona_id, 'sentence');\r\n        }\r\n        \r\n        // 입력창에 텍스트 설정 (App.tsx에서 처리하도록 이벤트 발생)\r\n        window.dispatchEvent(new CustomEvent('setInputText', { \r\n          detail: response.combined_text \r\n        }));\r\n        \r\n      } else if (type === 'delete') {\r\n        // 메모 삭제\r\n        await sentenceApi.deleteMemoVaultItem(memo.memo_id);\r\n        await loadMemos(); // 목록 새로고침\r\n      }\r\n    } catch (error) {\r\n      console.error('액션 실행 실패:', error);\r\n    } finally {\r\n      setConfirmationModal(null);\r\n    }\r\n  };\r\n\r\n  const modalContent = confirmationModal ? (() => {\r\n    switch (confirmationModal.type) {\r\n      case 'interact':\r\n        return {\r\n          title: '상호작용 하기',\r\n          message: `\"${confirmationModal.memo.memo_content}\"에 대해 상호작용하시겠습니까? 메모의 원본 위치로 이동하고 입력창에 관련 텍스트가 입력됩니다.`,\r\n          confirmText: '상호작용 하기',\r\n          cancelText: '취소'\r\n        };\r\n      case 'delete':\r\n        return {\r\n          title: '메모 삭제',\r\n          message: `\"${confirmationModal.memo.memo_content}\" 메모를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`,\r\n          confirmText: '삭제',\r\n          cancelText: '취소'\r\n        };\r\n      default:\r\n        return null;\r\n    }\r\n  })() : null;\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <EmptyState>\r\n          <div className=\"icon\">⏳</div>\r\n          <div className=\"title\">메모를 불러오는 중...</div>\r\n        </EmptyState>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>메모 저장고</Title>\r\n        <FilterSection>\r\n          {filterOptions.map(option => (\r\n            <FilterButton\r\n              key={option}\r\n              $isActive={currentFilter === option}\r\n              onClick={() => setCurrentFilter(option)}\r\n            >\r\n              {option}\r\n            </FilterButton>\r\n          ))}\r\n        </FilterSection>\r\n      </Header>\r\n\r\n      <ContentArea>\r\n        {filteredMemos.length === 0 ? (\r\n          <EmptyState>\r\n            <div className=\"icon\">📝</div>\r\n            <div className=\"title\">저장된 메모가 없습니다</div>\r\n            <div className=\"description\">\r\n              훈습 페이지에서 메모를 추가해보세요\r\n            </div>\r\n          </EmptyState>\r\n        ) : (\r\n          <MemoGrid>\r\n            {filteredMemos.map(memo => (\r\n              <MemoContainer key={memo.id}>\r\n                <MemoRow\r\n                  $isPinned={pinnedMemos.has(memo.id)}\r\n                  onClick={(e) => handleMemoClick(e, memo)}\r\n                >\r\n                  <MemoContent>\r\n                    <UserMemoText>{memo.memo_content}</UserMemoText>\r\n                    <ArrowIndicator>↘︎</ArrowIndicator>\r\n                    <SentenceText>{memo.sentence_content}</SentenceText>\r\n                  </MemoContent>\r\n                  \r\n                  <PinIcon\r\n                    $isPinned={pinnedMemos.has(memo.id)}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      togglePin(memo.id);\r\n                    }}\r\n                  />\r\n                </MemoRow>\r\n                <MemoMetaExternal>\r\n                  <PersonaLabel>{getPersonaName(memo)}</PersonaLabel>\r\n                  <DateLabel>{new Date(memo.created_at).toLocaleDateString('ko-KR')}</DateLabel>\r\n                </MemoMetaExternal>\r\n              </MemoContainer>\r\n            ))}\r\n          </MemoGrid>\r\n        )}\r\n      </ContentArea>\r\n\r\n      {/* 컨텍스트 메뉴 */}\r\n      {contextMenu && (\r\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\r\n          <ContextMenuItem onClick={() => handleContextMenuAction('interact', contextMenu.memo)}>\r\n            상호작용 하기\r\n          </ContextMenuItem>\r\n          <ContextMenuItem onClick={() => handleContextMenuAction('pin', contextMenu.memo)}>\r\n            {pinnedMemos.has(contextMenu.memo.id) ? '고정 해제' : '고정'}\r\n          </ContextMenuItem>\r\n          <ContextMenuItem onClick={() => handleContextMenuAction('delete', contextMenu.memo)}>\r\n            삭제\r\n          </ContextMenuItem>\r\n        </ContextMenuContainer>\r\n      )}\r\n\r\n      {/* 확인 모달 */}\r\n      {confirmationModal && modalContent && (\r\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\r\n          <ModalContent onClick={(e) => e.stopPropagation()}>\r\n            <ModalTitle>{modalContent.title}</ModalTitle>\r\n            <ModalMessage>{modalContent.message}</ModalMessage>\r\n            <ModalButtons>\r\n              <ModalButton \r\n                $variant=\"secondary\" \r\n                onClick={() => setConfirmationModal(null)}\r\n              >\r\n                {modalContent.cancelText}\r\n              </ModalButton>\r\n              <ModalButton \r\n                $variant=\"primary\" \r\n                onClick={handleConfirmAction}\r\n              >\r\n                {modalContent.confirmText}\r\n              </ModalButton>\r\n            </ModalButtons>\r\n          </ModalContent>\r\n        </ModalOverlay>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MemoVaultView; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAuB,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA6B5E;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,SAAS;AAOf,MAAMG,MAAM,GAAGP,MAAM,CAACK,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,MAAM;AASZ,MAAME,KAAK,GAAGT,MAAM,CAACU,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,KAAK;AAeX,MAAMG,aAAa,GAAGZ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAJID,aAAa;AAMnB,MAAME,YAAY,GAAGd,MAAM,CAACe,MAA8B;AAC1D;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,OAAO;AAC9D,WAAWD,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,OAAO,GAAG,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBD,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,SAAS;AAClE,oBAAoBD,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,SAAS;AACpE;AACA,CAAC;AAACC,GAAA,GAfIJ,YAAY;AAiBlB,MAAMK,WAAW,GAAGnB,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAACe,GAAA,GAJID,WAAW;AAMjB,MAAME,QAAQ,GAAGrB,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GAJID,QAAQ;AAMd,MAAME,aAAa,GAAGvB,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GAJID,aAAa;AAMnB,MAAME,OAAO,GAAGzB,MAAM,CAACK,GAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIW,KAAK,IAAIA,KAAK,CAACU,SAAS,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AAACC,GAAA,GA9BIF,OAAO;AAgCb,MAAMG,WAAW,GAAG5B,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACwB,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAG9B,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,GAAA,GATID,YAAY;AAWlB,MAAME,cAAc,GAAGhC,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAAC4B,IAAA,GALID,cAAc;AAOpB,MAAME,YAAY,GAAGlC,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,IAAA,GATID,YAAY;AAWlB,MAAME,gBAAgB,GAAGpC,MAAM,CAACK,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GAPID,gBAAgB;AAStB,MAAME,YAAY,GAAGtC,MAAM,CAACuC,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAPIF,YAAY;AASlB,MAAMG,SAAS,GAAGzC,MAAM,CAACuC,IAAI;AAC7B;AACA,CAAC;AAACG,IAAA,GAFID,SAAS;AAIf,MAAME,OAAO,GAAG3C,MAAM,CAACK,GAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBW,KAAK,IAAIA,KAAK,CAACU,SAAS,GAAG,SAAS,GAAG,SAAS;AAChE,WAAWV,KAAK,IAAIA,KAAK,CAACU,SAAS,GAAG,OAAO,GAAG,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBV,KAAK,IAAIA,KAAK,CAACU,SAAS,GAAG,SAAS,GAAG,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkB,IAAA,GAzBID,OAAO;AA2Bb,MAAME,UAAU,GAAG7C,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,IAAA,GAxBID,UAAU;AA0BhB,MAAME,oBAAoB,GAAG/C,MAAM,CAACK,GAA+B;AACnE;AACA,SAASW,KAAK,IAAIA,KAAK,CAACgC,EAAE;AAC1B,UAAUhC,KAAK,IAAIA,KAAK,CAACiC,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIH,oBAAoB;AAa1B,MAAMI,eAAe,GAAGnD,MAAM,CAACK,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+C,IAAA,GAdID,eAAe;AAgBrB,MAAME,YAAY,GAAGrD,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiD,IAAA,GAXID,YAAY;AAalB,MAAME,YAAY,GAAGvD,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmD,IAAA,GAPID,YAAY;AASlB,MAAME,UAAU,GAAGzD,MAAM,CAAC0D,EAAE;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,UAAU;AAOhB,MAAMG,YAAY,GAAG5D,MAAM,CAAC6D,CAAC;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,YAAY;AAOlB,MAAMG,YAAY,GAAG/D,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAAC2D,IAAA,GAJID,YAAY;AAMlB,MAAME,WAAW,GAAGjE,MAAM,CAACe,MAA6C;AACxE;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}