{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\qa\\\\components\\\\QAPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { keyframes, css } from 'styled-components';\nimport { qaApi } from '../api/qaApi';\nimport { useVoiceToText } from '../hooks/useVoiceToText';\n\n// Animations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n`;\n\n// Styled Components\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: #f0f2f5;\n  padding: 20px;\n  animation: ${fadeIn} 0.8s ease-out;\n`;\n_c = PageContainer;\nconst QAContainer = styled.div`\n  width: 100%;\n  max-width: 700px;\n  height: 100%;\n  max-height: 800px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n_c2 = QAContainer;\nconst QuestionBox = styled.div`\n  padding: 40px;\n  border-radius: 20px;\n  background: linear-gradient(to bottom, #ffffff, #e9ecef);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  margin-bottom: 20px;\n  animation: ${fadeIn} 0.5s ease-out forwards;\n  \n  h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #343a40;\n    line-height: 1.6;\n  }\n`;\n_c3 = QuestionBox;\nconst InputSection = styled.div`\n  width: 100%;\n`;\n_c4 = InputSection;\nconst InputBox = styled.div`\n  position: relative;\n  padding: 20px;\n  border-radius: 20px;\n  background: linear-gradient(to bottom, #ffffff, #e9ecef);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n`;\n_c5 = InputBox;\nconst StyledTextarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  border: none;\n  background-color: transparent;\n  resize: none;\n  font-size: 1rem;\n  font-family: inherit;\n  color: #495057;\n  padding-right: 50px; // for microphone button\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c6 = StyledTextarea;\nconst MicButton = styled.button`\n  position: absolute;\n  right: 20px;\n  bottom: 65px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5rem;\n  color: #868e96;\n  transition: color 0.2s;\n\n  &:hover {\n    color: #495057;\n  }\n\n  // 녹음 상태에 따른 동적 스타일\n  ${({\n  $status\n}) => $status === \"recording\" && css`\n    color: #fff;\n    background-color: #e03131; // 빨간색 배경\n    animation: ${pulse} 1.5s infinite;\n  `}\n`;\n_c7 = MicButton;\nconst BottomBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n  padding: 0 10px;\n`;\n_c8 = BottomBar;\nconst CharCounter = styled.span`\n  font-size: 0.9rem;\n  color: ${props => props.hasError ? '#e03131' : '#868e96'};\n`;\n_c9 = CharCounter;\nconst SubmitButton = styled.button`\n  padding: 10px 20px;\n  border: 1px solid #343a40;\n  border-radius: 50px;\n  background-color: #fff;\n  color: #343a40;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover:not(:disabled) {\n    background-color: #343a40;\n    color: #fff;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c0 = SubmitButton;\nconst ProgressTracker = styled.div`\n  margin-top: 20px;\n  font-size: 1rem;\n  font-weight: 500;\n  color: #495057;\n`;\n_c1 = ProgressTracker;\nconst CompletionOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n\n  h1 {\n    font-size: 2rem;\n    font-weight: 600;\n    color: #fff;\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-size: 1rem;\n    font-weight: 500;\n    color: #fff;\n  }\n`;\n_c10 = CompletionOverlay;\nconst MicIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"12\",\n    cy: \"7\",\n    r: \"3\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    fill: \"none\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M9 7v6a3 3 0 0 0 6 0V7\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    fill: \"none\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M6 15a6 6 0 0 0 12 0\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    fill: \"none\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"12\",\n    y1: \"19\",\n    x2: \"12\",\n    y2: \"22\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 180,\n  columnNumber: 3\n}, this);\n_c11 = MicIcon;\nconst QAPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const [interimTranscript, setInterimTranscript] = useState('');\n  const [allAnswers, setAllAnswers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isComplete, setIsComplete] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      console.log(\"🟢 [QAPage] useEffect 시작 - 질문 데이터 로드\");\n      console.log(\"🟢 [QAPage] 현재 상태 - isLoading:\", isLoading);\n      try {\n        console.log(\"🟢 [QAPage] qaApi.getQuestions() 호출 시작\");\n        const data = await qaApi.getQuestions();\n        console.log(\"🟢 [QAPage] API 호출 완료, 받은 데이터:\", data);\n        console.log(\"🟢 [QAPage] 데이터 타입:\", typeof data);\n        console.log(\"🟢 [QAPage] 배열 여부:\", Array.isArray(data));\n        console.log(\"🟢 [QAPage] 데이터 길이:\", data === null || data === void 0 ? void 0 : data.length);\n        if (data && Array.isArray(data)) {\n          console.log(\"🟢 [QAPage] 유효한 배열 데이터\");\n          if (data.length > 0) {\n            console.log(\"🟢 [QAPage] 첫 번째 질문:\", data[0]);\n            console.log(\"🟢 [QAPage] 첫 번째 질문 키들:\", Object.keys(data[0]));\n            console.log(\"🟢 [QAPage] question_id 존재:\", 'question_id' in data[0]);\n            console.log(\"🟢 [QAPage] question_text 존재:\", 'question_text' in data[0]);\n            console.log(\"🟢 [QAPage] question_text 값:\", data[0].question_text);\n          } else {\n            console.warn(\"⚠️ [QAPage] 배열이 비어있음\");\n          }\n        } else {\n          console.error(\"❌ [QAPage] 데이터가 배열이 아님\");\n        }\n        console.log(\"🟢 [QAPage] setQuestions 호출\");\n        setQuestions(data || []);\n      } catch (error) {\n        var _error$response;\n        console.error(\"❌ [QAPage] 질문 로드 실패:\", error);\n        console.error(\"❌ [QAPage] 에러 상세:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        console.error(\"❌ [QAPage] 에러 스택:\", error.stack);\n\n        // 빈 배열로 설정하여 \"표시할 질문이 없습니다\" 메시지 표시\n        setQuestions([]);\n      } finally {\n        console.log(\"🟢 [QAPage] setIsLoading(false) 호출\");\n        setIsLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleTranscript = (transcript, isFinal) => {\n    if (isFinal) {\n      setCurrentAnswer(prev => prev + transcript + ' ');\n      setInterimTranscript('');\n    } else {\n      setInterimTranscript(transcript);\n    }\n  };\n  const {\n    status,\n    toggleRecording\n  } = useVoiceToText(handleTranscript);\n  const handleNextQuestion = async () => {\n    const newAnswer = {\n      question_id: questions[currentQuestionIndex].question_id,\n      answer: currentAnswer\n    };\n    const updatedAnswers = [...allAnswers, newAnswer];\n    setAllAnswers(updatedAnswers);\n    setCurrentAnswer('');\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // 마지막 질문, 답변 제출\n      try {\n        await qaApi.submitAnswers(updatedAnswers);\n        setIsComplete(true); // API 호출이 성공한 후에 완료 상태로 변경\n        setTimeout(() => navigate('/'), 2000); // 2초 후 메인으로 이동\n      } catch (error) {\n        console.error(\"답변 제출에 실패했습니다.\", error);\n        // 사용자에게 에러 알림 (예: alert 또는 토스트 메시지)\n        alert(\"답변 제출 중 오류가 발생했습니다. 다시 시도해주세요.\");\n        setIsComplete(false); // 오류 발생 시 완료 상태로 넘어가지 않음\n      }\n    }\n  };\n  const MIN_CHARS = 100;\n  const isSubmitDisabled = currentAnswer.length < MIN_CHARS;\n  console.log(\"🔄 [QAPage] 렌더링 시작\");\n  console.log(\"🔄 [QAPage] isLoading:\", isLoading);\n  console.log(\"🔄 [QAPage] questions 길이:\", questions.length);\n  console.log(\"🔄 [QAPage] currentQuestionIndex:\", currentQuestionIndex);\n  if (isLoading) {\n    console.log(\"🔄 [QAPage] 로딩 중 화면 표시\");\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: \"\\uC9C8\\uBB38\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    console.log(\"🔄 [QAPage] 질문 없음 화면 표시\");\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: \"\\uD45C\\uC2DC\\uD560 \\uC9C8\\uBB38\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  console.log(\"🔄 [QAPage] 현재 질문:\", currentQuestion);\n\n  // 안전성 검사: currentQuestion이 undefined이거나 question_text가 없는 경우\n  if (!currentQuestion) {\n    console.error(\"❌ [QAPage] currentQuestion이 undefined\");\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: \"\\uD604\\uC7AC \\uC9C8\\uBB38\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentQuestion.question_text) {\n    console.error(\"❌ [QAPage] question_text가 없음\");\n    console.error(\"❌ [QAPage] currentQuestion 객체:\", currentQuestion);\n    console.error(\"❌ [QAPage] currentQuestion 키들:\", Object.keys(currentQuestion));\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: \"\\uC9C8\\uBB38 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(\"🔄 [QAPage] 정상 렌더링 진행, question_text:\", currentQuestion.question_text);\n  if (isComplete) {\n    return /*#__PURE__*/_jsxDEV(CompletionOverlay, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC218\\uACE0\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC7A0\\uC2DC \\uD6C4 \\uBA54\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QAContainer, {\n      children: [/*#__PURE__*/_jsxDEV(QuestionBox, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentQuestion.question_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, currentQuestion.question_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n        children: [/*#__PURE__*/_jsxDEV(InputBox, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTextarea, {\n            placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694...\",\n            value: currentAnswer + interimTranscript,\n            onChange: e => setCurrentAnswer(e.target.value),\n            maxLength: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MicButton, {\n            status: status,\n            onClick: toggleRecording,\n            title: \"\\uC74C\\uC131\\uC73C\\uB85C \\uC785\\uB825\\uD558\\uAE30\",\n            children: /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomBar, {\n          children: [/*#__PURE__*/_jsxDEV(CharCounter, {\n            hasError: currentAnswer.length < MIN_CHARS,\n            children: [currentAnswer.length, \" / \", MIN_CHARS, \"\\uC790 \\uC774\\uC0C1\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            onClick: handleNextQuestion,\n            disabled: isSubmitDisabled,\n            children: currentQuestionIndex === questions.length - 1 ? '모든 답변 완료' : '답변 완료'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressTracker, {\n      children: [currentQuestionIndex + 1, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s(QAPage, \"5BhG4oyXsgxDEwtNsg8XwX+r9Jo=\", false, function () {\n  return [useNavigate, useVoiceToText];\n});\n_c12 = QAPage;\nexport default QAPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"QAContainer\");\n$RefreshReg$(_c3, \"QuestionBox\");\n$RefreshReg$(_c4, \"InputSection\");\n$RefreshReg$(_c5, \"InputBox\");\n$RefreshReg$(_c6, \"StyledTextarea\");\n$RefreshReg$(_c7, \"MicButton\");\n$RefreshReg$(_c8, \"BottomBar\");\n$RefreshReg$(_c9, \"CharCounter\");\n$RefreshReg$(_c0, \"SubmitButton\");\n$RefreshReg$(_c1, \"ProgressTracker\");\n$RefreshReg$(_c10, \"CompletionOverlay\");\n$RefreshReg$(_c11, \"MicIcon\");\n$RefreshReg$(_c12, \"QAPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","keyframes","css","qaApi","useVoiceToText","jsxDEV","_jsxDEV","fadeIn","pulse","PageContainer","div","_c","QAContainer","_c2","QuestionBox","_c3","InputSection","_c4","InputBox","_c5","StyledTextarea","textarea","_c6","MicButton","button","$status","_c7","BottomBar","_c8","CharCounter","span","props","hasError","_c9","SubmitButton","_c0","ProgressTracker","_c1","CompletionOverlay","_c10","MicIcon","width","height","viewBox","fill","xmlns","children","cx","cy","r","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","d","x1","y1","x2","y2","_c11","QAPage","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentAnswer","setCurrentAnswer","interimTranscript","setInterimTranscript","allAnswers","setAllAnswers","isLoading","setIsLoading","isComplete","setIsComplete","navigate","fetchQuestions","console","log","data","getQuestions","Array","isArray","length","Object","keys","question_text","warn","error","_error$response","response","message","stack","handleTranscript","transcript","isFinal","prev","status","toggleRecording","handleNextQuestion","newAnswer","question_id","answer","updatedAnswers","submitAnswers","setTimeout","alert","MIN_CHARS","isSubmitDisabled","currentQuestion","placeholder","value","onChange","e","target","maxLength","onClick","title","disabled","_c12","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/qa/components/QAPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { keyframes, css } from 'styled-components';\nimport { qaApi, QAQuestion, QASubmission } from '../api/qaApi';\nimport { useVoiceToText, RecordingStatus } from '../hooks/useVoiceToText';\n\n// Animations\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); }\n`;\n\n// Styled Components\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: #f0f2f5;\n  padding: 20px;\n  animation: ${fadeIn} 0.8s ease-out;\n`;\n\nconst QAContainer = styled.div`\n  width: 100%;\n  max-width: 700px;\n  height: 100%;\n  max-height: 800px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst QuestionBox = styled.div`\n  padding: 40px;\n  border-radius: 20px;\n  background: linear-gradient(to bottom, #ffffff, #e9ecef);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  margin-bottom: 20px;\n  animation: ${fadeIn} 0.5s ease-out forwards;\n  \n  h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #343a40;\n    line-height: 1.6;\n  }\n`;\n\nconst InputSection = styled.div`\n  width: 100%;\n`;\n\nconst InputBox = styled.div`\n  position: relative;\n  padding: 20px;\n  border-radius: 20px;\n  background: linear-gradient(to bottom, #ffffff, #e9ecef);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n`;\n\nconst StyledTextarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  border: none;\n  background-color: transparent;\n  resize: none;\n  font-size: 1rem;\n  font-family: inherit;\n  color: #495057;\n  padding-right: 50px; // for microphone button\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst MicButton = styled.button<{ $status: RecordingStatus }>`\n  position: absolute;\n  right: 20px;\n  bottom: 65px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5rem;\n  color: #868e96;\n  transition: color 0.2s;\n\n  &:hover {\n    color: #495057;\n  }\n\n  // 녹음 상태에 따른 동적 스타일\n  ${({ $status }) => $status === \"recording\" && css`\n    color: #fff;\n    background-color: #e03131; // 빨간색 배경\n    animation: ${pulse} 1.5s infinite;\n  `}\n`;\n\nconst BottomBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n  padding: 0 10px;\n`;\n\nconst CharCounter = styled.span<{ hasError: boolean }>`\n  font-size: 0.9rem;\n  color: ${props => props.hasError ? '#e03131' : '#868e96'};\n`;\n\nconst SubmitButton = styled.button`\n  padding: 10px 20px;\n  border: 1px solid #343a40;\n  border-radius: 50px;\n  background-color: #fff;\n  color: #343a40;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover:not(:disabled) {\n    background-color: #343a40;\n    color: #fff;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ProgressTracker = styled.div`\n  margin-top: 20px;\n  font-size: 1rem;\n  font-weight: 500;\n  color: #495057;\n`;\n\nconst CompletionOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n\n  h1 {\n    font-size: 2rem;\n    font-weight: 600;\n    color: #fff;\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-size: 1rem;\n    font-weight: 500;\n    color: #fff;\n  }\n`;\n\nconst MicIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"12\" cy=\"7\" r=\"3\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\"/>\n    <path d=\"M9 7v6a3 3 0 0 0 6 0V7\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\"/>\n    <path d=\"M6 15a6 6 0 0 0 12 0\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\"/>\n    <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n  </svg>\n);\n\nconst QAPage: React.FC = () => {\n  const [questions, setQuestions] = useState<QAQuestion[]>([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const [interimTranscript, setInterimTranscript] = useState('');\n  const [allAnswers, setAllAnswers] = useState<QASubmission[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isComplete, setIsComplete] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n    const fetchQuestions = async () => {\n      console.log(\"🟢 [QAPage] useEffect 시작 - 질문 데이터 로드\");\n      console.log(\"🟢 [QAPage] 현재 상태 - isLoading:\", isLoading);\n      \n      try {\n        console.log(\"🟢 [QAPage] qaApi.getQuestions() 호출 시작\");\n        const data = await qaApi.getQuestions();\n        \n        console.log(\"🟢 [QAPage] API 호출 완료, 받은 데이터:\", data);\n        console.log(\"🟢 [QAPage] 데이터 타입:\", typeof data);\n        console.log(\"🟢 [QAPage] 배열 여부:\", Array.isArray(data));\n        console.log(\"🟢 [QAPage] 데이터 길이:\", data?.length);\n        \n        if (data && Array.isArray(data)) {\n          console.log(\"🟢 [QAPage] 유효한 배열 데이터\");\n          if (data.length > 0) {\n            console.log(\"🟢 [QAPage] 첫 번째 질문:\", data[0]);\n            console.log(\"🟢 [QAPage] 첫 번째 질문 키들:\", Object.keys(data[0]));\n            console.log(\"🟢 [QAPage] question_id 존재:\", 'question_id' in data[0]);\n            console.log(\"🟢 [QAPage] question_text 존재:\", 'question_text' in data[0]);\n            console.log(\"🟢 [QAPage] question_text 값:\", data[0].question_text);\n          } else {\n            console.warn(\"⚠️ [QAPage] 배열이 비어있음\");\n          }\n        } else {\n          console.error(\"❌ [QAPage] 데이터가 배열이 아님\");\n        }\n        \n        console.log(\"🟢 [QAPage] setQuestions 호출\");\n        setQuestions(data || []);\n        \n      } catch (error: any) {\n        console.error(\"❌ [QAPage] 질문 로드 실패:\", error);\n        console.error(\"❌ [QAPage] 에러 상세:\", error.response?.data || error.message);\n        console.error(\"❌ [QAPage] 에러 스택:\", error.stack);\n        \n        // 빈 배열로 설정하여 \"표시할 질문이 없습니다\" 메시지 표시\n        setQuestions([]);\n      } finally {\n        console.log(\"🟢 [QAPage] setIsLoading(false) 호출\");\n        setIsLoading(false);\n      }\n    };\n    \n    fetchQuestions();\n  }, []);\n\n  const handleTranscript = (transcript: string, isFinal: boolean) => {\n    if (isFinal) {\n      setCurrentAnswer(prev => prev + transcript + ' ');\n      setInterimTranscript('');\n    } else {\n      setInterimTranscript(transcript);\n    }\n  };\n\n  const { status, toggleRecording } = useVoiceToText(handleTranscript);\n\n  const handleNextQuestion = async () => {\n    const newAnswer: QASubmission = {\n      question_id: questions[currentQuestionIndex].question_id,\n      answer: currentAnswer\n    };\n    const updatedAnswers = [...allAnswers, newAnswer];\n    setAllAnswers(updatedAnswers);\n    setCurrentAnswer('');\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // 마지막 질문, 답변 제출\n        try {\n        await qaApi.submitAnswers(updatedAnswers);\n        setIsComplete(true); // API 호출이 성공한 후에 완료 상태로 변경\n        setTimeout(() => navigate('/'), 2000); // 2초 후 메인으로 이동\n        } catch (error) {\n        console.error(\"답변 제출에 실패했습니다.\", error);\n        // 사용자에게 에러 알림 (예: alert 또는 토스트 메시지)\n        alert(\"답변 제출 중 오류가 발생했습니다. 다시 시도해주세요.\");\n        setIsComplete(false); // 오류 발생 시 완료 상태로 넘어가지 않음\n      }\n    }\n  };\n\n  const MIN_CHARS = 100;\n  const isSubmitDisabled = currentAnswer.length < MIN_CHARS;\n\n  console.log(\"🔄 [QAPage] 렌더링 시작\");\n  console.log(\"🔄 [QAPage] isLoading:\", isLoading);\n  console.log(\"🔄 [QAPage] questions 길이:\", questions.length);\n  console.log(\"🔄 [QAPage] currentQuestionIndex:\", currentQuestionIndex);\n\n  if (isLoading) {\n    console.log(\"🔄 [QAPage] 로딩 중 화면 표시\");\n    return <PageContainer>질문을 불러오는 중입니다...</PageContainer>;\n  }\n\n  if (questions.length === 0) {\n    console.log(\"🔄 [QAPage] 질문 없음 화면 표시\");\n    return <PageContainer>표시할 질문이 없습니다.</PageContainer>;\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n  console.log(\"🔄 [QAPage] 현재 질문:\", currentQuestion);\n  \n  // 안전성 검사: currentQuestion이 undefined이거나 question_text가 없는 경우\n  if (!currentQuestion) {\n    console.error(\"❌ [QAPage] currentQuestion이 undefined\");\n    return <PageContainer>현재 질문을 찾을 수 없습니다.</PageContainer>;\n  }\n  \n  if (!currentQuestion.question_text) {\n    console.error(\"❌ [QAPage] question_text가 없음\");\n    console.error(\"❌ [QAPage] currentQuestion 객체:\", currentQuestion);\n    console.error(\"❌ [QAPage] currentQuestion 키들:\", Object.keys(currentQuestion));\n    return <PageContainer>질문 텍스트를 불러오는 중 오류가 발생했습니다.</PageContainer>;\n  }\n\n  console.log(\"🔄 [QAPage] 정상 렌더링 진행, question_text:\", currentQuestion.question_text);\n\n  if (isComplete) {\n    return (\n      <CompletionOverlay>\n        <h1>수고하셨습니다!</h1>\n        <p>잠시 후 메인 페이지로 이동합니다.</p>\n      </CompletionOverlay>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <QAContainer>\n        <QuestionBox key={currentQuestion.question_id}>\n          <h2>{currentQuestion.question_text}</h2>\n        </QuestionBox>\n        \n        <InputSection>\n          <InputBox>\n            <StyledTextarea\n              placeholder=\"답변을 입력해주세요...\"\n              value={currentAnswer + interimTranscript}\n              onChange={(e) => setCurrentAnswer(e.target.value)}\n              maxLength={500}\n            />\n            <MicButton status={status} onClick={toggleRecording} title=\"음성으로 입력하기\">\n              <MicIcon />\n            </MicButton>\n          </InputBox>\n          <BottomBar>\n            <CharCounter hasError={currentAnswer.length < MIN_CHARS}>\n              {currentAnswer.length} / {MIN_CHARS}자 이상\n            </CharCounter>\n            <SubmitButton onClick={handleNextQuestion} disabled={isSubmitDisabled}>\n              {currentQuestionIndex === questions.length - 1 ? '모든 답변 완료' : '답변 완료'}\n            </SubmitButton>\n          </BottomBar>\n        </InputSection>\n      </QAContainer>\n      <ProgressTracker>\n        {currentQuestionIndex + 1} / {questions.length}\n      </ProgressTracker>\n    </PageContainer>\n    );\n};\n\nexport default QAPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}