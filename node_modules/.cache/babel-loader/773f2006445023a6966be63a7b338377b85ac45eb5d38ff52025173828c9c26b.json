{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work_ver2/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23;import React,{useState,useEffect,useCallback}from'react';import styled from'styled-components';import{sentenceApi}from'../../training/api/sentenceApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n\"])));const Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 20px;\\n  border-bottom: 1px solid #e9ecef;\\n  background: #fff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const FilterDropdownButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #333;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  min-width: 120px;\\n  justify-content: space-between;\\n  \\n  &:hover {\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  }\\n  \\n  .arrow {\\n    font-size: 12px;\\n    transition: transform 0.2s;\\n    transform: \",\";\\n  }\\n\"])),props=>props.$isOpen?'rotate(180deg)':'rotate(0deg)');const FilterDropdownMenu=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 100%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  z-index: 1000;\\n  max-height: 200px;\\n  overflow-y: auto;\\n  display: \",\";\\n  margin-top: 4px;\\n  min-width: 150px;\\n\"])),props=>props.$isOpen?'block':'none');const FilterDropdownItem=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  color: #333;\\n  background: \",\";\\n  font-weight: \",\";\\n  \\n  &:hover {\\n    background: #e9ecef;\\n  }\\n  \\n  &:first-child {\\n    border-radius: 8px 8px 0 0;\\n  }\\n  \\n  &:last-child {\\n    border-radius: 0 0 8px 8px;\\n  }\\n\"])),props=>props.$isSelected?'#e9ecef':'transparent',props=>props.$isSelected?'500':'normal');const FilterContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const NavigationButton=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 50%;\\n  width: 32px;\\n  height: 32px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 14px;\\n  color: #333;\\n  \\n  &:hover {\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n  }\\n\"])));const ContentArea=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 20px;\\n  overflow-y: auto;\\n  background: #ffffff;\\n\"])));const MemoGrid=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px;\\n\"])));const MemoItemWrapper=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  width: 100%;\\n\"])));const MemoContent=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n  border: 1px solid #dee2e6;\\n  border-radius: 16px;\\n  padding: 16px 20px;\\n  cursor: pointer;\\n  position: relative;\\n  transition: all 0.2s ease;\\n  min-height: 90px;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  \\n  &:hover {\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n    transform: translateY(-1px);\\n    border-color: #adb5bd;\\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\\n  }\\n\"])));const UserMemoContent=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  font-size: 15px;\\n  line-height: 1.6;\\n  color: #333;\\n  word-break: break-word;\\n  font-weight: 600;\\n\"])));const SentenceContent=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  line-height: 1.5;\\n  color: #555;\\n  word-break: break-word;\\n  font-style: italic;\\n  \\n  &::before {\\n    content: \\\"\\u2198 \\\";\\n    color: #999;\\n    font-weight: bold;\\n    margin-right: 4px;\\n  }\\n\"])));const MemoMeta=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  font-size: 12px;\\n  color: #6c757d;\\n  gap: 8px;\\n\"])));const ThreadTypeLabel=styled.span(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  background: #e9ecef;\\n  padding: 3px 8px;\\n  border-radius: 6px;\\n  font-weight: 500;\\n  color: #495057;\\n\"])));const DateLabel=styled.span(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  font-style: italic;\\n  opacity: 0.8;\\n\"])));const EmptyState=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: 60px 20px;\\n  color: #6c757d;\\n  \\n  .icon {\\n    font-size: 48px;\\n    margin-bottom: 16px;\\n  }\\n  \\n  .title {\\n    font-size: 18px;\\n    font-weight: 500;\\n    margin-bottom: 8px;\\n  }\\n  \\n  .description {\\n    font-size: 14px;\\n  }\\n\"])));const ContextMenuContainer=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: \",\"px;\\n  left: \",\"px;\\n  background: white;\\n  border: 1px solid #dee2e6;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n  z-index: 1000;\\n  min-width: 160px;\\n  overflow: hidden;\\n\"])),props=>props.$y,props=>props.$x);const ContextMenuItem=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  padding: 12px 16px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  color: #333;\\n  \\n  &:hover {\\n    background-color: #f8f9fa;\\n  }\\n  \\n  &:not(:last-child) {\\n    border-bottom: 1px solid #f1f3f4;\\n  }\\n\"])));const ModalOverlay=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 2000;\\n\"])));const ModalContent=styled.div(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 12px;\\n  padding: 24px;\\n  max-width: 400px;\\n  width: 90%;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\\n\"])));const ModalTitle=styled.h3(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  margin: 0 0 16px 0;\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #333;\\n\"])));const ModalMessage=styled.p(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  margin: 0 0 24px 0;\\n  font-size: 14px;\\n  color: #666;\\n  line-height: 1.5;\\n\"])));const ModalButtons=styled.div(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 12px;\\n  justify-content: space-between;\\n\"])));const ModalButton=styled.button(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  padding: 10px 20px;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: 1px solid;\\n  \\n  \",\"\\n\"])),props=>props.$variant==='primary'?\"\\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\\n    color: #495057;\\n    border-color: #adb5bd;\\n    \\n    &:hover {\\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\\n      border-color: #6c757d;\\n    }\\n  \":\"\\n    background: white;\\n    color: #6c757d;\\n    border-color: #dee2e6;\\n    \\n    &:hover {\\n      background: #f8f9fa;\\n    }\\n  \");const MemoVaultView=_ref=>{let{personas,onNavigateToThread}=_ref;const[memos,setMemos]=useState([]);const[filteredMemos,setFilteredMemos]=useState([]);const[currentFilter,setCurrentFilter]=useState('전체');const[loading,setLoading]=useState(true);const[contextMenu,setContextMenu]=useState(null);const[confirmationModal,setConfirmationModal]=useState(null);const[showFilterDropdown,setShowFilterDropdown]=useState(false);const[filterOptions,setFilterOptions]=useState(['전체','해석','나아가기','문장','언어화']);const[currentFilterIndex,setCurrentFilterIndex]=useState(0);const loadMemos=useCallback(async()=>{try{setLoading(true);const data=await sentenceApi.getVaultMemos();setMemos(data);const personaNames=Object.values(personas).map(p=>p.name);setFilterOptions(['전체','해석','나아가기','문장','언어화',...personaNames]);}catch(error){console.error('메모 저장고 로딩 실패:',error);}finally{setLoading(false);}},[personas]);const applyFilter=useCallback(()=>{let filtered=[...memos];if(currentFilter!=='전체'){if(currentFilter==='해석'){filtered=filtered.filter(m=>m.source_thread_type==='interpretation');}else if(currentFilter==='나아가기'){filtered=filtered.filter(m=>m.source_thread_type==='proceed');}else if(currentFilter==='문장'){filtered=filtered.filter(m=>m.source_thread_type==='sentence');}else if(currentFilter==='언어화'){filtered=filtered.filter(m=>m.source_thread_type==='verbalization');}else{const personaId=Object.keys(personas).find(id=>personas[id].name===currentFilter);if(personaId){filtered=filtered.filter(m=>{var _m$source_message_id;return m.tags.includes(personaId)||((_m$source_message_id=m.source_message_id)===null||_m$source_message_id===void 0?void 0:_m$source_message_id.includes(personaId));});}}}filtered.sort((a,b)=>new Date(b.created_at).getTime()-new Date(a.created_at).getTime());setFilteredMemos(filtered);},[memos,currentFilter,personas]);useEffect(()=>{loadMemos();},[loadMemos]);useEffect(()=>{applyFilter();},[memos,currentFilter,applyFilter]);useEffect(()=>{const handleClickOutside=event=>{const target=event.target;if(!target.closest('.filter-dropdown')){setShowFilterDropdown(false);}};if(showFilterDropdown){document.addEventListener('click',handleClickOutside);return()=>document.removeEventListener('click',handleClickOutside);}},[showFilterDropdown]);useEffect(()=>{const handleClickOutside=()=>{setContextMenu(null);};if(contextMenu){document.addEventListener('click',handleClickOutside);return()=>document.removeEventListener('click',handleClickOutside);}},[contextMenu]);const handleFilterChange=filter=>{setCurrentFilter(filter);setCurrentFilterIndex(filterOptions.indexOf(filter));setShowFilterDropdown(false);};const handleNavigateFilter=direction=>{const newIndex=direction==='prev'?Math.max(0,currentFilterIndex-1):Math.min(filterOptions.length-1,currentFilterIndex+1);setCurrentFilterIndex(newIndex);setCurrentFilter(filterOptions[newIndex]);};const toggleFilterDropdown=()=>{setShowFilterDropdown(!showFilterDropdown);};const handleMemoClick=(e,memo)=>{e.preventDefault();e.stopPropagation();setContextMenu({x:e.clientX,y:e.clientY,memo});};const handleContextMenuAction=async(action,memo)=>{setContextMenu(null);if(action==='interact'){setConfirmationModal({type:'interact',memo});}else if(action==='delete'){setConfirmationModal({type:'delete',memo});}};const handleConfirmAction=async()=>{if(!confirmationModal)return;try{if(confirmationModal.type==='interact'){const response=await sentenceApi.interactWithVaultMemo(confirmationModal.memo.id);if(response.success&&response.source_thread_id&&response.source_thread_type){const formattedMessage=\"[\".concat(confirmationModal.memo.sentence_content,\" - \").concat(confirmationModal.memo.memo_content,\" \\uC5D0 \\uB300\\uD574]\");onNavigateToThread(response.source_thread_id,response.source_thread_type,formattedMessage);}}else if(confirmationModal.type==='delete'){await sentenceApi.deleteVaultMemo(confirmationModal.memo.id);await loadMemos();}}catch(error){console.error('메모 액션 실패:',error);}finally{setConfirmationModal(null);}};const formatDate=dateString=>{const date=new Date(dateString);return date.toLocaleDateString('ko-KR',{month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};const getThreadTypeLabel=threadType=>{switch(threadType){case'interpretation':return'해석';case'proceed':return'나아가기';case'sentence':return'문장';case'verbalization':return'언어화';default:return threadType||'알수없음';}};const getPersonaName=memo=>{if(memo.source_message_id){const parts=memo.source_message_id.split('_');if(parts.length>1){let personaId=parts[1];if(personas[personaId]){return personas[personaId].name;}const matchingPersonaId=Object.keys(personas).find(id=>id.startsWith(personaId+'_'));if(matchingPersonaId){return personas[matchingPersonaId].name;}}}const excludeTypes=['interpretation','proceed','sentence','verbalization'];for(const tag of memo.tags){if(!excludeTypes.includes(tag)){if(personas[tag]){return personas[tag].name;}const matchingPersonaId=Object.keys(personas).find(id=>id.startsWith(tag+'_'));if(matchingPersonaId){return personas[matchingPersonaId].name;}}}if(memo.source_message_id==='verbalization_chat'||memo.source_thread_type==='verbalization'||memo.tags.includes('verbalization')){return'언어화';}return'알수없음';};const getFormattedSentences=memo=>{if(memo.metadata&&memo.metadata.related_sentence_contents&&Array.isArray(memo.metadata.related_sentence_contents)){const relatedSentences=memo.metadata.related_sentence_contents;if(relatedSentences.length>1){const formattedSentences=relatedSentences.map(sentence=>\"\\\"\".concat(sentence,\"\\\"\")).join(', ');return\"\\u2192 \".concat(formattedSentences);}}return memo.sentence_content;};const getModalContent=()=>{if(!confirmationModal)return null;const{type}=confirmationModal;const getSentencesForModal=memo=>{if(memo.metadata&&memo.metadata.related_sentence_contents&&Array.isArray(memo.metadata.related_sentence_contents)){const relatedSentences=memo.metadata.related_sentence_contents;if(relatedSentences.length>1){const formattedSentences=relatedSentences.map(sentence=>\"\\\"\".concat(sentence,\"\\\"\")).join(', ');return formattedSentences;}}return confirmationModal.memo.sentence_content;};switch(type){case'interact':const sentences=getSentencesForModal(confirmationModal.memo);return{title:'메모 상호작용',message:\"\\uC774 \\uBA54\\uBAA8\\uC640 \\uC0C1\\uD638\\uC791\\uC6A9\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? \\uC6D0\\uBCF8 \\uC704\\uCE58\\uB85C \\uC774\\uB3D9\\uD558\\uC5EC \\\"[\".concat(sentences,\" - \").concat(confirmationModal.memo.memo_content,\" \\uC5D0 \\uB300\\uD574]\\\" \\uD615\\uC2DD\\uC73C\\uB85C \\uC785\\uB825\\uCC3D\\uC5D0 \\uC0BD\\uC785\\uB429\\uB2C8\\uB2E4.\"),confirmText:'상호작용',cancelText:'취소'};case'delete':return{title:'메모 삭제',message:'이 메모를 삭제하시겠습니까? 삭제된 메모는 복구할 수 없습니다.',confirmText:'삭제',cancelText:'취소'};default:return null;}};if(loading){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"div\",{style:{padding:'40px',textAlign:'center'},children:\"\\uB85C\\uB529 \\uC911...\"})});}const modalContent=getModalContent();return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(NavigationButton,{onClick:()=>handleNavigateFilter('prev'),disabled:currentFilterIndex===0,children:\"\\u2039\"}),/*#__PURE__*/_jsxs(FilterContainer,{className:\"filter-dropdown\",children:[/*#__PURE__*/_jsxs(FilterDropdownButton,{$isOpen:showFilterDropdown,onClick:toggleFilterDropdown,children:[currentFilter,/*#__PURE__*/_jsx(\"span\",{className:\"arrow\",children:\"\\u25BC\"})]}),/*#__PURE__*/_jsx(FilterDropdownMenu,{$isOpen:showFilterDropdown,children:filterOptions.map(option=>/*#__PURE__*/_jsx(FilterDropdownItem,{$isSelected:option===currentFilter,onClick:()=>handleFilterChange(option),children:option},option))})]}),/*#__PURE__*/_jsx(NavigationButton,{onClick:()=>handleNavigateFilter('next'),disabled:currentFilterIndex===filterOptions.length-1,children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(ContentArea,{children:filteredMemos.length===0?/*#__PURE__*/_jsxs(EmptyState,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"\\uC800\\uC7A5\\uB41C \\uBA54\\uBAA8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:\"\\uD6C8\\uC2B5\\uC774\\uB098 \\uC5B8\\uC5B4\\uD654 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBA54\\uBAA8\\uB97C \\uC0DD\\uC131\\uD558\\uBA74 \\uC790\\uB3D9\\uC73C\\uB85C \\uC800\\uC7A5\\uB429\\uB2C8\\uB2E4\"})]}):/*#__PURE__*/_jsx(MemoGrid,{children:filteredMemos.map(memo=>/*#__PURE__*/_jsxs(MemoItemWrapper,{children:[/*#__PURE__*/_jsxs(MemoContent,{onClick:e=>handleMemoClick(e,memo),children:[/*#__PURE__*/_jsx(UserMemoContent,{children:memo.memo_content}),/*#__PURE__*/_jsx(SentenceContent,{children:getFormattedSentences(memo)})]}),/*#__PURE__*/_jsxs(MemoMeta,{children:[/*#__PURE__*/_jsxs(ThreadTypeLabel,{children:[getPersonaName(memo),\" - \",getThreadTypeLabel(memo.source_thread_type)]}),/*#__PURE__*/_jsx(DateLabel,{children:formatDate(memo.created_at)})]})]},memo.id))})}),contextMenu&&/*#__PURE__*/_jsxs(ContextMenuContainer,{$x:contextMenu.x,$y:contextMenu.y,children:[/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('interact',contextMenu.memo),children:\"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"}),/*#__PURE__*/_jsx(ContextMenuItem,{onClick:()=>handleContextMenuAction('delete',contextMenu.memo),children:\"\\uC0AD\\uC81C\"})]}),confirmationModal&&modalContent&&/*#__PURE__*/_jsx(ModalOverlay,{onClick:()=>setConfirmationModal(null),children:/*#__PURE__*/_jsxs(ModalContent,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(ModalTitle,{children:modalContent.title}),/*#__PURE__*/_jsx(ModalMessage,{children:modalContent.message}),/*#__PURE__*/_jsxs(ModalButtons,{children:[/*#__PURE__*/_jsx(ModalButton,{$variant:\"primary\",onClick:handleConfirmAction,children:modalContent.confirmText}),/*#__PURE__*/_jsx(ModalButton,{$variant:\"secondary\",onClick:()=>setConfirmationModal(null),children:modalContent.cancelText})]})]})})]});};export default MemoVaultView;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","sentenceApi","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","FilterDropdownButton","button","_templateObject3","props","$isOpen","FilterDropdownMenu","_templateObject4","FilterDropdownItem","_templateObject5","$isSelected","FilterContainer","_templateObject6","NavigationButton","_templateObject7","ContentArea","_templateObject8","MemoGrid","_templateObject9","MemoItemWrapper","_templateObject0","MemoContent","_templateObject1","UserMemoContent","_templateObject10","SentenceContent","_templateObject11","MemoMeta","_templateObject12","ThreadTypeLabel","span","_templateObject13","DateLabel","_templateObject14","EmptyState","_templateObject15","ContextMenuContainer","_templateObject16","$y","$x","ContextMenuItem","_templateObject17","ModalOverlay","_templateObject18","ModalContent","_templateObject19","ModalTitle","h3","_templateObject20","ModalMessage","p","_templateObject21","ModalButtons","_templateObject22","ModalButton","_templateObject23","$variant","MemoVaultView","_ref","personas","onNavigateToThread","memos","setMemos","filteredMemos","setFilteredMemos","currentFilter","setCurrentFilter","loading","setLoading","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","showFilterDropdown","setShowFilterDropdown","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadMemos","data","getVaultMemos","personaNames","Object","values","map","name","error","console","applyFilter","filtered","filter","m","source_thread_type","personaId","keys","find","id","_m$source_message_id","tags","includes","source_message_id","sort","a","b","Date","created_at","getTime","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","toggleFilterDropdown","handleMemoClick","e","memo","preventDefault","stopPropagation","x","clientX","y","clientY","handleContextMenuAction","action","type","handleConfirmAction","response","interactWithVaultMemo","success","source_thread_id","formattedMessage","concat","sentence_content","memo_content","deleteVaultMemo","formatDate","dateString","date","toLocaleDateString","month","day","hour","minute","getThreadTypeLabel","threadType","getPersonaName","parts","split","matchingPersonaId","startsWith","excludeTypes","tag","getFormattedSentences","metadata","related_sentence_contents","Array","isArray","relatedSentences","formattedSentences","sentence","join","getModalContent","getSentencesForModal","sentences","title","message","confirmText","cancelText","children","style","padding","textAlign","modalContent","onClick","disabled","className","option"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/vault/components/MemoVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, MemoVaultItem } from '../../training/api/sentenceApi';\nimport { Persona } from '../../shared/types';\n\ninterface MemoVaultViewProps {\n  personas: Record<string, Persona>;\n  onNavigateToThread: (threadId: string, threadType: string, interactionMessage?: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  memo: MemoVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'delete';\n  memo: MemoVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterDropdownButton = styled.button<{ $isOpen: boolean }>`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n\nconst FilterDropdownMenu = styled.div<{ $isOpen: boolean }>`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n\nconst FilterDropdownItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n\nconst MemoGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst MemoItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n`;\n\nconst MemoContent = styled.div`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 90px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n`;\n\nconst UserMemoContent = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 600;\n`;\n\nconst SentenceContent = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n  color: #555;\n  word-break: break-word;\n  font-style: italic;\n  \n  &::before {\n    content: \"↘ \";\n    color: #999;\n    font-weight: bold;\n    margin-right: 4px;\n  }\n`;\n\nconst MemoMeta = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n\nconst ThreadTypeLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    color: #495057;\n    border-color: #adb5bd;\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      border-color: #6c757d;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst MemoVaultView: React.FC<MemoVaultViewProps> = ({\n  personas,\n  onNavigateToThread\n}) => {\n  const [memos, setMemos] = useState<MemoVaultItem[]>([]);\n  const [filteredMemos, setFilteredMemos] = useState<MemoVaultItem[]>([]);\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n  \n  const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '해석', '나아가기', '문장', '언어화']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  const loadMemos = useCallback(async () => {\n    try {\n      setLoading(true);\n      const data = await sentenceApi.getVaultMemos();\n      setMemos(data);\n      \n      const personaNames = Object.values(personas).map(p => p.name);\n      setFilterOptions(['전체', '해석', '나아가기', '문장', '언어화', ...personaNames]);\n    } catch (error) {\n      console.error('메모 저장고 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [personas]);\n\n  const applyFilter = useCallback(() => {\n    let filtered = [...memos];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '해석') {\n        filtered = filtered.filter(m => m.source_thread_type === 'interpretation');\n      } else if (currentFilter === '나아가기') {\n        filtered = filtered.filter(m => m.source_thread_type === 'proceed');\n      } else if (currentFilter === '문장') {\n        filtered = filtered.filter(m => m.source_thread_type === 'sentence');\n      } else if (currentFilter === '언어화') {\n        filtered = filtered.filter(m => m.source_thread_type === 'verbalization');\n      } else {\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(m => m.tags.includes(personaId) || m.source_message_id?.includes(personaId));\n        }\n      }\n    }\n\n    filtered.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    setFilteredMemos(filtered);\n  }, [memos, currentFilter, personas]);\n\n  useEffect(() => {\n    loadMemos();\n  }, [loadMemos]);\n\n  useEffect(() => {\n    applyFilter();\n  }, [memos, currentFilter, applyFilter]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n\n  const handleMemoClick = (e: React.MouseEvent, memo: MemoVaultItem) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    setContextMenu({\n      x: e.clientX,\n      y: e.clientY,\n      memo\n    });\n  };\n\n  const handleContextMenuAction = async (action: 'interact' | 'delete', memo: MemoVaultItem) => {\n    setContextMenu(null);\n    \n    if (action === 'interact') {\n      setConfirmationModal({\n        type: 'interact',\n        memo\n      });\n    } else if (action === 'delete') {\n      setConfirmationModal({\n        type: 'delete',\n        memo\n      });\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n\n    try {\n      if (confirmationModal.type === 'interact') {\n        const response = await sentenceApi.interactWithVaultMemo(confirmationModal.memo.id);\n        \n        if (response.success && response.source_thread_id && response.source_thread_type) {\n          const formattedMessage = `[${confirmationModal.memo.sentence_content} - ${confirmationModal.memo.memo_content} 에 대해]`;\n          \n          onNavigateToThread(\n            response.source_thread_id,\n            response.source_thread_type,\n            formattedMessage\n          );\n        }\n      } else if (confirmationModal.type === 'delete') {\n        await sentenceApi.deleteVaultMemo(confirmationModal.memo.id);\n        await loadMemos();\n      }\n    } catch (error) {\n      console.error('메모 액션 실패:', error);\n    } finally {\n      setConfirmationModal(null);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getThreadTypeLabel = (threadType?: string) => {\n    switch (threadType) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      case 'verbalization': return '언어화';\n      default: return threadType || '알수없음';\n    }\n  };\n\n  const getPersonaName = (memo: MemoVaultItem) => {\n    if (memo.source_message_id) {\n      const parts = memo.source_message_id.split('_');\n      if (parts.length > 1) {\n        let personaId = parts[1];\n        \n        if (personas[personaId]) {\n          return personas[personaId].name;\n        }\n        \n        const matchingPersonaId = Object.keys(personas).find(id => id.startsWith(personaId + '_'));\n        if (matchingPersonaId) {\n          return personas[matchingPersonaId].name;\n        }\n      }\n    }\n    \n    const excludeTypes = ['interpretation', 'proceed', 'sentence', 'verbalization'];\n    for (const tag of memo.tags) {\n      if (!excludeTypes.includes(tag)) {\n        if (personas[tag]) {\n          return personas[tag].name;\n        }\n        \n        const matchingPersonaId = Object.keys(personas).find(id => id.startsWith(tag + '_'));\n        if (matchingPersonaId) {\n          return personas[matchingPersonaId].name;\n        }\n      }\n    }\n    \n    if (memo.source_message_id === 'verbalization_chat' || \n        memo.source_thread_type === 'verbalization' ||\n        memo.tags.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    return '알수없음';\n  };\n\n  const getFormattedSentences = (memo: MemoVaultItem) => {\n    if (memo.metadata && memo.metadata.related_sentence_contents && Array.isArray(memo.metadata.related_sentence_contents)) {\n      const relatedSentences = memo.metadata.related_sentence_contents;\n      if (relatedSentences.length > 1) {\n        const formattedSentences = relatedSentences.map((sentence: string) => `\"${sentence}\"`).join(', ');\n        return `→ ${formattedSentences}`;\n      }\n    }\n    \n    return memo.sentence_content;\n  };\n\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    \n    const { type } = confirmationModal;\n    \n    const getSentencesForModal = (memo: MemoVaultItem) => {\n      if (memo.metadata && memo.metadata.related_sentence_contents && Array.isArray(memo.metadata.related_sentence_contents)) {\n        const relatedSentences = memo.metadata.related_sentence_contents;\n        if (relatedSentences.length > 1) {\n          const formattedSentences = relatedSentences.map((sentence: string) => `\"${sentence}\"`).join(', ');\n          return formattedSentences;\n        }\n      }\n      return confirmationModal.memo.sentence_content;\n    };\n    \n    switch (type) {\n      case 'interact':\n        const sentences = getSentencesForModal(confirmationModal.memo);\n        return {\n          title: '메모 상호작용',\n          message: `이 메모와 상호작용하시겠습니까? 원본 위치로 이동하여 \"[${sentences} - ${confirmationModal.memo.memo_content} 에 대해]\" 형식으로 입력창에 삽입됩니다.`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '메모 삭제',\n          message: '이 메모를 삭제하시겠습니까? 삭제된 메모는 복구할 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: '40px', textAlign: 'center' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  const modalContent = getModalContent();\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <FilterContainer className=\"filter-dropdown\">\n          <FilterDropdownButton\n            $isOpen={showFilterDropdown}\n            onClick={toggleFilterDropdown}\n          >\n            {currentFilter}\n            <span className=\"arrow\">▼</span>\n          </FilterDropdownButton>\n          <FilterDropdownMenu $isOpen={showFilterDropdown}>\n            {filterOptions.map(option => (\n              <FilterDropdownItem\n                key={option}\n                $isSelected={option === currentFilter}\n                onClick={() => handleFilterChange(option)}\n              >\n                {option}\n              </FilterDropdownItem>\n            ))}\n          </FilterDropdownMenu>\n        </FilterContainer>\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n      </Header>\n\n      <ContentArea>\n        {filteredMemos.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 메모가 없습니다</div>\n            <div className=\"description\">\n              훈습이나 언어화 페이지에서 메모를 생성하면 자동으로 저장됩니다\n            </div>\n          </EmptyState>\n        ) : (\n          <MemoGrid>\n            {filteredMemos.map(memo => (\n              <MemoItemWrapper key={memo.id}>\n                <MemoContent onClick={(e) => handleMemoClick(e, memo)}>\n                  <UserMemoContent>{memo.memo_content}</UserMemoContent>\n                  <SentenceContent>{getFormattedSentences(memo)}</SentenceContent>\n                </MemoContent>\n                <MemoMeta>\n                  <ThreadTypeLabel>\n                    {getPersonaName(memo)} - {getThreadTypeLabel(memo.source_thread_type)}\n                  </ThreadTypeLabel>\n                  <DateLabel>\n                    {formatDate(memo.created_at)}\n                  </DateLabel>\n                </MemoMeta>\n              </MemoItemWrapper>\n            ))}\n          </MemoGrid>\n        )}\n      </ContentArea>\n\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem\n            onClick={() => handleContextMenuAction('interact', contextMenu.memo)}\n          >\n            상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem\n            onClick={() => handleContextMenuAction('delete', contextMenu.memo)}\n          >\n            삭제\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {confirmationModal && modalContent && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>{modalContent.title}</ModalTitle>\n            <ModalMessage>{modalContent.message}</ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {modalContent.confirmText}\n              </ModalButton>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                {modalContent.cancelText}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default MemoVaultView; "],"mappings":"8kBAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,WAAW,KAAuB,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAmB5E,KAAM,CAAAC,SAAS,CAAGN,MAAM,CAACO,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,yEAI3B,CAED,KAAM,CAAAC,MAAM,CAAGV,MAAM,CAACO,GAAG,CAAAI,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,0KAQxB,CAED,KAAM,CAAAG,oBAAoB,CAAGZ,MAAM,CAACa,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAL,sBAAA,sfAqBzBM,KAAK,EAAIA,KAAK,CAACC,OAAO,CAAG,gBAAgB,CAAG,cAAc,CAE1E,CAED,KAAM,CAAAC,kBAAkB,CAAGjB,MAAM,CAACO,GAAG,CAAAW,gBAAA,GAAAA,gBAAA,CAAAT,sBAAA,+UAYxBM,KAAK,EAAIA,KAAK,CAACC,OAAO,CAAG,OAAO,CAAG,MAAM,CAGrD,CAED,KAAM,CAAAG,kBAAkB,CAAGnB,MAAM,CAACO,GAAG,CAAAa,gBAAA,GAAAA,gBAAA,CAAAX,sBAAA,sRAIrBM,KAAK,EAAIA,KAAK,CAACM,WAAW,CAAG,SAAS,CAAG,aAAa,CACrDN,KAAK,EAAIA,KAAK,CAACM,WAAW,CAAG,KAAK,CAAG,QAAQ,CAa7D,CAED,KAAM,CAAAC,eAAe,CAAGtB,MAAM,CAACO,GAAG,CAAAgB,gBAAA,GAAAA,gBAAA,CAAAd,sBAAA,yFAKjC,CAED,KAAM,CAAAe,gBAAgB,CAAGxB,MAAM,CAACa,MAAM,CAAAY,gBAAA,GAAAA,gBAAA,CAAAhB,sBAAA,6bAqBrC,CAED,KAAM,CAAAiB,WAAW,CAAG1B,MAAM,CAACO,GAAG,CAAAoB,gBAAA,GAAAA,gBAAA,CAAAlB,sBAAA,qFAK7B,CAED,KAAM,CAAAmB,QAAQ,CAAG5B,MAAM,CAACO,GAAG,CAAAsB,gBAAA,GAAAA,gBAAA,CAAApB,sBAAA,qEAI1B,CAED,KAAM,CAAAqB,eAAe,CAAG9B,MAAM,CAACO,GAAG,CAAAwB,gBAAA,GAAAA,gBAAA,CAAAtB,sBAAA,oFAKjC,CAED,KAAM,CAAAuB,WAAW,CAAGhC,MAAM,CAACO,GAAG,CAAA0B,gBAAA,GAAAA,gBAAA,CAAAxB,sBAAA,0gBAoB7B,CAED,KAAM,CAAAyB,eAAe,CAAGlC,MAAM,CAACO,GAAG,CAAA4B,iBAAA,GAAAA,iBAAA,CAAA1B,sBAAA,mHAMjC,CAED,KAAM,CAAA2B,eAAe,CAAGpC,MAAM,CAACO,GAAG,CAAA8B,iBAAA,GAAAA,iBAAA,CAAA5B,sBAAA,0OAajC,CAED,KAAM,CAAA6B,QAAQ,CAAGtC,MAAM,CAACO,GAAG,CAAAgC,iBAAA,GAAAA,iBAAA,CAAA9B,sBAAA,sIAO1B,CAED,KAAM,CAAA+B,eAAe,CAAGxC,MAAM,CAACyC,IAAI,CAAAC,iBAAA,GAAAA,iBAAA,CAAAjC,sBAAA,sHAMlC,CAED,KAAM,CAAAkC,SAAS,CAAG3C,MAAM,CAACyC,IAAI,CAAAG,iBAAA,GAAAA,iBAAA,CAAAnC,sBAAA,kDAG5B,CAED,KAAM,CAAAoC,UAAU,CAAG7C,MAAM,CAACO,GAAG,CAAAuC,iBAAA,GAAAA,iBAAA,CAAArC,sBAAA,2RAmB5B,CAED,KAAM,CAAAsC,oBAAoB,CAAG/C,MAAM,CAACO,GAAG,CAAAyC,iBAAA,GAAAA,iBAAA,CAAAvC,sBAAA,mPAE9BM,KAAK,EAAIA,KAAK,CAACkC,EAAE,CAChBlC,KAAK,EAAIA,KAAK,CAACmC,EAAE,CAQ1B,CAED,KAAM,CAAAC,eAAe,CAAGnD,MAAM,CAACO,GAAG,CAAA6C,iBAAA,GAAAA,iBAAA,CAAA3C,sBAAA,uNAajC,CAED,KAAM,CAAA4C,YAAY,CAAGrD,MAAM,CAACO,GAAG,CAAA+C,iBAAA,GAAAA,iBAAA,CAAA7C,sBAAA,2MAW9B,CAED,KAAM,CAAA8C,YAAY,CAAGvD,MAAM,CAACO,GAAG,CAAAiD,iBAAA,GAAAA,iBAAA,CAAA/C,sBAAA,4JAO9B,CAED,KAAM,CAAAgD,UAAU,CAAGzD,MAAM,CAAC0D,EAAE,CAAAC,iBAAA,GAAAA,iBAAA,CAAAlD,sBAAA,0FAK3B,CAED,KAAM,CAAAmD,YAAY,CAAG5D,MAAM,CAAC6D,CAAC,CAAAC,iBAAA,GAAAA,iBAAA,CAAArD,sBAAA,0FAK5B,CAED,KAAM,CAAAsD,YAAY,CAAG/D,MAAM,CAACO,GAAG,CAAAyD,iBAAA,GAAAA,iBAAA,CAAAvD,sBAAA,6EAI9B,CAED,KAAM,CAAAwD,WAAW,CAAGjE,MAAM,CAACa,MAAM,CAAAqD,iBAAA,GAAAA,iBAAA,CAAAzD,sBAAA,sJAQ7BM,KAAK,EAAIA,KAAK,CAACoD,QAAQ,GAAK,SAAS,oYAiBtC,CACF,CAED,KAAM,CAAAC,aAA2C,CAAGC,IAAA,EAG9C,IAH+C,CACnDC,QAAQ,CACRC,kBACF,CAAC,CAAAF,IAAA,CACC,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAG5E,QAAQ,CAAkB,EAAE,CAAC,CACvD,KAAM,CAAC6E,aAAa,CAAEC,gBAAgB,CAAC,CAAG9E,QAAQ,CAAkB,EAAE,CAAC,CACvE,KAAM,CAAC+E,aAAa,CAAEC,gBAAgB,CAAC,CAAGhF,QAAQ,CAAS,IAAI,CAAC,CAChE,KAAM,CAACiF,OAAO,CAAEC,UAAU,CAAC,CAAGlF,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACmF,WAAW,CAAEC,cAAc,CAAC,CAAGpF,QAAQ,CAAqB,IAAI,CAAC,CACxE,KAAM,CAACqF,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGtF,QAAQ,CAA+B,IAAI,CAAC,CAC9F,KAAM,CAACuF,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGxF,QAAQ,CAAC,KAAK,CAAC,CAEnE,KAAM,CAACyF,aAAa,CAAEC,gBAAgB,CAAC,CAAG1F,QAAQ,CAAW,CAAC,IAAI,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,KAAK,CAAC,CAAC,CAC/F,KAAM,CAAC2F,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG5F,QAAQ,CAAC,CAAC,CAAC,CAE/D,KAAM,CAAA6F,SAAS,CAAG3F,WAAW,CAAC,SAAY,CACxC,GAAI,CACFgF,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAY,IAAI,CAAG,KAAM,CAAA1F,WAAW,CAAC2F,aAAa,CAAC,CAAC,CAC9CnB,QAAQ,CAACkB,IAAI,CAAC,CAEd,KAAM,CAAAE,YAAY,CAAGC,MAAM,CAACC,MAAM,CAACzB,QAAQ,CAAC,CAAC0B,GAAG,CAACnC,CAAC,EAAIA,CAAC,CAACoC,IAAI,CAAC,CAC7DV,gBAAgB,CAAC,CAAC,IAAI,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,KAAK,CAAE,GAAGM,YAAY,CAAC,CAAC,CACtE,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CAAC,OAAS,CACRnB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACT,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAA8B,WAAW,CAAGrG,WAAW,CAAC,IAAM,CACpC,GAAI,CAAAsG,QAAQ,CAAG,CAAC,GAAG7B,KAAK,CAAC,CAEzB,GAAII,aAAa,GAAK,IAAI,CAAE,CAC1B,GAAIA,aAAa,GAAK,IAAI,CAAE,CAC1ByB,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,kBAAkB,GAAK,gBAAgB,CAAC,CAC5E,CAAC,IAAM,IAAI5B,aAAa,GAAK,MAAM,CAAE,CACnCyB,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,kBAAkB,GAAK,SAAS,CAAC,CACrE,CAAC,IAAM,IAAI5B,aAAa,GAAK,IAAI,CAAE,CACjCyB,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,kBAAkB,GAAK,UAAU,CAAC,CACtE,CAAC,IAAM,IAAI5B,aAAa,GAAK,KAAK,CAAE,CAClCyB,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,kBAAkB,GAAK,eAAe,CAAC,CAC3E,CAAC,IAAM,CACL,KAAM,CAAAC,SAAS,CAAGX,MAAM,CAACY,IAAI,CAACpC,QAAQ,CAAC,CAACqC,IAAI,CAACC,EAAE,EAAItC,QAAQ,CAACsC,EAAE,CAAC,CAACX,IAAI,GAAKrB,aAAa,CAAC,CACvF,GAAI6B,SAAS,CAAE,CACbJ,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,CAAC,OAAAM,oBAAA,OAAI,CAAAN,CAAC,CAACO,IAAI,CAACC,QAAQ,CAACN,SAAS,CAAC,IAAAI,oBAAA,CAAIN,CAAC,CAACS,iBAAiB,UAAAH,oBAAA,iBAAnBA,oBAAA,CAAqBE,QAAQ,CAACN,SAAS,CAAC,IAAC,CACzG,CACF,CACF,CAEAJ,QAAQ,CAACY,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAF,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAC5F3C,gBAAgB,CAAC0B,QAAQ,CAAC,CAC5B,CAAC,CAAE,CAAC7B,KAAK,CAAEI,aAAa,CAAEN,QAAQ,CAAC,CAAC,CAEpCxE,SAAS,CAAC,IAAM,CACd4F,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf5F,SAAS,CAAC,IAAM,CACdsG,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAAC5B,KAAK,CAAEI,aAAa,CAAEwB,WAAW,CAAC,CAAC,CAEvCtG,SAAS,CAAC,IAAM,CACd,KAAM,CAAAyH,kBAAkB,CAAIC,KAAiB,EAAK,CAChD,KAAM,CAAAC,MAAM,CAAGD,KAAK,CAACC,MAAiB,CACtC,GAAI,CAACA,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAE,CACvCrC,qBAAqB,CAAC,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,GAAID,kBAAkB,CAAE,CACtBuC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,CAAEL,kBAAkB,CAAC,CACtD,MAAO,IAAMI,QAAQ,CAACE,mBAAmB,CAAC,OAAO,CAAEN,kBAAkB,CAAC,CACxE,CACF,CAAC,CAAE,CAACnC,kBAAkB,CAAC,CAAC,CAExBtF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAyH,kBAAkB,CAAGA,CAAA,GAAM,CAC/BtC,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,GAAID,WAAW,CAAE,CACf2C,QAAQ,CAACC,gBAAgB,CAAC,OAAO,CAAEL,kBAAkB,CAAC,CACtD,MAAO,IAAMI,QAAQ,CAACE,mBAAmB,CAAC,OAAO,CAAEN,kBAAkB,CAAC,CACxE,CACF,CAAC,CAAE,CAACvC,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAA8C,kBAAkB,CAAIxB,MAAc,EAAK,CAC7CzB,gBAAgB,CAACyB,MAAM,CAAC,CACxBb,qBAAqB,CAACH,aAAa,CAACyC,OAAO,CAACzB,MAAM,CAAC,CAAC,CACpDjB,qBAAqB,CAAC,KAAK,CAAC,CAC9B,CAAC,CAED,KAAM,CAAA2C,oBAAoB,CAAIC,SAA0B,EAAK,CAC3D,KAAM,CAAAC,QAAQ,CAAGD,SAAS,GAAK,MAAM,CACjCE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE5C,kBAAkB,CAAG,CAAC,CAAC,CACnC2C,IAAI,CAACE,GAAG,CAAC/C,aAAa,CAACgD,MAAM,CAAG,CAAC,CAAE9C,kBAAkB,CAAG,CAAC,CAAC,CAE9DC,qBAAqB,CAACyC,QAAQ,CAAC,CAC/BrD,gBAAgB,CAACS,aAAa,CAAC4C,QAAQ,CAAC,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAK,oBAAoB,CAAGA,CAAA,GAAM,CACjClD,qBAAqB,CAAC,CAACD,kBAAkB,CAAC,CAC5C,CAAC,CAED,KAAM,CAAAoD,eAAe,CAAGA,CAACC,CAAmB,CAAEC,IAAmB,GAAK,CACpED,CAAC,CAACE,cAAc,CAAC,CAAC,CAClBF,CAAC,CAACG,eAAe,CAAC,CAAC,CAEnB3D,cAAc,CAAC,CACb4D,CAAC,CAAEJ,CAAC,CAACK,OAAO,CACZC,CAAC,CAAEN,CAAC,CAACO,OAAO,CACZN,IACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAO,uBAAuB,CAAG,KAAAA,CAAOC,MAA6B,CAAER,IAAmB,GAAK,CAC5FzD,cAAc,CAAC,IAAI,CAAC,CAEpB,GAAIiE,MAAM,GAAK,UAAU,CAAE,CACzB/D,oBAAoB,CAAC,CACnBgE,IAAI,CAAE,UAAU,CAChBT,IACF,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIQ,MAAM,GAAK,QAAQ,CAAE,CAC9B/D,oBAAoB,CAAC,CACnBgE,IAAI,CAAE,QAAQ,CACdT,IACF,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAU,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CAAClE,iBAAiB,CAAE,OAExB,GAAI,CACF,GAAIA,iBAAiB,CAACiE,IAAI,GAAK,UAAU,CAAE,CACzC,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAApJ,WAAW,CAACqJ,qBAAqB,CAACpE,iBAAiB,CAACwD,IAAI,CAAC9B,EAAE,CAAC,CAEnF,GAAIyC,QAAQ,CAACE,OAAO,EAAIF,QAAQ,CAACG,gBAAgB,EAAIH,QAAQ,CAAC7C,kBAAkB,CAAE,CAChF,KAAM,CAAAiD,gBAAgB,KAAAC,MAAA,CAAOxE,iBAAiB,CAACwD,IAAI,CAACiB,gBAAgB,QAAAD,MAAA,CAAMxE,iBAAiB,CAACwD,IAAI,CAACkB,YAAY,yBAAQ,CAErHrF,kBAAkB,CAChB8E,QAAQ,CAACG,gBAAgB,CACzBH,QAAQ,CAAC7C,kBAAkB,CAC3BiD,gBACF,CAAC,CACH,CACF,CAAC,IAAM,IAAIvE,iBAAiB,CAACiE,IAAI,GAAK,QAAQ,CAAE,CAC9C,KAAM,CAAAlJ,WAAW,CAAC4J,eAAe,CAAC3E,iBAAiB,CAACwD,IAAI,CAAC9B,EAAE,CAAC,CAC5D,KAAM,CAAAlB,SAAS,CAAC,CAAC,CACnB,CACF,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,WAAW,CAAEA,KAAK,CAAC,CACnC,CAAC,OAAS,CACRf,oBAAoB,CAAC,IAAI,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAA2E,UAAU,CAAIC,UAAkB,EAAK,CACzC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAA5C,IAAI,CAAC2C,UAAU,CAAC,CACjC,MAAO,CAAAC,IAAI,CAACC,kBAAkB,CAAC,OAAO,CAAE,CACtCC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIC,UAAmB,EAAK,CAClD,OAAQA,UAAU,EAChB,IAAK,gBAAgB,CAAE,MAAO,IAAI,CAClC,IAAK,SAAS,CAAE,MAAO,MAAM,CAC7B,IAAK,UAAU,CAAE,MAAO,IAAI,CAC5B,IAAK,eAAe,CAAE,MAAO,KAAK,CAClC,QAAS,MAAO,CAAAA,UAAU,EAAI,MAAM,CACtC,CACF,CAAC,CAED,KAAM,CAAAC,cAAc,CAAI9B,IAAmB,EAAK,CAC9C,GAAIA,IAAI,CAAC1B,iBAAiB,CAAE,CAC1B,KAAM,CAAAyD,KAAK,CAAG/B,IAAI,CAAC1B,iBAAiB,CAAC0D,KAAK,CAAC,GAAG,CAAC,CAC/C,GAAID,KAAK,CAACnC,MAAM,CAAG,CAAC,CAAE,CACpB,GAAI,CAAA7B,SAAS,CAAGgE,KAAK,CAAC,CAAC,CAAC,CAExB,GAAInG,QAAQ,CAACmC,SAAS,CAAC,CAAE,CACvB,MAAO,CAAAnC,QAAQ,CAACmC,SAAS,CAAC,CAACR,IAAI,CACjC,CAEA,KAAM,CAAA0E,iBAAiB,CAAG7E,MAAM,CAACY,IAAI,CAACpC,QAAQ,CAAC,CAACqC,IAAI,CAACC,EAAE,EAAIA,EAAE,CAACgE,UAAU,CAACnE,SAAS,CAAG,GAAG,CAAC,CAAC,CAC1F,GAAIkE,iBAAiB,CAAE,CACrB,MAAO,CAAArG,QAAQ,CAACqG,iBAAiB,CAAC,CAAC1E,IAAI,CACzC,CACF,CACF,CAEA,KAAM,CAAA4E,YAAY,CAAG,CAAC,gBAAgB,CAAE,SAAS,CAAE,UAAU,CAAE,eAAe,CAAC,CAC/E,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAApC,IAAI,CAAC5B,IAAI,CAAE,CAC3B,GAAI,CAAC+D,YAAY,CAAC9D,QAAQ,CAAC+D,GAAG,CAAC,CAAE,CAC/B,GAAIxG,QAAQ,CAACwG,GAAG,CAAC,CAAE,CACjB,MAAO,CAAAxG,QAAQ,CAACwG,GAAG,CAAC,CAAC7E,IAAI,CAC3B,CAEA,KAAM,CAAA0E,iBAAiB,CAAG7E,MAAM,CAACY,IAAI,CAACpC,QAAQ,CAAC,CAACqC,IAAI,CAACC,EAAE,EAAIA,EAAE,CAACgE,UAAU,CAACE,GAAG,CAAG,GAAG,CAAC,CAAC,CACpF,GAAIH,iBAAiB,CAAE,CACrB,MAAO,CAAArG,QAAQ,CAACqG,iBAAiB,CAAC,CAAC1E,IAAI,CACzC,CACF,CACF,CAEA,GAAIyC,IAAI,CAAC1B,iBAAiB,GAAK,oBAAoB,EAC/C0B,IAAI,CAAClC,kBAAkB,GAAK,eAAe,EAC3CkC,IAAI,CAAC5B,IAAI,CAACC,QAAQ,CAAC,eAAe,CAAC,CAAE,CACvC,MAAO,KAAK,CACd,CAEA,MAAO,MAAM,CACf,CAAC,CAED,KAAM,CAAAgE,qBAAqB,CAAIrC,IAAmB,EAAK,CACrD,GAAIA,IAAI,CAACsC,QAAQ,EAAItC,IAAI,CAACsC,QAAQ,CAACC,yBAAyB,EAAIC,KAAK,CAACC,OAAO,CAACzC,IAAI,CAACsC,QAAQ,CAACC,yBAAyB,CAAC,CAAE,CACtH,KAAM,CAAAG,gBAAgB,CAAG1C,IAAI,CAACsC,QAAQ,CAACC,yBAAyB,CAChE,GAAIG,gBAAgB,CAAC9C,MAAM,CAAG,CAAC,CAAE,CAC/B,KAAM,CAAA+C,kBAAkB,CAAGD,gBAAgB,CAACpF,GAAG,CAAEsF,QAAgB,OAAA5B,MAAA,CAAS4B,QAAQ,MAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CACjG,gBAAA7B,MAAA,CAAY2B,kBAAkB,EAChC,CACF,CAEA,MAAO,CAAA3C,IAAI,CAACiB,gBAAgB,CAC9B,CAAC,CAED,KAAM,CAAA6B,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CAACtG,iBAAiB,CAAE,MAAO,KAAI,CAEnC,KAAM,CAAEiE,IAAK,CAAC,CAAGjE,iBAAiB,CAElC,KAAM,CAAAuG,oBAAoB,CAAI/C,IAAmB,EAAK,CACpD,GAAIA,IAAI,CAACsC,QAAQ,EAAItC,IAAI,CAACsC,QAAQ,CAACC,yBAAyB,EAAIC,KAAK,CAACC,OAAO,CAACzC,IAAI,CAACsC,QAAQ,CAACC,yBAAyB,CAAC,CAAE,CACtH,KAAM,CAAAG,gBAAgB,CAAG1C,IAAI,CAACsC,QAAQ,CAACC,yBAAyB,CAChE,GAAIG,gBAAgB,CAAC9C,MAAM,CAAG,CAAC,CAAE,CAC/B,KAAM,CAAA+C,kBAAkB,CAAGD,gBAAgB,CAACpF,GAAG,CAAEsF,QAAgB,OAAA5B,MAAA,CAAS4B,QAAQ,MAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CACjG,MAAO,CAAAF,kBAAkB,CAC3B,CACF,CACA,MAAO,CAAAnG,iBAAiB,CAACwD,IAAI,CAACiB,gBAAgB,CAChD,CAAC,CAED,OAAQR,IAAI,EACV,IAAK,UAAU,CACb,KAAM,CAAAuC,SAAS,CAAGD,oBAAoB,CAACvG,iBAAiB,CAACwD,IAAI,CAAC,CAC9D,MAAO,CACLiD,KAAK,CAAE,SAAS,CAChBC,OAAO,wJAAAlC,MAAA,CAAqCgC,SAAS,QAAAhC,MAAA,CAAMxE,iBAAiB,CAACwD,IAAI,CAACkB,YAAY,6GAA0B,CACxHiC,WAAW,CAAE,MAAM,CACnBC,UAAU,CAAE,IACd,CAAC,CACH,IAAK,QAAQ,CACX,MAAO,CACLH,KAAK,CAAE,OAAO,CACdC,OAAO,CAAE,qCAAqC,CAC9CC,WAAW,CAAE,IAAI,CACjBC,UAAU,CAAE,IACd,CAAC,CACH,QACE,MAAO,KAAI,CACf,CACF,CAAC,CAED,GAAIhH,OAAO,CAAE,CACX,mBACE3E,IAAA,CAACG,SAAS,EAAAyL,QAAA,cACR5L,IAAA,QAAK6L,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAH,QAAA,CAAC,wBAEtD,CAAK,CAAC,CACG,CAAC,CAEhB,CAEA,KAAM,CAAAI,YAAY,CAAGX,eAAe,CAAC,CAAC,CAEtC,mBACEnL,KAAA,CAACC,SAAS,EAAAyL,QAAA,eACR1L,KAAA,CAACK,MAAM,EAAAqL,QAAA,eACL5L,IAAA,CAACqB,gBAAgB,EACf4K,OAAO,CAAEA,CAAA,GAAMpE,oBAAoB,CAAC,MAAM,CAAE,CAC5CqE,QAAQ,CAAE7G,kBAAkB,GAAK,CAAE,CAAAuG,QAAA,CACpC,QAED,CAAkB,CAAC,cAEnB1L,KAAA,CAACiB,eAAe,EAACgL,SAAS,CAAC,iBAAiB,CAAAP,QAAA,eAC1C1L,KAAA,CAACO,oBAAoB,EACnBI,OAAO,CAAEoE,kBAAmB,CAC5BgH,OAAO,CAAE7D,oBAAqB,CAAAwD,QAAA,EAE7BnH,aAAa,cACdzE,IAAA,SAAMmM,SAAS,CAAC,OAAO,CAAAP,QAAA,CAAC,QAAC,CAAM,CAAC,EACZ,CAAC,cACvB5L,IAAA,CAACc,kBAAkB,EAACD,OAAO,CAAEoE,kBAAmB,CAAA2G,QAAA,CAC7CzG,aAAa,CAACU,GAAG,CAACuG,MAAM,eACvBpM,IAAA,CAACgB,kBAAkB,EAEjBE,WAAW,CAAEkL,MAAM,GAAK3H,aAAc,CACtCwH,OAAO,CAAEA,CAAA,GAAMtE,kBAAkB,CAACyE,MAAM,CAAE,CAAAR,QAAA,CAEzCQ,MAAM,EAJFA,MAKa,CACrB,CAAC,CACgB,CAAC,EACN,CAAC,cAElBpM,IAAA,CAACqB,gBAAgB,EACf4K,OAAO,CAAEA,CAAA,GAAMpE,oBAAoB,CAAC,MAAM,CAAE,CAC5CqE,QAAQ,CAAE7G,kBAAkB,GAAKF,aAAa,CAACgD,MAAM,CAAG,CAAE,CAAAyD,QAAA,CAC3D,QAED,CAAkB,CAAC,EACb,CAAC,cAET5L,IAAA,CAACuB,WAAW,EAAAqK,QAAA,CACTrH,aAAa,CAAC4D,MAAM,GAAK,CAAC,cACzBjI,KAAA,CAACwC,UAAU,EAAAkJ,QAAA,eACT5L,IAAA,QAAKmM,SAAS,CAAC,MAAM,CAAAP,QAAA,CAAC,cAAE,CAAK,CAAC,cAC9B5L,IAAA,QAAKmM,SAAS,CAAC,OAAO,CAAAP,QAAA,CAAC,gEAAY,CAAK,CAAC,cACzC5L,IAAA,QAAKmM,SAAS,CAAC,aAAa,CAAAP,QAAA,CAAC,gLAE7B,CAAK,CAAC,EACI,CAAC,cAEb5L,IAAA,CAACyB,QAAQ,EAAAmK,QAAA,CACNrH,aAAa,CAACsB,GAAG,CAAC0C,IAAI,eACrBrI,KAAA,CAACyB,eAAe,EAAAiK,QAAA,eACd1L,KAAA,CAAC2B,WAAW,EAACoK,OAAO,CAAG3D,CAAC,EAAKD,eAAe,CAACC,CAAC,CAAEC,IAAI,CAAE,CAAAqD,QAAA,eACpD5L,IAAA,CAAC+B,eAAe,EAAA6J,QAAA,CAAErD,IAAI,CAACkB,YAAY,CAAkB,CAAC,cACtDzJ,IAAA,CAACiC,eAAe,EAAA2J,QAAA,CAAEhB,qBAAqB,CAACrC,IAAI,CAAC,CAAkB,CAAC,EACrD,CAAC,cACdrI,KAAA,CAACiC,QAAQ,EAAAyJ,QAAA,eACP1L,KAAA,CAACmC,eAAe,EAAAuJ,QAAA,EACbvB,cAAc,CAAC9B,IAAI,CAAC,CAAC,KAAG,CAAC4B,kBAAkB,CAAC5B,IAAI,CAAClC,kBAAkB,CAAC,EACtD,CAAC,cAClBrG,IAAA,CAACwC,SAAS,EAAAoJ,QAAA,CACPjC,UAAU,CAACpB,IAAI,CAACrB,UAAU,CAAC,CACnB,CAAC,EACJ,CAAC,GAZSqB,IAAI,CAAC9B,EAaV,CAClB,CAAC,CACM,CACX,CACU,CAAC,CAEb5B,WAAW,eACV3E,KAAA,CAAC0C,oBAAoB,EAACG,EAAE,CAAE8B,WAAW,CAAC6D,CAAE,CAAC5F,EAAE,CAAE+B,WAAW,CAAC+D,CAAE,CAAAgD,QAAA,eACzD5L,IAAA,CAACgD,eAAe,EACdiJ,OAAO,CAAEA,CAAA,GAAMnD,uBAAuB,CAAC,UAAU,CAAEjE,WAAW,CAAC0D,IAAI,CAAE,CAAAqD,QAAA,CACtE,uCAED,CAAiB,CAAC,cAClB5L,IAAA,CAACgD,eAAe,EACdiJ,OAAO,CAAEA,CAAA,GAAMnD,uBAAuB,CAAC,QAAQ,CAAEjE,WAAW,CAAC0D,IAAI,CAAE,CAAAqD,QAAA,CACpE,cAED,CAAiB,CAAC,EACE,CACvB,CAEA7G,iBAAiB,EAAIiH,YAAY,eAChChM,IAAA,CAACkD,YAAY,EAAC+I,OAAO,CAAEA,CAAA,GAAMjH,oBAAoB,CAAC,IAAI,CAAE,CAAA4G,QAAA,cACtD1L,KAAA,CAACkD,YAAY,EAAC6I,OAAO,CAAG3D,CAAC,EAAKA,CAAC,CAACG,eAAe,CAAC,CAAE,CAAAmD,QAAA,eAChD5L,IAAA,CAACsD,UAAU,EAAAsI,QAAA,CAAEI,YAAY,CAACR,KAAK,CAAa,CAAC,cAC7CxL,IAAA,CAACyD,YAAY,EAAAmI,QAAA,CAAEI,YAAY,CAACP,OAAO,CAAe,CAAC,cACnDvL,KAAA,CAAC0D,YAAY,EAAAgI,QAAA,eACX5L,IAAA,CAAC8D,WAAW,EACVE,QAAQ,CAAC,SAAS,CAClBiI,OAAO,CAAEhD,mBAAoB,CAAA2C,QAAA,CAE5BI,YAAY,CAACN,WAAW,CACd,CAAC,cACd1L,IAAA,CAAC8D,WAAW,EACVE,QAAQ,CAAC,WAAW,CACpBiI,OAAO,CAAEA,CAAA,GAAMjH,oBAAoB,CAAC,IAAI,CAAE,CAAA4G,QAAA,CAEzCI,YAAY,CAACL,UAAU,CACb,CAAC,EACF,CAAC,EACH,CAAC,CACH,CACf,EACQ,CAAC,CAEhB,CAAC,CAED,cAAe,CAAA1H,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}