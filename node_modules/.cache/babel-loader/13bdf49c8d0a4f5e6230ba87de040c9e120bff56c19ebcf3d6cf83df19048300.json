{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\shared\\\\components\\\\ConversationSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sidebar, SidebarHeader, SidebarTitle, SidebarContent, SidebarMenuContent, SidebarToggleButton } from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n_c = AccordionContainer;\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n_c2 = AccordionItem;\nconst AccordionHeader = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n_c3 = AccordionHeader;\nconst ThreadsList = styled.div`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n_c4 = ThreadsList;\nconst InteractionRecordsList = styled.div`\n  max-height: ${props => props.$isExpanded ? '400px' : '0'};\n  overflow-y: auto;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n_c5 = InteractionRecordsList;\nconst RecordItem = styled.div`\n  padding: 8px 32px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n_c6 = RecordItem;\nconst RecordHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 0;\n  \n  &:hover {\n    color: #6c757d;\n  }\n`;\n_c7 = RecordHeader;\nconst RecordTitle = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n`;\n_c8 = RecordTitle;\nconst RecordMeta = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n_c9 = RecordMeta;\nconst RecordExpandIcon = styled.span`\n  font-size: 10px;\n  transform: ${props => props.$isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.2s ease;\n`;\n_c0 = RecordExpandIcon;\nconst RecordThreadsList = styled.div`\n  max-height: ${props => props.$isExpanded ? '200px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  margin-left: 16px;\n`;\n_c1 = RecordThreadsList;\nconst RecordThreadItem = styled.div`\n  padding: 6px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n  }\n`;\n_c10 = RecordThreadItem;\nconst ThreadTypeTag = styled.span`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  \n  background-color: ${props => {\n  switch (props.type) {\n    case 'interpretation':\n      return '#6c757d';\n    case 'proceed':\n      return '#ff9800';\n    case 'sentence':\n      return '#4caf50';\n    default:\n      return '#6c757d';\n  }\n}};\n  color: white;\n`;\n_c11 = ThreadTypeTag;\nconst ThreadItem = styled.div`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n_c12 = ThreadItem;\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n_c13 = ThreadItemContent;\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n_c14 = DeleteThreadButton;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n_c15 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n_c16 = ThreadTime;\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [expandedRecords, setExpandedRecords] = useState(new Set());\n  const [threads, setThreads] = useState({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState([]);\n  const [selectedThreadId, setSelectedThreadId] = useState(null);\n  const menuItems = [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n  useEffect(() => {\n    const loadData = async () => {\n      if (!selectedPersonaId) return;\n      try {\n        // 스레드 로드\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: threadsResponse.data.filter(t => t.thread_type === 'proceed'),\n            sentence: threadsResponse.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          setInteractionRecords(recordsResponse.data);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n    loadData();\n  }, [selectedPersonaId, refreshTrigger]);\n  const handleAccordionToggle = itemId => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      }\n    }\n  };\n  const handleRecordToggle = recordId => {\n    const newExpanded = new Set(expandedRecords);\n    if (newExpanded.has(recordId)) {\n      newExpanded.delete(recordId);\n    } else {\n      newExpanded.add(recordId);\n    }\n    setExpandedRecords(newExpanded);\n  };\n  const handleThreadSelect = (threadId, itemType) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n  const handleRecordThreadSelect = thread => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const handleDeleteThread = async (threadId, e) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = {\n            ...threads\n          };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key] = updatedThreads[key].filter(t => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n  const getThreadTypeLabel = type => {\n    switch (type) {\n      case 'interpretation':\n        return '해석';\n      case 'proceed':\n        return '나아가기';\n      case 'sentence':\n        return '문장';\n      default:\n        return type;\n    }\n  };\n  const getThreadContent = thread => {\n    var _thread$content;\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    }\n    return ((_thread$content = thread.content) === null || _thread$content === void 0 ? void 0 : _thread$content.length) > 30 ? thread.content.substring(0, 30) + '...' : thread.content || '내용 없음';\n  };\n  const renderThreads = itemId => {\n    const itemThreads = threads[itemId] || [];\n    const isExpanded = expandedItems.has(itemId);\n    return /*#__PURE__*/_jsxDEV(ThreadsList, {\n      $isExpanded: isExpanded,\n      children: [itemThreads.map((thread, index) => /*#__PURE__*/_jsxDEV(ThreadItem, {\n        $isSelected: selectedThreadId === thread.id,\n        onClick: () => handleThreadSelect(thread.id, itemId),\n        children: [/*#__PURE__*/_jsxDEV(ThreadItemContent, {\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: [itemId === 'interpretation' && `해석 #${index + 1}`, itemId === 'proceed' && `나아가기 #${index + 1}`, itemId === 'sentence' && `문장 #${index + 1}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteThreadButton, {\n          onClick: e => handleDeleteThread(thread.id, e),\n          title: \"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)), itemThreads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px 32px',\n          fontSize: '14px',\n          color: '#999'\n        },\n        children: \"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  };\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n\n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(record => record.persona_id === selectedPersonaId);\n    return /*#__PURE__*/_jsxDEV(InteractionRecordsList, {\n      $isExpanded: isExpanded,\n      children: currentPersonaRecord ? /*#__PURE__*/_jsxDEV(RecordItem, {\n        children: [/*#__PURE__*/_jsxDEV(RecordHeader, {\n          $isExpanded: expandedRecords.has(currentPersonaRecord.id),\n          onClick: () => handleRecordToggle(currentPersonaRecord.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(RecordTitle, {\n              children: [currentPersonaRecord.persona_name, \"\\uC758 \\uAE30\\uB85D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RecordMeta, {\n              children: [formatDate(currentPersonaRecord.updated_at), \" \\u2022 \", currentPersonaRecord.threads.length, \"\\uAC1C \\uC2A4\\uB808\\uB4DC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RecordExpandIcon, {\n            $isExpanded: expandedRecords.has(currentPersonaRecord.id),\n            children: \"\\u25B6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RecordThreadsList, {\n          $isExpanded: expandedRecords.has(currentPersonaRecord.id),\n          children: currentPersonaRecord.threads.map(thread => /*#__PURE__*/_jsxDEV(RecordThreadItem, {\n            $isSelected: selectedThreadId === thread.id,\n            onClick: () => handleRecordThreadSelect(thread),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ThreadTypeTag, {\n                type: thread.thread_type,\n                children: getThreadTypeLabel(thread.thread_type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this), getThreadContent(thread)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '11px',\n                opacity: 0.7,\n                marginTop: '2px'\n              },\n              children: formatTime(thread.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, currentPersonaRecord.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px 32px',\n          fontSize: '14px',\n          color: '#999'\n        },\n        children: \"\\uC774 \\uD398\\uB974\\uC18C\\uB098\\uC758 \\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"250px\",\n    $isCollapsed: isCollapsed,\n    $variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle,\n      children: isCollapsed ? '▷' : '◁'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarHeader, {\n      $isCollapsed: isCollapsed,\n      children: selectedPersonaName && /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        $isCollapsed: isCollapsed,\n        children: selectedPersonaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      $isCollapsed: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarMenuContent, {\n        $variant: \"conversation\",\n        children: /*#__PURE__*/_jsxDEV(AccordionContainer, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n              $isSelected: selectedItem === item.id,\n              $isExpanded: expandedItems.has(item.id),\n              onClick: () => handleAccordionToggle(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), item.id === 'interaction_history' ? renderInteractionRecords() : renderThreads(item.id)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationSidebar, \"Oqn35AaAkzIuQzbmvFIs6YT/Xig=\");\n_c17 = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"AccordionContainer\");\n$RefreshReg$(_c2, \"AccordionItem\");\n$RefreshReg$(_c3, \"AccordionHeader\");\n$RefreshReg$(_c4, \"ThreadsList\");\n$RefreshReg$(_c5, \"InteractionRecordsList\");\n$RefreshReg$(_c6, \"RecordItem\");\n$RefreshReg$(_c7, \"RecordHeader\");\n$RefreshReg$(_c8, \"RecordTitle\");\n$RefreshReg$(_c9, \"RecordMeta\");\n$RefreshReg$(_c0, \"RecordExpandIcon\");\n$RefreshReg$(_c1, \"RecordThreadsList\");\n$RefreshReg$(_c10, \"RecordThreadItem\");\n$RefreshReg$(_c11, \"ThreadTypeTag\");\n$RefreshReg$(_c12, \"ThreadItem\");\n$RefreshReg$(_c13, \"ThreadItemContent\");\n$RefreshReg$(_c14, \"DeleteThreadButton\");\n$RefreshReg$(_c15, \"ThreadTitle\");\n$RefreshReg$(_c16, \"ThreadTime\");\n$RefreshReg$(_c17, \"ConversationSidebar\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxDEV","_jsxDEV","AccordionContainer","div","_c","AccordionItem","_c2","AccordionHeader","props","$isSelected","_c3","ThreadsList","$isExpanded","_c4","InteractionRecordsList","_c5","RecordItem","_c6","RecordHeader","_c7","RecordTitle","_c8","RecordMeta","_c9","RecordExpandIcon","span","_c0","RecordThreadsList","_c1","RecordThreadItem","_c10","ThreadTypeTag","type","_c11","ThreadItem","_c12","ThreadItemContent","_c13","DeleteThreadButton","button","_c14","ThreadTitle","_c15","ThreadTime","_c16","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","_s","expandedItems","setExpandedItems","Set","expandedRecords","setExpandedRecords","threads","setThreads","interpretation","proceed","sentence","interactionRecords","setInteractionRecords","selectedThreadId","setSelectedThreadId","menuItems","id","name","loadData","threadsResponse","getPersonaThreads","data","threadsByType","filter","t","thread_type","recordsResponse","getAllInteractionRecords","error","console","handleAccordionToggle","itemId","newExpanded","has","delete","add","itemThreads","length","handleRecordToggle","recordId","handleThreadSelect","threadId","itemType","handleRecordThreadSelect","thread","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","handleDeleteThread","e","stopPropagation","window","confirm","result","deleteThread","updatedThreads","Object","keys","forEach","key","alert","getThreadTypeLabel","getThreadContent","_thread$content","messages","firstMessage","content","substring","renderThreads","isExpanded","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","created_at","title","style","padding","fontSize","color","renderInteractionRecords","currentPersonaRecord","find","record","persona_id","persona_name","updated_at","opacity","marginTop","width","$isCollapsed","$variant","item","_c17","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, InteractionRecord } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number;\n}\n\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ $isSelected: boolean; $isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst ThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst InteractionRecordsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '400px' : '0'};\n  overflow-y: auto;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst RecordItem = styled.div`\n  padding: 8px 32px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst RecordHeader = styled.div<{ $isExpanded: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  padding: 8px 0;\n  \n  &:hover {\n    color: #6c757d;\n  }\n`;\n\nconst RecordTitle = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst RecordMeta = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n\nconst RecordExpandIcon = styled.span<{ $isExpanded: boolean }>`\n  font-size: 10px;\n  transform: ${props => props.$isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.2s ease;\n`;\n\nconst RecordThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '200px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  margin-left: 16px;\n`;\n\nconst RecordThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 6px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadTypeTag = styled.span<{ type: string }>`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  \n  background-color: ${props => {\n    switch (props.type) {\n      case 'interpretation': return '#6c757d';\n      case 'proceed': return '#ff9800';\n      case 'sentence': return '#4caf50';\n      default: return '#6c757d';\n    }\n  }};\n  color: white;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [expandedRecords, setExpandedRecords] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState<InteractionRecord[]>([]);\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n\n  const menuItems = [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (!selectedPersonaId) return;\n\n      try {\n        // 스레드 로드\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data.filter((t: any) => t.thread_type === 'interpretation'),\n            proceed: threadsResponse.data.filter((t: any) => t.thread_type === 'proceed'),\n            sentence: threadsResponse.data.filter((t: any) => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          setInteractionRecords(recordsResponse.data);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n\n    loadData();\n  }, [selectedPersonaId, refreshTrigger]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n      const itemThreads = threads[itemId as keyof typeof threads] || [];\n      if (itemThreads.length === 0) {\n        onSelectItem(itemId);\n      }\n    }\n  };\n\n  const handleRecordToggle = (recordId: string) => {\n    const newExpanded = new Set(expandedRecords);\n    if (newExpanded.has(recordId)) {\n      newExpanded.delete(recordId);\n    } else {\n      newExpanded.add(recordId);\n    }\n    setExpandedRecords(newExpanded);\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const handleRecordThreadSelect = (thread: TrainingThread) => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatDate = (timestamp: string) => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        const result = await chatApi.deleteThread(threadId);\n        if (result.data) {\n          const updatedThreads = { ...threads };\n          Object.keys(updatedThreads).forEach(key => {\n            updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter((t: any) => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          \n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제에 실패했습니다');\n      }\n    }\n  };\n\n  const getThreadTypeLabel = (type: string) => {\n    switch (type) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      default: return type;\n    }\n  };\n\n  const getThreadContent = (thread: TrainingThread) => {\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 \n        ? firstMessage.content.substring(0, 30) + '...' \n        : firstMessage.content;\n    }\n    return thread.content?.length > 30 \n      ? thread.content.substring(0, 30) + '...' \n      : thread.content || '내용 없음';\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList $isExpanded={isExpanded}>\n        {itemThreads.map((thread: any, index: number) => (\n          <ThreadItem\n            key={thread.id}\n            $isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${index + 1}`}\n                {itemId === 'proceed' && `나아가기 #${index + 1}`}\n                {itemId === 'sentence' && `문장 #${index + 1}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n    \n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(\n      record => record.persona_id === selectedPersonaId\n    );\n\n    return (\n      <InteractionRecordsList $isExpanded={isExpanded}>\n        {currentPersonaRecord ? (\n          <RecordItem key={currentPersonaRecord.id}>\n            <RecordHeader \n              $isExpanded={expandedRecords.has(currentPersonaRecord.id)}\n              onClick={() => handleRecordToggle(currentPersonaRecord.id)}\n            >\n              <div>\n                <RecordTitle>{currentPersonaRecord.persona_name}의 기록</RecordTitle>\n                <RecordMeta>\n                  {formatDate(currentPersonaRecord.updated_at)} • {currentPersonaRecord.threads.length}개 스레드\n                </RecordMeta>\n              </div>\n              <RecordExpandIcon $isExpanded={expandedRecords.has(currentPersonaRecord.id)}>\n                ▶\n              </RecordExpandIcon>\n            </RecordHeader>\n            \n            <RecordThreadsList $isExpanded={expandedRecords.has(currentPersonaRecord.id)}>\n              {currentPersonaRecord.threads.map((thread) => (\n                <RecordThreadItem\n                  key={thread.id}\n                  $isSelected={selectedThreadId === thread.id}\n                  onClick={() => handleRecordThreadSelect(thread)}\n                >\n                  <div>\n                    <ThreadTypeTag type={thread.thread_type}>\n                      {getThreadTypeLabel(thread.thread_type)}\n                    </ThreadTypeTag>\n                    {getThreadContent(thread)}\n                  </div>\n                  <div style={{ fontSize: '11px', opacity: 0.7, marginTop: '2px' }}>\n                    {formatTime(thread.created_at)}\n                  </div>\n                </RecordThreadItem>\n              ))}\n            </RecordThreadsList>\n          </RecordItem>\n        ) : (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            이 페르소나의 상호작용 기록이 없습니다\n          </div>\n        )}\n      </InteractionRecordsList>\n    );\n  };\n\n  return (\n    <Sidebar width=\"250px\" $isCollapsed={isCollapsed} $variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n          {isCollapsed ? '▷' : '◁'}\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader $isCollapsed={isCollapsed}>\n        {selectedPersonaName && (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        )}\n      </SidebarHeader>\n\n      <SidebarContent $isCollapsed={isCollapsed}>\n        <SidebarMenuContent $variant=\"conversation\">\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                  $isSelected={selectedItem === item.id}\n                  $isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                  <span>{item.name}</span>\n                </AccordionHeader>\n                \n                {item.id === 'interaction_history' \n                  ? renderInteractionRecords()\n                  : renderThreads(item.id)\n                }\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}