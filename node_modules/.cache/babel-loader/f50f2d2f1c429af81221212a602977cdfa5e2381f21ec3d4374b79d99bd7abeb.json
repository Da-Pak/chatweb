{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver4\\\\frontend\\\\src\\\\features\\\\vault\\\\components\\\\SentenceVaultView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi } from '../../training/api/sentenceApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n_c = Container;\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = Header;\nconst FilterDropdownButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n_c3 = FilterDropdownButton;\nconst FilterDropdownMenu = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n_c4 = FilterDropdownMenu;\nconst FilterDropdownItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n_c5 = FilterDropdownItem;\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c6 = FilterContainer;\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c7 = NavigationButton;\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n_c8 = ContentArea;\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n_c9 = SentenceGrid;\nconst SentenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c0 = SentenceContainer;\nconst SentenceRow = styled.div`\n  width: 100%;\n  background: ${props => props.$isHighlighted ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'};\n  border: 1px solid ${props => props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: ${props => props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    background: ${props => props.$isHighlighted ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)' : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'};\n  }\n  \n  ${props => props.$isPinned && `\n    background: ${props.$isHighlighted ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'};\n    border-color: ${props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: ${props.$isHighlighted ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)' : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'};\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: ${props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    }\n  `}\n`;\n_c1 = SentenceRow;\nconst SentenceContent = styled.div`\n  flex: 1;\n  padding-bottom: ${props =>\n// 메모가 있으면 하단 여백 추가\n'var(--has-memo, 0px)'};\n`;\n_c10 = SentenceContent;\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n_c11 = SentenceText;\nconst SentenceMetaExternal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n_c12 = SentenceMetaExternal;\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n_c13 = PersonaLabel;\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n_c14 = DateLabel;\nconst PinIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#333' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #333;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#333' : '#666'};\n  }\n  \n  &::before {\n    content: \"📌\";\n    filter: grayscale(100%);\n  }\n`;\n_c15 = PinIcon;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n_c16 = EmptyState;\nconst ContextMenuContainer = styled.div`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n_c17 = ContextMenuContainer;\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n_c18 = ContextMenuItem;\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n_c19 = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n_c20 = ModalContent;\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n_c21 = ModalTitle;\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n_c22 = ModalMessage;\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n`;\n_c23 = ModalButtons;\nconst ModalButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    color: #495057;\n    border-color: #adb5bd;\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      border-color: #6c757d;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n_c24 = ModalButton;\nconst StatusIndicators = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 40px;\n  display: flex;\n  gap: 4px;\n  z-index: 1;\n`;\n_c25 = StatusIndicators;\nconst StatusIndicator = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  color: white;\n  font-weight: bold;\n  background: ${props => {\n  if (props.$type === 'highlight') {\n    return props.$color === 'yellow' ? '#ffc107' : props.$color === 'green' ? '#28a745' : props.$color === 'blue' ? '#007bff' : '#ffc107';\n  }\n  return '#6c757d'; // 메모 색상\n}};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  \n  &::before {\n    content: ${props => props.$type === 'highlight' ? '\"H\"' : '\"M\"'};\n  }\n`;\n_c26 = StatusIndicator;\nconst MemoPreview = styled.div`\n  position: absolute;\n  bottom: 8px;\n  left: 20px;\n  right: 60px;\n  background: rgba(108, 117, 125, 0.1);\n  border-radius: 8px;\n  padding: 6px 10px;\n  font-size: 12px;\n  color: #6c757d;\n  font-style: italic;\n  max-height: 40px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n_c27 = MemoPreview;\nconst SentenceVaultView = ({\n  personas,\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  _s();\n  const [sentences, setSentences] = useState([]);\n  const [filteredSentences, setFilteredSentences] = useState([]);\n  const [currentFilter, setCurrentFilter] = useState('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedSentences, setPinnedSentences] = useState(new Set());\n  const [contextMenu, setContextMenu] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState(['전체', '언어화', '자극']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 필터 옵션에 페르소나들 추가 (props로 받은 personas 사용)\n      const personaNames = Object.values(personas).map(p => p.name);\n      setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [personas]);\n  const applyFilter = useCallback(() => {\n    let filtered = [...sentences];\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => {\n          var _s$source_message_id;\n          return s.tags.includes('verbalization') || s.tags.includes('언어화') || ((_s$source_message_id = s.source_message_id) === null || _s$source_message_id === void 0 ? void 0 : _s$source_message_id.includes('verbalization'));\n        });\n      } else if (currentFilter === '자극') {\n        filtered = filtered.filter(s => s.tags.includes('자극') || s.tags.includes('stimulus'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n\n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    setFilteredSentences([...pinned, ...unpinned]);\n  }, [sentences, currentFilter, pinnedSentences, personas]);\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences, applyFilter]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');\n      setContextMenu(null);\n    };\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = event => {\n      const target = event.target;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n  const handleFilterChange = filter => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n  const handleNavigateFilter = direction => {\n    const newIndex = direction === 'prev' ? Math.max(0, currentFilterIndex - 1) : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n  const handleSentenceClick = (event, sentence) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('문장 클릭됨:', sentence.sentence.substring(0, 50));\n    console.log('클릭 위치:', event.clientX, event.clientY);\n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n    console.log('컨텍스트 메뉴 설정됨');\n  };\n  const handleContextMenuAction = (action, sentence) => {\n    console.log('컨텍스트 메뉴 액션:', action);\n    setContextMenu(null);\n    switch (action) {\n      case 'interact':\n      case 'delete':\n        setConfirmationModal({\n          type: action,\n          sentence\n        });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n  const handleConfirmAction = async () => {\n    var _sentence$source_mess;\n    if (!confirmationModal) return;\n    const {\n      type,\n      sentence\n    } = confirmationModal;\n    try {\n      switch (type) {\n        case 'interact':\n          console.log('=== 상호작용 하기 시작 ===');\n          console.log('문장 데이터:', sentence);\n          console.log('tags:', sentence.tags);\n          console.log('source_message_id:', sentence.source_message_id);\n          console.log('source_conversation_id:', sentence.source_conversation_id);\n          console.log('source_thread_id:', sentence.source_thread_id);\n          console.log('source_thread_type:', sentence.source_thread_type);\n          console.log('사용 가능한 페르소나들:', Object.keys(personas));\n\n          // 해당 문장의 출처 스레드로 이동하면서 입력창에 \\\"문장에 대해\\\" 형태로 설정\n          if (sentence.tags.includes('verbalization') || sentence.tags.includes('언어화') || (_sentence$source_mess = sentence.source_message_id) !== null && _sentence$source_mess !== void 0 && _sentence$source_mess.includes('verbalization')) {\n            console.log('언어화 문장으로 인식됨');\n            // 언어화에서 온 문장인 경우 - 언어화 스레드로 이동\n            if (sentence.source_conversation_id && sentence.source_conversation_id !== 'verbalization_chat') {\n              console.log('언어화 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToThread) {\n                console.log('언어화 스레드로 이동 중...');\n                onNavigateToThread(sentence.source_conversation_id, 'verbalization');\n              }\n            } else {\n              console.log('언어화 스레드 ID가 없어서 언어화 모드로만 전환');\n              // source_conversation_id가 없으면 언어화 모드로만 전환\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToPersona) {\n                console.log('언어화 페르소나로 이동 중...');\n                // 언어화는 verbalization ID 사용\n                onNavigateToPersona('verbalization', 'sentence');\n              }\n            }\n          } else {\n            var _sentence$source_mess2, _sentence$source_mess3, _sentence$source_mess4;\n            console.log('훈습 문장으로 인식됨');\n            // 훈습에서 온 문장인 경우 - source_message_id에서 스레드 타입 식별\n            let threadType = 'interpretation'; // 기본값\n\n            if ((_sentence$source_mess2 = sentence.source_message_id) !== null && _sentence$source_mess2 !== void 0 && _sentence$source_mess2.includes('sentence_') || sentence.tags.includes('sentence')) {\n              threadType = 'sentence';\n            } else if ((_sentence$source_mess3 = sentence.source_message_id) !== null && _sentence$source_mess3 !== void 0 && _sentence$source_mess3.includes('proceed_') || sentence.tags.includes('proceed')) {\n              threadType = 'proceed';\n            } else if ((_sentence$source_mess4 = sentence.source_message_id) !== null && _sentence$source_mess4 !== void 0 && _sentence$source_mess4.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n              threadType = 'interpretation';\n            }\n            console.log('식별된 스레드 타입:', threadType);\n\n            // 스레드 ID 우선순위: source_thread_id > source_conversation_id\n            const threadId = sentence.source_thread_id || sentence.source_conversation_id;\n            if (threadId) {\n              console.log('훈습 스레드 ID가 있음:', threadId, '(from:', sentence.source_thread_id ? 'source_thread_id' : 'source_conversation_id', ')');\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToThread) {\n                console.log('훈습 스레드로 이동 중...');\n                onNavigateToThread(threadId, threadType);\n              }\n            } else {\n              console.log('훈습 스레드 ID가 없음, 페르소나 정보 찾는 중...');\n\n              // 1단계: source_message_id에서 페르소나 ID 추출 시도\n              let personaId = null;\n              if (sentence.source_message_id) {\n                const parts = sentence.source_message_id.split('_');\n                if (parts.length > 1) {\n                  const candidatePersonaId = parts[1];\n                  if (personas[candidatePersonaId]) {\n                    personaId = candidatePersonaId;\n                    console.log('source_message_id에서 페르소나 발견:', personaId);\n                  }\n                }\n              }\n\n              // 2단계: tags에서 페르소나 ID 찾기\n              if (!personaId) {\n                personaId = sentence.tags.find(tag => tag !== threadType && tag !== 'sentence' && tag !== 'proceed' && tag !== 'interpretation' && tag !== 'verbalization' && tag !== 'letter' && personas[tag]);\n                if (personaId) {\n                  console.log('태그에서 페르소나 발견:', personaId);\n                }\n              }\n              if (personaId && personas[personaId]) {\n                console.log('페르소나로 이동 준비:', personaId, '타입:', threadType);\n                sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n\n                // 해석 타입인 경우 특별 표시를 sessionStorage에 저장하여 App.tsx에서 처리하도록 함\n                if (threadType === 'interpretation') {\n                  sessionStorage.setItem('navigateToInterpretationMode', 'true');\n                }\n                if (onNavigateToPersona) {\n                  console.log('페르소나로 이동 실행:', personaId);\n                  onNavigateToPersona(personaId, 'sentence');\n                }\n              } else {\n                console.error('페르소나 정보도 찾을 수 없음');\n                console.error('sentence.tags:', sentence.tags);\n                console.error('sentence.source_message_id:', sentence.source_message_id);\n                console.error('사용 가능한 페르소나들:', Object.keys(personas));\n                alert('해당 문장의 원본 위치를 찾을 수 없습니다. 페르소나 정보를 확인할 수 없습니다.');\n              }\n            }\n          }\n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n      alert('작업 실행 중 오류가 발생했습니다: ' + error);\n    }\n    setConfirmationModal(null);\n  };\n  const togglePin = sentenceId => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n  const getPersonaName = sentence => {\n    var _sentence$source_mess5;\n    // 언어화 태그 체크\n    if (sentence.tags.includes('언어화') || sentence.tags.includes('verbalization') || (_sentence$source_mess5 = sentence.source_message_id) !== null && _sentence$source_mess5 !== void 0 && _sentence$source_mess5.includes('verbalization')) {\n      return '언어화';\n    }\n\n    // 편지 태그 체크\n    if (sentence.tags.includes('letter')) {\n      return '편지';\n    }\n\n    // source_message_id에서 페르소나 ID 추출 시도\n    if (sentence.source_message_id) {\n      const parts = sentence.source_message_id.split('_');\n      if (parts.length > 1) {\n        const personaId = parts[1];\n        const persona = personas[personaId];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n\n    // tags에서 페르소나 이름 찾기 (thread_type이 아닌 것들만)\n    const excludeTypes = ['interpretation', 'proceed', 'sentence', 'verbalization', 'letter'];\n    for (const tag of sentence.tags) {\n      if (!excludeTypes.includes(tag)) {\n        const persona = personas[tag];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n    return '시스템';\n  };\n  const getThreadTypeLabel = sentence => {\n    var _sentence$source_mess6, _sentence$source_mess7, _sentence$source_mess8, _sentence$source_mess9;\n    // source_message_id나 tags에서 스레드 타입 추출\n    if ((_sentence$source_mess6 = sentence.source_message_id) !== null && _sentence$source_mess6 !== void 0 && _sentence$source_mess6.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n      return '해석';\n    } else if ((_sentence$source_mess7 = sentence.source_message_id) !== null && _sentence$source_mess7 !== void 0 && _sentence$source_mess7.includes('proceed_') || sentence.tags.includes('proceed')) {\n      return '나아가기';\n    } else if ((_sentence$source_mess8 = sentence.source_message_id) !== null && _sentence$source_mess8 !== void 0 && _sentence$source_mess8.includes('sentence_') || sentence.tags.includes('sentence')) {\n      return '문장';\n    } else if ((_sentence$source_mess9 = sentence.source_message_id) !== null && _sentence$source_mess9 !== void 0 && _sentence$source_mess9.includes('verbalization') || sentence.tags.includes('verbalization')) {\n      return '언어화';\n    }\n    return '알수없음';\n  };\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    const {\n      type\n    } = confirmationModal;\n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 문장이 온 스레드로 이동하여 이 문장에 대해 상호작용을 시작하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '40px',\n          textAlign: 'center'\n        },\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 7\n    }, this);\n  }\n  const modalContent = getModalContent();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('prev'),\n        disabled: currentFilterIndex === 0,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n        className: \"filter-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(FilterDropdownButton, {\n          $isOpen: showFilterDropdown,\n          onClick: toggleFilterDropdown,\n          children: [currentFilter, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterDropdownMenu, {\n          $isOpen: showFilterDropdown,\n          children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(FilterDropdownItem, {\n            $isSelected: option === currentFilter,\n            onClick: () => handleFilterChange(option),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('next'),\n        disabled: currentFilterIndex === filterOptions.length - 1,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: filteredSentences.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"\\uC800\\uC7A5\\uB41C \\uBB38\\uC7A5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: \"\\uD6C8\\uC2B5 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC7A5\\uC744 \\uC800\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uD574\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SentenceGrid, {\n        children: filteredSentences.map(sentence => /*#__PURE__*/_jsxDEV(SentenceContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SentenceRow, {\n            $isPinned: pinnedSentences.has(sentence.id),\n            $isHighlighted: sentence.is_highlighted,\n            onClick: e => handleSentenceClick(e, sentence),\n            style: {\n              '--has-memo': sentence.memo_content ? '50px' : '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(SentenceContent, {\n              children: [/*#__PURE__*/_jsxDEV(SentenceText, {\n                children: sentence.sentence\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 21\n              }, this), sentence.memo_content && /*#__PURE__*/_jsxDEV(MemoPreview, {\n                children: [\"\\uD83D\\uDCDD \", sentence.memo_content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StatusIndicators, {\n              children: [sentence.is_highlighted && /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                $type: \"highlight\",\n                $color: sentence.highlight_color || 'yellow',\n                title: `하이라이트 (${sentence.highlight_color || 'yellow'})`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 23\n              }, this), sentence.memo_content && /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                $type: \"memo\",\n                title: \"\\uBA54\\uBAA8 \\uC788\\uC74C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PinIcon, {\n              $isPinned: pinnedSentences.has(sentence.id),\n              onClick: e => {\n                e.stopPropagation();\n                togglePin(sentence.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentenceMetaExternal, {\n            children: [/*#__PURE__*/_jsxDEV(PersonaLabel, {\n              children: [getPersonaName(sentence), \" - \", getThreadTypeLabel(sentence)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DateLabel, {\n              children: new Date(sentence.created_at).toLocaleDateString('ko-KR')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 17\n          }, this)]\n        }, sentence.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenuContainer, {\n      $x: contextMenu.x,\n      $y: contextMenu.y,\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('interact', contextMenu.sentence),\n        children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('delete', contextMenu.sentence),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 9\n    }, this), confirmationModal && modalContent && /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClick: () => setConfirmationModal(null),\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: modalContent.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalMessage, {\n          children: modalContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"primary\",\n            onClick: handleConfirmAction,\n            children: modalContent.confirmText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"secondary\",\n            onClick: () => setConfirmationModal(null),\n            children: modalContent.cancelText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 833,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceVaultView, \"xlwY+2vZ+cOK6w87opdElAbnx7Y=\");\n_c28 = SentenceVaultView;\nexport default SentenceVaultView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FilterDropdownButton\");\n$RefreshReg$(_c4, \"FilterDropdownMenu\");\n$RefreshReg$(_c5, \"FilterDropdownItem\");\n$RefreshReg$(_c6, \"FilterContainer\");\n$RefreshReg$(_c7, \"NavigationButton\");\n$RefreshReg$(_c8, \"ContentArea\");\n$RefreshReg$(_c9, \"SentenceGrid\");\n$RefreshReg$(_c0, \"SentenceContainer\");\n$RefreshReg$(_c1, \"SentenceRow\");\n$RefreshReg$(_c10, \"SentenceContent\");\n$RefreshReg$(_c11, \"SentenceText\");\n$RefreshReg$(_c12, \"SentenceMetaExternal\");\n$RefreshReg$(_c13, \"PersonaLabel\");\n$RefreshReg$(_c14, \"DateLabel\");\n$RefreshReg$(_c15, \"PinIcon\");\n$RefreshReg$(_c16, \"EmptyState\");\n$RefreshReg$(_c17, \"ContextMenuContainer\");\n$RefreshReg$(_c18, \"ContextMenuItem\");\n$RefreshReg$(_c19, \"ModalOverlay\");\n$RefreshReg$(_c20, \"ModalContent\");\n$RefreshReg$(_c21, \"ModalTitle\");\n$RefreshReg$(_c22, \"ModalMessage\");\n$RefreshReg$(_c23, \"ModalButtons\");\n$RefreshReg$(_c24, \"ModalButton\");\n$RefreshReg$(_c25, \"StatusIndicators\");\n$RefreshReg$(_c26, \"StatusIndicator\");\n$RefreshReg$(_c27, \"MemoPreview\");\n$RefreshReg$(_c28, \"SentenceVaultView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","sentenceApi","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","FilterDropdownButton","button","props","$isOpen","_c3","FilterDropdownMenu","_c4","FilterDropdownItem","$isSelected","_c5","FilterContainer","_c6","NavigationButton","_c7","ContentArea","_c8","SentenceGrid","_c9","SentenceContainer","_c0","SentenceRow","$isHighlighted","$isPinned","_c1","SentenceContent","_c10","SentenceText","_c11","SentenceMetaExternal","_c12","PersonaLabel","span","_c13","DateLabel","_c14","PinIcon","_c15","EmptyState","_c16","ContextMenuContainer","$y","$x","_c17","ContextMenuItem","_c18","ModalOverlay","_c19","ModalContent","_c20","ModalTitle","h3","_c21","ModalMessage","p","_c22","ModalButtons","_c23","ModalButton","$variant","_c24","StatusIndicators","_c25","StatusIndicator","$type","$color","_c26","MemoPreview","_c27","SentenceVaultView","personas","onNavigateToPersona","onNavigateToThread","onNavigateToPersonaWithSentence","_s","sentences","setSentences","filteredSentences","setFilteredSentences","currentFilter","setCurrentFilter","loading","setLoading","pinnedSentences","setPinnedSentences","Set","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","showFilterDropdown","setShowFilterDropdown","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadData","sentenceData","getVaultSentences","console","log","personaNames","Object","values","map","name","error","applyFilter","filtered","filter","s","_s$source_message_id","tags","includes","source_message_id","personaId","keys","find","id","pinned","has","unpinned","sort","a","b","Date","created_at","getTime","handleClickOutside","document","addEventListener","removeEventListener","event","target","closest","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","handleSentenceClick","sentence","preventDefault","stopPropagation","substring","clientX","clientY","x","y","handleContextMenuAction","action","type","togglePin","handleConfirmAction","_sentence$source_mess","source_conversation_id","source_thread_id","source_thread_type","sessionStorage","setItem","_sentence$source_mess2","_sentence$source_mess3","_sentence$source_mess4","threadType","threadId","parts","split","candidatePersonaId","tag","alert","deleteVaultSentence","prev","sentenceId","newSet","delete","add","getPersonaName","_sentence$source_mess5","persona","excludeTypes","getThreadTypeLabel","_sentence$source_mess6","_sentence$source_mess7","_sentence$source_mess8","_sentence$source_mess9","getModalContent","title","message","confirmText","cancelText","toggleFilterDropdown","children","style","padding","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","modalContent","onClick","disabled","className","option","is_highlighted","e","memo_content","highlight_color","toLocaleDateString","_c28","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver4/frontend/src/features/vault/components/SentenceVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, SentenceVaultItem } from '../../training/api/sentenceApi';\n\nimport { Persona } from '../../shared/types';\n\ninterface SentenceVaultViewProps {\n  personas: Record<string, Persona>;\n  onNavigateToPersona: (personaId: string, mode: 'sentence') => void;\n  onNavigateToThread: (threadId: string, threadType: string, interactionMessage?: string) => void;\n  onNavigateToPersonaWithSentence?: (personaId: string, mode: 'sentence', selectedSentence: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  sentence: SentenceVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'delete';\n  sentence: SentenceVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterDropdownButton = styled.button<{ $isOpen: boolean }>`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n\nconst FilterDropdownMenu = styled.div<{ $isOpen: boolean }>`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n\nconst FilterDropdownItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst SentenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst SentenceRow = styled.div<{ $isPinned: boolean; $isHighlighted?: boolean }>`\n  width: 100%;\n  background: ${props => props.$isHighlighted \n    ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' \n    : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'\n  };\n  border: 1px solid ${props => props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: ${props => props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    background: ${props => props.$isHighlighted\n      ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)'\n      : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'\n    };\n  }\n  \n  ${props => props.$isPinned && `\n    background: ${props.$isHighlighted \n      ? 'linear-gradient(135deg, #fff9c4 0%, #ffeaa7 100%)' \n      : 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)'\n    };\n    border-color: ${props.$isHighlighted ? '#ffc107' : '#dee2e6'};\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: ${props.$isHighlighted\n        ? 'linear-gradient(135deg, #fff3cd 0%, #ffd60a 100%)'\n        : 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)'\n      };\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: ${props.$isHighlighted ? '#ffb300' : '#adb5bd'};\n    }\n  `}\n`;\n\nconst SentenceContent = styled.div`\n  flex: 1;\n  padding-bottom: ${props => \n    // 메모가 있으면 하단 여백 추가\n    'var(--has-memo, 0px)'\n  };\n`;\n\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n\nconst SentenceMetaExternal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n\nconst PinIcon = styled.div<{ $isPinned: boolean }>`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#333' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #333;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#333' : '#666'};\n  }\n  \n  &::before {\n    content: \"📌\";\n    filter: grayscale(100%);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    color: #495057;\n    border-color: #adb5bd;\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      border-color: #6c757d;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst StatusIndicators = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 40px;\n  display: flex;\n  gap: 4px;\n  z-index: 1;\n`;\n\nconst StatusIndicator = styled.div<{ $type: 'highlight' | 'memo'; $color?: string }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  color: white;\n  font-weight: bold;\n  background: ${props => {\n    if (props.$type === 'highlight') {\n      return props.$color === 'yellow' ? '#ffc107' : \n             props.$color === 'green' ? '#28a745' :\n             props.$color === 'blue' ? '#007bff' : '#ffc107';\n    }\n    return '#6c757d'; // 메모 색상\n  }};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  \n  &::before {\n    content: ${props => props.$type === 'highlight' ? '\"H\"' : '\"M\"'};\n  }\n`;\n\nconst MemoPreview = styled.div`\n  position: absolute;\n  bottom: 8px;\n  left: 20px;\n  right: 60px;\n  background: rgba(108, 117, 125, 0.1);\n  border-radius: 8px;\n  padding: 6px 10px;\n  font-size: 12px;\n  color: #6c757d;\n  font-style: italic;\n  max-height: 40px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nconst SentenceVaultView: React.FC<SentenceVaultViewProps> = ({\n  personas,\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  const [sentences, setSentences] = useState<SentenceVaultItem[]>([]);\n  const [filteredSentences, setFilteredSentences] = useState<SentenceVaultItem[]>([]);\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedSentences, setPinnedSentences] = useState<Set<string>>(new Set());\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n      const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '언어화', '자극']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 필터 옵션에 페르소나들 추가 (props로 받은 personas 사용)\n      const personaNames = Object.values(personas).map(p => p.name);\n      setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [personas]);\n\n  const applyFilter = useCallback(() => {\n    let filtered = [...sentences];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => \n          s.tags.includes('verbalization') || \n          s.tags.includes('언어화') ||\n          s.source_message_id?.includes('verbalization')\n        );\n      } else if (currentFilter === '자극') {\n        filtered = filtered.filter(s => s.tags.includes('자극') || s.tags.includes('stimulus'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n    \n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n    setFilteredSentences([...pinned, ...unpinned]);\n  }, [sentences, currentFilter, pinnedSentences, personas]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences, applyFilter]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const handleSentenceClick = (event: React.MouseEvent, sentence: SentenceVaultItem) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    console.log('문장 클릭됨:', sentence.sentence.substring(0, 50));\n    console.log('클릭 위치:', event.clientX, event.clientY);\n    \n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n    \n    console.log('컨텍스트 메뉴 설정됨');\n  };\n\n  const handleContextMenuAction = (action: string, sentence: SentenceVaultItem) => {\n    console.log('컨텍스트 메뉴 액션:', action);\n    setContextMenu(null);\n    \n    switch (action) {\n      case 'interact':\n      case 'delete':\n        setConfirmationModal({ type: action as any, sentence });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    \n    const { type, sentence } = confirmationModal;\n    \n    try {\n      switch (type) {\n        case 'interact':\n          console.log('=== 상호작용 하기 시작 ===');\n          console.log('문장 데이터:', sentence);\n          console.log('tags:', sentence.tags);\n          console.log('source_message_id:', sentence.source_message_id);\n          console.log('source_conversation_id:', sentence.source_conversation_id);\n          console.log('source_thread_id:', sentence.source_thread_id);\n          console.log('source_thread_type:', sentence.source_thread_type);\n          console.log('사용 가능한 페르소나들:', Object.keys(personas));\n          \n          // 해당 문장의 출처 스레드로 이동하면서 입력창에 \\\"문장에 대해\\\" 형태로 설정\n          if (sentence.tags.includes('verbalization') || sentence.tags.includes('언어화') || sentence.source_message_id?.includes('verbalization')) {\n            console.log('언어화 문장으로 인식됨');\n            // 언어화에서 온 문장인 경우 - 언어화 스레드로 이동\n            if (sentence.source_conversation_id && sentence.source_conversation_id !== 'verbalization_chat') {\n              console.log('언어화 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToThread) {\n                console.log('언어화 스레드로 이동 중...');\n                onNavigateToThread(sentence.source_conversation_id, 'verbalization');\n              }\n            } else {\n              console.log('언어화 스레드 ID가 없어서 언어화 모드로만 전환');\n              // source_conversation_id가 없으면 언어화 모드로만 전환\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToPersona) {\n                console.log('언어화 페르소나로 이동 중...');\n                // 언어화는 verbalization ID 사용\n                onNavigateToPersona('verbalization', 'sentence');\n              }\n            }\n          } else {\n            console.log('훈습 문장으로 인식됨');\n            // 훈습에서 온 문장인 경우 - source_message_id에서 스레드 타입 식별\n            let threadType = 'interpretation'; // 기본값\n            \n            if (sentence.source_message_id?.includes('sentence_') || sentence.tags.includes('sentence')) {\n              threadType = 'sentence';\n            } else if (sentence.source_message_id?.includes('proceed_') || sentence.tags.includes('proceed')) {\n              threadType = 'proceed';\n            } else if (sentence.source_message_id?.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n              threadType = 'interpretation';\n            }\n            \n            console.log('식별된 스레드 타입:', threadType);\n            \n            // 스레드 ID 우선순위: source_thread_id > source_conversation_id\n            const threadId = sentence.source_thread_id || sentence.source_conversation_id;\n            \n            if (threadId) {\n              console.log('훈습 스레드 ID가 있음:', threadId, '(from:', sentence.source_thread_id ? 'source_thread_id' : 'source_conversation_id', ')');\n              sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n              if (onNavigateToThread) {\n                console.log('훈습 스레드로 이동 중...');\n                onNavigateToThread(threadId, threadType);\n              }\n            } else {\n              console.log('훈습 스레드 ID가 없음, 페르소나 정보 찾는 중...');\n              \n              // 1단계: source_message_id에서 페르소나 ID 추출 시도\n              let personaId = null;\n              if (sentence.source_message_id) {\n                const parts = sentence.source_message_id.split('_');\n                if (parts.length > 1) {\n                  const candidatePersonaId = parts[1];\n                  if (personas[candidatePersonaId]) {\n                    personaId = candidatePersonaId;\n                    console.log('source_message_id에서 페르소나 발견:', personaId);\n                  }\n                }\n              }\n              \n              // 2단계: tags에서 페르소나 ID 찾기\n              if (!personaId) {\n                personaId = sentence.tags.find(tag => \n                  tag !== threadType && \n                  tag !== 'sentence' && \n                  tag !== 'proceed' && \n                  tag !== 'interpretation' && \n                  tag !== 'verbalization' &&\n                  tag !== 'letter' &&\n                  personas[tag]\n                );\n                if (personaId) {\n                  console.log('태그에서 페르소나 발견:', personaId);\n                }\n              }\n              \n              if (personaId && personas[personaId]) {\n                console.log('페르소나로 이동 준비:', personaId, '타입:', threadType);\n                sessionStorage.setItem('selectedSentenceForInput', `\"${sentence.sentence}\"에 대해 `);\n                \n                // 해석 타입인 경우 특별 표시를 sessionStorage에 저장하여 App.tsx에서 처리하도록 함\n                if (threadType === 'interpretation') {\n                  sessionStorage.setItem('navigateToInterpretationMode', 'true');\n                }\n                \n                if (onNavigateToPersona) {\n                  console.log('페르소나로 이동 실행:', personaId);\n                  onNavigateToPersona(personaId, 'sentence');\n                }\n              } else {\n                console.error('페르소나 정보도 찾을 수 없음');\n                console.error('sentence.tags:', sentence.tags);\n                console.error('sentence.source_message_id:', sentence.source_message_id);\n                console.error('사용 가능한 페르소나들:', Object.keys(personas));\n                alert('해당 문장의 원본 위치를 찾을 수 없습니다. 페르소나 정보를 확인할 수 없습니다.');\n              }\n            }\n          }\n          \n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n      alert('작업 실행 중 오류가 발생했습니다: ' + error);\n    }\n    \n    setConfirmationModal(null);\n  };\n\n  const togglePin = (sentenceId: string) => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n\n\n\n  const getPersonaName = (sentence: SentenceVaultItem): string => {\n    // 언어화 태그 체크\n    if (sentence.tags.includes('언어화') || \n        sentence.tags.includes('verbalization') ||\n        sentence.source_message_id?.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    // 편지 태그 체크\n    if (sentence.tags.includes('letter')) {\n      return '편지';\n    }\n    \n    // source_message_id에서 페르소나 ID 추출 시도\n    if (sentence.source_message_id) {\n      const parts = sentence.source_message_id.split('_');\n      if (parts.length > 1) {\n        const personaId = parts[1];\n        const persona = personas[personaId];\n        if (persona) {\n          return persona.name;\n        }\n      }\n    }\n    \n    // tags에서 페르소나 이름 찾기 (thread_type이 아닌 것들만)\n    const excludeTypes = ['interpretation', 'proceed', 'sentence', 'verbalization', 'letter'];\n    for (const tag of sentence.tags) {\n      if (!excludeTypes.includes(tag)) {\n      const persona = personas[tag];\n      if (persona) {\n        return persona.name;\n        }\n      }\n    }\n    \n    return '시스템';\n  };\n\n  const getThreadTypeLabel = (sentence: SentenceVaultItem): string => {\n    // source_message_id나 tags에서 스레드 타입 추출\n    if (sentence.source_message_id?.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n      return '해석';\n    } else if (sentence.source_message_id?.includes('proceed_') || sentence.tags.includes('proceed')) {\n      return '나아가기';\n    } else if (sentence.source_message_id?.includes('sentence_') || sentence.tags.includes('sentence')) {\n      return '문장';\n    } else if (sentence.source_message_id?.includes('verbalization') || sentence.tags.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    return '알수없음';\n  };\n\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    \n    const { type } = confirmationModal;\n    \n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 문장이 온 스레드로 이동하여 이 문장에 대해 상호작용을 시작하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: '40px', textAlign: 'center' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  const modalContent = getModalContent();\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <FilterContainer className=\"filter-dropdown\">\n          <FilterDropdownButton\n            $isOpen={showFilterDropdown}\n            onClick={toggleFilterDropdown}\n          >\n            {currentFilter}\n            <span className=\"arrow\">▼</span>\n          </FilterDropdownButton>\n          <FilterDropdownMenu $isOpen={showFilterDropdown}>\n            {filterOptions.map(option => (\n              <FilterDropdownItem\n                key={option}\n                $isSelected={option === currentFilter}\n                onClick={() => handleFilterChange(option)}\n              >\n                {option}\n              </FilterDropdownItem>\n            ))}\n          </FilterDropdownMenu>\n        </FilterContainer>\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n      </Header>\n\n      <ContentArea>\n        {filteredSentences.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 문장이 없습니다</div>\n            <div className=\"description\">\n              훈습 페이지에서 문장을 저장고에 저장해보세요\n            </div>\n          </EmptyState>\n        ) : (\n          <SentenceGrid>\n            {filteredSentences.map(sentence => (\n              <SentenceContainer key={sentence.id}>\n                <SentenceRow\n                  $isPinned={pinnedSentences.has(sentence.id)}\n                  $isHighlighted={sentence.is_highlighted}\n                  onClick={(e) => handleSentenceClick(e, sentence)}\n                  style={{\n                    '--has-memo': sentence.memo_content ? '50px' : '0px'\n                  } as any}\n                >\n                  <SentenceContent>\n                    <SentenceText>{sentence.sentence}</SentenceText>\n                    {sentence.memo_content && (\n                      <MemoPreview>\n                        📝 {sentence.memo_content}\n                      </MemoPreview>\n                    )}\n                  </SentenceContent>\n                  \n                  <StatusIndicators>\n                    {sentence.is_highlighted && (\n                      <StatusIndicator \n                        $type=\"highlight\" \n                        $color={sentence.highlight_color || 'yellow'}\n                        title={`하이라이트 (${sentence.highlight_color || 'yellow'})`}\n                      />\n                    )}\n                    {sentence.memo_content && (\n                      <StatusIndicator \n                        $type=\"memo\" \n                        title=\"메모 있음\"\n                      />\n                    )}\n                  </StatusIndicators>\n                  \n                  <PinIcon\n                    $isPinned={pinnedSentences.has(sentence.id)}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      togglePin(sentence.id);\n                    }}\n                  />\n                </SentenceRow>\n                <SentenceMetaExternal>\n                  <PersonaLabel>{getPersonaName(sentence)} - {getThreadTypeLabel(sentence)}</PersonaLabel>\n                  <DateLabel>{new Date(sentence.created_at).toLocaleDateString('ko-KR')}</DateLabel>\n                </SentenceMetaExternal>\n              </SentenceContainer>\n            ))}\n          </SentenceGrid>\n        )}\n      </ContentArea>\n\n      {/* 컨텍스트 메뉴 */}\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem onClick={() => handleContextMenuAction('interact', contextMenu.sentence)}>\n            상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('delete', contextMenu.sentence)}>\n            삭제\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {/* 확인 모달 */}\n      {confirmationModal && modalContent && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>{modalContent.title}</ModalTitle>\n            <ModalMessage>{modalContent.message}</ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {modalContent.confirmText}\n              </ModalButton>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                {modalContent.cancelText}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default SentenceVaultView; "],"mappings":"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ACA,sBAAsB;AAC1B,CACC;AAACuB,IAAA,GANID,eAAe;AAQrB,MAAME,YAAY,GAAGnC,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+B,IAAA,GANID,YAAY;AAQlB,MAAME,oBAAoB,GAAGrC,MAAM,CAACK,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiC,IAAA,GAPID,oBAAoB;AAS1B,MAAME,YAAY,GAAGvC,MAAM,CAACwC,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GANIF,YAAY;AAQlB,MAAMG,SAAS,GAAG1C,MAAM,CAACwC,IAAI;AAC7B;AACA;AACA,CAAC;AAACG,IAAA,GAHID,SAAS;AAKf,MAAME,OAAO,GAAG5C,MAAM,CAACK,GAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWM,KAAK,IAAIA,KAAK,CAACoB,SAAS,GAAG,MAAM,GAAG,aAAa;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,WAAW;AACf,aAAalB,KAAK,IAAIA,KAAK,CAACoB,SAAS,GAAG,MAAM,GAAG,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACc,IAAA,GA7BID,OAAO;AA+Bb,MAAME,UAAU,GAAG9C,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0C,IAAA,GAnBID,UAAU;AAqBhB,MAAME,oBAAoB,GAAGhD,MAAM,CAACK,GAA+B;AACnE;AACA,SAASM,KAAK,IAAIA,KAAK,CAACsC,EAAE;AAC1B,UAAUtC,KAAK,IAAIA,KAAK,CAACuC,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIH,oBAAoB;AAa1B,MAAMI,eAAe,GAAGpD,MAAM,CAACK,GAAG;AAClC;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}