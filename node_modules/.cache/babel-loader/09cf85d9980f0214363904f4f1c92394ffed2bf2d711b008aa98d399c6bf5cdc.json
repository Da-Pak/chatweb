{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\ProceedView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput from './MessageInput';\nimport LoadingMessage from './LoadingMessage';\nimport { chatApi } from '../api/chatApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n_c = Container;\nconst ProceedSection = styled.div`\n  padding: 24px;\n  border-bottom: 2px solid #e0e0e0;\n  background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%);\n`;\n_c2 = ProceedSection;\nconst ProceedTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c3 = ProceedTitle;\nconst ProceedContent = styled.div`\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  padding: 20px;\n  line-height: 1.6;\n  color: #555;\n  font-size: 14px;\n  white-space: pre-line;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n`;\n_c4 = ProceedContent;\nconst ThreadsSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c5 = ThreadsSection;\nconst ThreadsList = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\n_c6 = ThreadsList;\nconst ThreadItem = styled.div`\n  padding: 12px 16px;\n  border: 1px solid ${props => props.isSelected ? '#ff9800' : '#e0e0e0'};\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#fff3e0' : 'white'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #ff9800;\n    background: #fff3e0;\n  }\n`;\n_c7 = ThreadItem;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n`;\n_c8 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\n_c9 = ThreadTime;\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c0 = ChatSection;\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c1 = ChatMessages;\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: 1px solid #e0e0e0;\n  background: #ffffff;\n`;\n_c10 = ChatInputSection;\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n_c11 = EmptyChat;\nconst ProceedView = ({\n  personaId,\n  personaName,\n  proceedContent,\n  threads,\n  onThreadUpdate\n}) => {\n  _s();\n  const [selectedThread, setSelectedThread] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localThreads, setLocalThreads] = useState(threads);\n  const chatMessagesRef = useRef(null);\n  const messageInputRef = useRef(null);\n\n  // 나아가기 타입의 스레드만 필터링\n  const proceedThreads = localThreads.filter(thread => thread.thread_type === 'proceed');\n  useEffect(() => {\n    setLocalThreads(threads);\n    // 첫 번째 나아가기 스레드를 자동 선택\n    const firstProceedThread = threads.find(t => t.thread_type === 'proceed');\n    if (firstProceedThread && !selectedThread) {\n      setSelectedThread(firstProceedThread);\n    }\n  }, [threads]);\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.messages]);\n  const handleThreadSelect = thread => {\n    setSelectedThread(thread);\n  };\n  const handleSendMessage = async message => {\n    if (!selectedThread) return false;\n    setIsLoading(true);\n    try {\n      const response = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: message\n      });\n      if (response.data && response.data.response) {\n        // 스레드 업데이트\n        const updatedThreads = localThreads.map(t => t.id === selectedThread.id ? {\n          ...t,\n          messages: [...t.messages, {\n            role: 'user',\n            content: message,\n            timestamp: new Date().toISOString()\n          }, response.data.response],\n          updated_at: new Date().toISOString()\n        } : t);\n        setLocalThreads(updatedThreads);\n        onThreadUpdate(updatedThreads);\n\n        // 선택된 스레드 업데이트\n        const updatedThread = updatedThreads.find(t => t.id === selectedThread.id);\n        if (updatedThread) {\n          setSelectedThread(updatedThread);\n        }\n        setIsLoading(false);\n        return true;\n      } else {\n        setIsLoading(false);\n        return false;\n      }\n    } catch (error) {\n      console.error('나아가기 채팅 오류:', error);\n      setIsLoading(false);\n      return false;\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ProceedSection, {\n      children: [/*#__PURE__*/_jsxDEV(ProceedTitle, {\n        children: [\"\\uD83C\\uDFAF \\uB098\\uC544\\uAC00\\uAE30 - \", personaName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProceedContent, {\n        children: proceedContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThreadsSection, {\n      children: [/*#__PURE__*/_jsxDEV(ThreadsList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '12px',\n            fontSize: '16px',\n            color: '#333'\n          },\n          children: \"\\uB098\\uC544\\uAC00\\uAE30 \\uC2A4\\uB808\\uB4DC\\uB4E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), proceedThreads.map(thread => /*#__PURE__*/_jsxDEV(ThreadItem, {\n          isSelected: (selectedThread === null || selectedThread === void 0 ? void 0 : selectedThread.id) === thread.id,\n          onClick: () => handleThreadSelect(thread),\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: [\"\\uB098\\uC544\\uAC00\\uAE30 #\", proceedThreads.indexOf(thread) + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: [formatTime(thread.created_at), \" \\u2022 \", thread.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n        children: selectedThread ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n            ref: chatMessagesRef,\n            children: [selectedThread.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '12px',\n                border: '1px solid #e0e0e0',\n                borderRadius: '8px',\n                background: message.role === 'user' ? '#f0f0f0' : 'white',\n                marginBottom: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '8px',\n                  color: '#ff9800'\n                },\n                children: message.role === 'user' ? '사용자' : message.persona_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: 'pre-line',\n                  lineHeight: '1.6'\n                },\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#999',\n                  marginTop: '8px'\n                },\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChatInputSection, {\n            children: /*#__PURE__*/_jsxDEV(MessageInput, {\n              ref: messageInputRef,\n              onSendMessage: handleSendMessage,\n              disabled: isLoading,\n              placeholder: \"\\uB098\\uC544\\uAC00\\uAE30\\uC5D0 \\uB300\\uD574 \\uB354 \\uC790\\uC138\\uD788 \\uC9C8\\uBB38\\uD574\\uBCF4\\uC138\\uC694...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(EmptyChat, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uB098\\uC544\\uAC00\\uAE30 \\uC2A4\\uB808\\uB4DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '8px',\n              fontSize: '12px'\n            },\n            children: \"\\uC2A4\\uB808\\uB4DC\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(ProceedView, \"jGJr4d6B02ShRS7K45UtdYElZJ4=\");\n_c12 = ProceedView;\nexport default ProceedView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ProceedSection\");\n$RefreshReg$(_c3, \"ProceedTitle\");\n$RefreshReg$(_c4, \"ProceedContent\");\n$RefreshReg$(_c5, \"ThreadsSection\");\n$RefreshReg$(_c6, \"ThreadsList\");\n$RefreshReg$(_c7, \"ThreadItem\");\n$RefreshReg$(_c8, \"ThreadTitle\");\n$RefreshReg$(_c9, \"ThreadTime\");\n$RefreshReg$(_c0, \"ChatSection\");\n$RefreshReg$(_c1, \"ChatMessages\");\n$RefreshReg$(_c10, \"ChatInputSection\");\n$RefreshReg$(_c11, \"EmptyChat\");\n$RefreshReg$(_c12, \"ProceedView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","MessageInput","LoadingMessage","chatApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","ProceedSection","_c2","ProceedTitle","h2","_c3","ProceedContent","_c4","ThreadsSection","_c5","ThreadsList","_c6","ThreadItem","props","isSelected","_c7","ThreadTitle","_c8","ThreadTime","_c9","ChatSection","_c0","ChatMessages","_c1","ChatInputSection","_c10","EmptyChat","_c11","ProceedView","personaId","personaName","proceedContent","threads","onThreadUpdate","_s","selectedThread","setSelectedThread","isLoading","setIsLoading","localThreads","setLocalThreads","chatMessagesRef","messageInputRef","proceedThreads","filter","thread","thread_type","firstProceedThread","find","t","current","scrollTop","scrollHeight","messages","handleThreadSelect","handleSendMessage","message","response","chatWithThread","thread_id","id","user_message","data","updatedThreads","map","role","content","timestamp","Date","toISOString","updated_at","updatedThread","error","console","formatTime","toLocaleTimeString","hour","minute","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","fontSize","color","onClick","indexOf","created_at","length","ref","index","padding","border","borderRadius","background","fontWeight","persona_name","whiteSpace","lineHeight","marginTop","onSendMessage","disabled","placeholder","_c12","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/ProceedView.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput, { MessageInputRef } from './MessageInput';\nimport Message from './Message';\nimport LoadingMessage from './LoadingMessage';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, ThreadChatResponse } from '../types';\n\ninterface ProceedViewProps {\n  personaId: string;\n  personaName: string;\n  proceedContent: string;\n  threads: TrainingThread[];\n  onThreadUpdate: (threads: TrainingThread[]) => void;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n\nconst ProceedSection = styled.div`\n  padding: 24px;\n  border-bottom: 2px solid #e0e0e0;\n  background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%);\n`;\n\nconst ProceedTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst ProceedContent = styled.div`\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 12px;\n  padding: 20px;\n  line-height: 1.6;\n  color: #555;\n  font-size: 14px;\n  white-space: pre-line;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n`;\n\nconst ThreadsSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ThreadsList = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\n\nconst ThreadItem = styled.div<{ isSelected: boolean }>`\n  padding: 12px 16px;\n  border: 1px solid ${props => props.isSelected ? '#ff9800' : '#e0e0e0'};\n  border-radius: 8px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  background: ${props => props.isSelected ? '#fff3e0' : 'white'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #ff9800;\n    background: #fff3e0;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\n\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: 1px solid #e0e0e0;\n  background: #ffffff;\n`;\n\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst ProceedView: React.FC<ProceedViewProps> = ({\n  personaId,\n  personaName,\n  proceedContent,\n  threads,\n  onThreadUpdate,\n}) => {\n  const [selectedThread, setSelectedThread] = useState<TrainingThread | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localThreads, setLocalThreads] = useState<TrainingThread[]>(threads);\n  const chatMessagesRef = useRef<HTMLDivElement>(null);\n  const messageInputRef = useRef<MessageInputRef>(null);\n\n  // 나아가기 타입의 스레드만 필터링\n  const proceedThreads = localThreads.filter(thread => thread.thread_type === 'proceed');\n\n  useEffect(() => {\n    setLocalThreads(threads);\n    // 첫 번째 나아가기 스레드를 자동 선택\n    const firstProceedThread = threads.find(t => t.thread_type === 'proceed');\n    if (firstProceedThread && !selectedThread) {\n      setSelectedThread(firstProceedThread);\n    }\n  }, [threads]);\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [selectedThread?.messages]);\n\n  const handleThreadSelect = (thread: TrainingThread) => {\n    setSelectedThread(thread);\n  };\n\n  const handleSendMessage = async (message: string): Promise<boolean> => {\n    if (!selectedThread) return false;\n\n    setIsLoading(true);\n    try {\n      const response = await chatApi.chatWithThread({\n        thread_id: selectedThread.id,\n        user_message: message\n      });\n\n      if (response.data && response.data.response) {\n        // 스레드 업데이트\n        const updatedThreads = localThreads.map(t => \n          t.id === selectedThread.id \n            ? {\n                ...t,\n                messages: [...t.messages, \n                  {\n                    role: 'user' as const,\n                    content: message,\n                    timestamp: new Date().toISOString()\n                  },\n                  response.data!.response\n                ],\n                updated_at: new Date().toISOString()\n              }\n            : t\n        );\n        \n        setLocalThreads(updatedThreads);\n        onThreadUpdate(updatedThreads);\n        \n        // 선택된 스레드 업데이트\n        const updatedThread = updatedThreads.find(t => t.id === selectedThread.id);\n        if (updatedThread) {\n          setSelectedThread(updatedThread);\n        }\n        \n        setIsLoading(false);\n        return true;\n      } else {\n        setIsLoading(false);\n        return false;\n      }\n    } catch (error) {\n      console.error('나아가기 채팅 오류:', error);\n      setIsLoading(false);\n      return false;\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  return (\n    <Container>\n      <ProceedSection>\n        <ProceedTitle>\n          🎯 나아가기 - {personaName}\n        </ProceedTitle>\n        <ProceedContent>\n          {proceedContent}\n        </ProceedContent>\n      </ProceedSection>\n\n      <ThreadsSection>\n        <ThreadsList>\n          <h3 style={{ marginBottom: '12px', fontSize: '16px', color: '#333' }}>\n            나아가기 스레드들\n          </h3>\n          {proceedThreads.map((thread) => (\n            <ThreadItem\n              key={thread.id}\n              isSelected={selectedThread?.id === thread.id}\n              onClick={() => handleThreadSelect(thread)}\n            >\n              <ThreadTitle>\n                나아가기 #{proceedThreads.indexOf(thread) + 1}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItem>\n          ))}\n        </ThreadsList>\n\n        <ChatSection>\n          {selectedThread ? (\n            <>\n              <ChatMessages ref={chatMessagesRef}>\n                {selectedThread.messages.map((message, index) => (\n                  <div key={index} style={{ \n                    padding: '12px', \n                    border: '1px solid #e0e0e0', \n                    borderRadius: '8px',\n                    background: message.role === 'user' ? '#f0f0f0' : 'white',\n                    marginBottom: '8px'\n                  }}>\n                    <div style={{ fontWeight: 'bold', marginBottom: '8px', color: '#ff9800' }}>\n                      {message.role === 'user' ? '사용자' : message.persona_name}\n                    </div>\n                    <div style={{ whiteSpace: 'pre-line', lineHeight: '1.6' }}>\n                      {message.content}\n                    </div>\n                    <div style={{ fontSize: '12px', color: '#999', marginTop: '8px' }}>\n                      {formatTime(message.timestamp)}\n                    </div>\n                  </div>\n                ))}\n                {isLoading && <LoadingMessage />}\n              </ChatMessages>\n              \n              <ChatInputSection>\n                <MessageInput\n                  ref={messageInputRef}\n                  onSendMessage={handleSendMessage}\n                  disabled={isLoading}\n                  placeholder=\"나아가기에 대해 더 자세히 질문해보세요...\"\n                />\n              </ChatInputSection>\n            </>\n          ) : (\n            <EmptyChat>\n              <div>나아가기 스레드를 선택해주세요</div>\n              <div style={{ marginTop: '8px', fontSize: '12px' }}>\n                스레드를 클릭하여 대화를 시작할 수 있습니다\n              </div>\n            </EmptyChat>\n          )}\n        </ChatSection>\n      </ThreadsSection>\n    </Container>\n  );\n};\n\nexport default ProceedView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}