{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\training\\\\components\\\\InteractionHistoryView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MessageInput from '../../shared/components/MessageInput';\nimport Message from '../../shared/components/Message';\nimport SelectableMessage from './SelectableMessage';\nimport FloatingActionButton from '../../shared/components/FloatingActionButton';\nimport LoadingMessage from '../../shared/components/LoadingMessage';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n`;\n_c = Container;\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c2 = ChatSection;\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c3 = ChatMessages;\nconst ChatInputSection = styled.div`\n  padding: 16px 20px;\n  border-top: none;\n  background: #ffffff;\n`;\n_c4 = ChatInputSection;\nconst EmptyChat = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #999;\n  font-size: 14px;\n  text-align: center;\n`;\n_c5 = EmptyChat;\nconst InteractionOverview = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background: #f8f9fa;\n`;\n_c6 = InteractionOverview;\nconst OverviewTitle = styled.h3`\n  margin: 0 0 16px 0;\n  color: #333;\n  font-size: 18px;\n  font-weight: 600;\n`;\n_c7 = OverviewTitle;\nconst OverviewStats = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 16px;\n`;\n_c8 = OverviewStats;\nconst StatItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  min-width: 80px;\n`;\n_c9 = StatItem;\nconst StatValue = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  color: #2196f3;\n`;\n_c0 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 12px;\n  color: #666;\n  margin-top: 4px;\n`;\n_c1 = StatLabel;\nconst ThreadPreview = styled.div`\n  margin-top: 16px;\n`;\n_c10 = ThreadPreview;\nconst ThreadPreviewTitle = styled.h4`\n  margin: 0 0 12px 0;\n  color: #555;\n  font-size: 14px;\n  font-weight: 600;\n`;\n_c11 = ThreadPreviewTitle;\nconst RecentThreads = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n_c12 = RecentThreads;\nconst ThreadItem = styled.div`\n  padding: 12px;\n  background: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: #2196f3;\n    box-shadow: 0 2px 8px rgba(33, 150, 243, 0.1);\n  }\n`;\n_c13 = ThreadItem;\nconst ThreadType = styled.div`\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 10px;\n  font-weight: 600;\n  margin-bottom: 4px;\n  color: white;\n  background: ${props => {\n  switch (props.type) {\n    case 'interpretation':\n      return '#6c757d';\n    case 'proceed':\n      return '#ff9800';\n    case 'sentence':\n      return '#4caf50';\n    default:\n      return '#999';\n  }\n}};\n`;\n_c14 = ThreadType;\nconst ThreadContent = styled.div`\n  font-size: 13px;\n  color: #555;\n  line-height: 1.4;\n  margin-bottom: 4px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n_c15 = ThreadContent;\nconst ThreadTime = styled.div`\n  font-size: 11px;\n  color: #999;\n`;\n\n// 복사 알림을 위한 토스트 컴포넌트\n_c16 = ThreadTime;\nconst Toast = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #6c757d;\n  color: white;\n  padding: 12px 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(120%)'};\n  transition: transform 0.3s ease;\n  font-size: 14px;\n  font-weight: 500;\n`;\n_c17 = Toast;\nconst InteractionHistoryView = ({\n  personaId,\n  personaName,\n  interactionRecords,\n  selectedThread,\n  onThreadUpdate,\n  onSwitchToMode,\n  onGenerateNewInterpretation\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [localSelectedThread, setLocalSelectedThread] = useState(selectedThread || null);\n  const chatMessagesRef = useRef(null);\n  const messageInputRef = useRef(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  // 문장 선택 관련 상태\n  const [selectedSentences, setSelectedSentences] = useState(new Set());\n  const [highlightedSentences, setHighlightedSentences] = useState(new Set());\n  const [memos, setMemos] = useState({});\n  const [isSentenceModeActive, setIsSentenceModeActive] = useState(false);\n  const [editingMessageIndex, setEditingMessageIndex] = useState(null);\n\n  // 현재 페르소나의 상호작용 기록 찾기\n  const currentRecord = interactionRecords.find(record => record.persona_id === personaId);\n\n  // 통계 계산\n  const stats = currentRecord ? {\n    totalThreads: currentRecord.threads.length,\n    interpretationThreads: currentRecord.threads.filter(t => t.thread_type === 'interpretation').length,\n    proceedThreads: currentRecord.threads.filter(t => t.thread_type === 'proceed').length,\n    sentenceThreads: currentRecord.threads.filter(t => t.thread_type === 'sentence').length\n  } : {\n    totalThreads: 0,\n    interpretationThreads: 0,\n    proceedThreads: 0,\n    sentenceThreads: 0\n  };\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [localSelectedThread === null || localSelectedThread === void 0 ? void 0 : localSelectedThread.messages]);\n  const handleSendMessage = async message => {\n    if (!localSelectedThread) return false;\n\n    // 1. 사용자 메시지를 즉시 UI에 추가\n    const userMessage = {\n      role: 'user',\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n    const updatedThread = {\n      ...localSelectedThread,\n      messages: [...localSelectedThread.messages, userMessage],\n      updated_at: new Date().toISOString()\n    };\n    setLocalSelectedThread(updatedThread);\n\n    // 2. 로딩 상태 시작\n    setIsLoading(true);\n    try {\n      // 3. 백엔드 API 호출\n      const response = await chatApi.chatWithThread({\n        thread_id: localSelectedThread.id,\n        user_message: message\n      });\n      if (response.data && response.data.response) {\n        // 4. AI 응답을 UI에 추가\n        const assistantMessage = {\n          role: 'assistant',\n          content: response.data.response.content,\n          timestamp: response.data.response.timestamp,\n          persona_id: response.data.response.persona_id || personaId,\n          persona_name: response.data.response.persona_name || personaName\n        };\n        const finalUpdatedThread = {\n          ...updatedThread,\n          messages: [...updatedThread.messages, assistantMessage],\n          updated_at: response.data.thread_updated_at || new Date().toISOString()\n        };\n        setLocalSelectedThread(finalUpdatedThread);\n\n        // 5. 로컬 스레드 목록도 업데이트\n        handleRefreshThreads();\n        setIsLoading(false);\n        return true;\n      } else {\n        console.error('상호작용 기록 채팅 응답 오류:', response);\n        setIsLoading(false);\n        return false;\n      }\n    } catch (error) {\n      console.error('상호작용 기록 채팅 오류:', error);\n      setIsLoading(false);\n      return false;\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // 토스트 메시지 표시 함수\n  const showCopyToast = message => {\n    setToastMessage(message);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 3000);\n  };\n\n  // 텍스트 복사 유틸리티 함수\n  const copyToClipboard = async (text, successMessage) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      showCopyToast(successMessage);\n    } catch (error) {\n      console.error('복사 실패:', error);\n      showCopyToast('복사 실패');\n    }\n  };\n\n  // 메시지 복사 기능\n  const handleCopyMessage = async messageContent => {\n    await copyToClipboard(messageContent, '메시지가 복사되었습니다');\n  };\n\n  // 메시지 수정 관련 함수들\n  const handleStartEdit = messageIndex => {\n    setEditingMessageIndex(messageIndex);\n  };\n  const handleEditMessage = async (messageIndex, newContent) => {\n    // 메시지 수정 기능 구현 예정\n    setEditingMessageIndex(null);\n    showCopyToast('메시지가 수정되었습니다');\n    return true;\n  };\n  const handleCancelEdit = () => {\n    setEditingMessageIndex(null);\n  };\n\n  // 문장 선택 관련 함수들\n  const handleToggleSelect = sentenceId => {\n    setSelectedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n  const handleMemoChange = async (sentenceId, memo) => {\n    setMemos(prev => ({\n      ...prev,\n      [sentenceId]: memo\n    }));\n  };\n  const handleDeleteMemo = async sentenceId => {\n    setMemos(prev => {\n      const newMemos = {\n        ...prev\n      };\n      delete newMemos[sentenceId];\n      return newMemos;\n    });\n  };\n\n  // 액션 핸들러들\n  const handleSunAction = async () => {\n    if (onGenerateNewInterpretation) {\n      onGenerateNewInterpretation();\n    }\n  };\n  const handlePersonAction = async () => {\n    // 나아가기 프롬프트를 입력창에 삽입하고 현재 Assistant의 마지막 채팅 내용을 나아가기 사이드바에 저장\n    if (!personaId) return;\n    const proceedPrompt = \"좋아. 너의 답변에 근거하여, 내가 나아가야 할 방향은?\";\n\n    // 입력창에 프롬프트 삽입\n    if (messageInputRef.current) {\n      messageInputRef.current.insertText(proceedPrompt);\n    }\n    showCopyToast('나아가기 프롬프트가 입력창에 추가되었습니다');\n    try {\n      // 현재 Assistant의 마지막 채팅 내용만 사용\n      let contentToSave = ''; // 기본값\n\n      if (localSelectedThread !== null && localSelectedThread !== void 0 && localSelectedThread.messages && localSelectedThread.messages.length > 0) {\n        // Assistant의 마지막 메시지 찾기\n        const lastAssistantMessage = localSelectedThread.messages.slice().reverse().find(msg => msg.role === 'assistant');\n        if (lastAssistantMessage) {\n          contentToSave = lastAssistantMessage.content;\n        }\n      }\n      if (contentToSave) {\n        // chatApi를 통해 Assistant의 마지막 채팅 내용을 나아가기 사이드바에 저장\n        const response = await chatApi.saveCurrentAsProceed(personaId, contentToSave);\n        if (response.data) {\n          // 스레드 새로고침\n          handleRefreshThreads();\n          showCopyToast('현재 Assistant 응답이 나아가기에 저장되었습니다');\n        }\n      } else {\n        showCopyToast('저장할 Assistant 응답이 없습니다');\n      }\n    } catch (error) {\n      console.error('나아가기 저장 중 오류:', error);\n      showCopyToast('나아가기 저장에 실패했습니다');\n    }\n  };\n  const handleDocumentAction = async () => {\n    // 문장 프롬프트를 입력창에 삽입하고 현재 Assistant의 마지막 채팅 내용을 문장 사이드바에 저장\n    if (!personaId) return;\n    const sentencePrompt = \"네 답변을 세 문장으로 통찰적, 명제형, 핵심적으로 짧게 요약 (in bullet style)\";\n\n    // 입력창에 프롬프트 삽입\n    if (messageInputRef.current) {\n      messageInputRef.current.insertText(sentencePrompt);\n    }\n    showCopyToast('문장 프롬프트가 입력창에 추가되었습니다');\n    try {\n      // 현재 Assistant의 마지막 채팅 내용만 사용\n      let contentToSave = ''; // 기본값\n\n      if (localSelectedThread !== null && localSelectedThread !== void 0 && localSelectedThread.messages && localSelectedThread.messages.length > 0) {\n        // Assistant의 마지막 메시지 찾기\n        const lastAssistantMessage = localSelectedThread.messages.slice().reverse().find(msg => msg.role === 'assistant');\n        if (lastAssistantMessage) {\n          contentToSave = lastAssistantMessage.content;\n        }\n      }\n      if (contentToSave) {\n        // chatApi를 통해 Assistant의 마지막 채팅 내용을 문장 사이드바에 저장\n        const response = await chatApi.saveCurrentAsSentence(personaId, contentToSave);\n        if (response.data) {\n          // 스레드 새로고침\n          handleRefreshThreads();\n          showCopyToast('현재 Assistant 응답이 문장에 저장되었습니다');\n        }\n      } else {\n        showCopyToast('저장할 Assistant 응답이 없습니다');\n      }\n    } catch (error) {\n      console.error('문장 저장 중 오류:', error);\n      showCopyToast('문장 저장에 실패했습니다');\n    }\n  };\n\n  // 스레드 새로고침 함수\n  const handleRefreshThreads = async () => {\n    try {\n      const threadsResponse = await chatApi.getPersonaThreads(personaId);\n      if (threadsResponse.data) {\n        onThreadUpdate(threadsResponse.data);\n      }\n    } catch (error) {\n      console.error('스레드 새로고침 실패:', error);\n    }\n  };\n\n  // 스레드 선택 핸들러\n  const handleThreadSelect = thread => {\n    setLocalSelectedThread(thread);\n  };\n\n  // FloatingActionButton 메뉴 액션 처리\n  const handleMenuAction = async action => {\n    showCopyToast(`${action} 기능이 실행되었습니다`);\n  };\n\n  // 문장선택 모드 토글\n  const handleToggleSentenceMode = () => {\n    setIsSentenceModeActive(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      show: showToast,\n      children: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InteractionOverview, {\n      children: [/*#__PURE__*/_jsxDEV(OverviewTitle, {\n        children: [personaName, \"\\uC758 \\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverviewStats, {\n        children: [/*#__PURE__*/_jsxDEV(StatItem, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: stats.totalThreads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"\\uCD1D \\uC2A4\\uB808\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatItem, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: stats.interpretationThreads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"\\uD574\\uC11D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatItem, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: stats.proceedThreads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"\\uB098\\uC544\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatItem, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: stats.sentenceThreads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"\\uBB38\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), currentRecord && currentRecord.threads.length > 0 && /*#__PURE__*/_jsxDEV(ThreadPreview, {\n        children: [/*#__PURE__*/_jsxDEV(ThreadPreviewTitle, {\n          children: \"\\uCD5C\\uADFC \\uC2A4\\uB808\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RecentThreads, {\n          children: currentRecord.threads.slice(0, 5).map(thread => /*#__PURE__*/_jsxDEV(ThreadItem, {\n            onClick: () => handleThreadSelect(thread),\n            children: [/*#__PURE__*/_jsxDEV(ThreadType, {\n              type: thread.thread_type,\n              children: thread.thread_type === 'interpretation' ? '해석' : thread.thread_type === 'proceed' ? '나아가기' : '문장'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ThreadContent, {\n              children: thread.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n              children: formatDate(thread.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n      children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n        ref: chatMessagesRef,\n        children: [!localSelectedThread ? /*#__PURE__*/_jsxDEV(EmptyChat, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px',\n              marginBottom: '8px'\n            },\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC704\\uC758 \\uC2A4\\uB808\\uB4DC\\uB97C \\uC120\\uD0DD\\uD558\\uC5EC \\uB300\\uD654\\uB97C \\uD655\\uC778\\uD574\\uBCF4\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              marginTop: '4px'\n            },\n            children: \"\\uB610\\uB294 \\uC0AC\\uC774\\uB4DC\\uBC14\\uC5D0\\uC11C \\uB2E4\\uB978 \\uC2A4\\uB808\\uB4DC\\uB97C \\uC120\\uD0DD\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this) : localSelectedThread.messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyChat, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px',\n              marginBottom: '8px'\n            },\n            children: \"\\uD83D\\uDCAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC774 \\uC2A4\\uB808\\uB4DC\\uC5D0 \\uB300\\uD574 \\uC9C8\\uBB38\\uD574\\uBCF4\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              marginTop: '4px'\n            },\n            children: [personaName, \"\\uC640 \\uB300\\uD654\\uB97C \\uB098\\uB20C \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this) : localSelectedThread.messages.map((message, index) => message.role === 'user' ? /*#__PURE__*/_jsxDEV(Message, {\n          message: {\n            ...message,\n            persona_id: undefined,\n            persona_name: undefined\n          },\n          personas: {},\n          showActionButtons: true,\n          onCopy: () => handleCopyMessage(message.content),\n          onEdit: () => handleStartEdit(index),\n          isEditing: editingMessageIndex === index,\n          onEditSave: newContent => handleEditMessage(index, newContent),\n          onEditCancel: handleCancelEdit\n        }, `interaction_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(SelectableMessage, {\n          message: {\n            ...message,\n            persona_id: 'current_persona',\n            persona_name: personaName\n          },\n          personas: {\n            current_persona: {\n              name: personaName,\n              description: '',\n              color: '#2196f3',\n              prompt: '',\n              category: '',\n              subcategory: ''\n            }\n          },\n          selectedSentences: isSentenceModeActive ? selectedSentences : new Set(),\n          highlightedSentences: highlightedSentences,\n          memos: memos,\n          onToggleSelect: isSentenceModeActive ? handleToggleSelect : () => {},\n          onMemoChange: handleMemoChange,\n          onDeleteMemo: handleDeleteMemo,\n          showSentenceSelector: isSentenceModeActive,\n          showActionButtons: true,\n          onCopy: () => handleCopyMessage(message.content),\n          onSunAction: handleSunAction,\n          onPersonAction: handlePersonAction,\n          onDocumentAction: handleDocumentAction\n        }, `interaction_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 17\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          personaName: personaName,\n          personaColor: \"#2196f3\",\n          customMessage: \"\\uC751\\uB2F5 \\uC0DD\\uC131\\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), localSelectedThread && /*#__PURE__*/_jsxDEV(ChatInputSection, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          ref: messageInputRef,\n          onSendMessage: handleSendMessage,\n          disabled: isLoading,\n          placeholder: `${personaName}에게 이 스레드에 대해 질문해보세요...`,\n          onToggleSentenceMode: handleToggleSentenceMode,\n          isSentenceModeActive: isSentenceModeActive,\n          hasSelectedSentences: selectedSentences.size > 0,\n          currentInterpretation: (localSelectedThread === null || localSelectedThread === void 0 ? void 0 : localSelectedThread.content) || '',\n          personaId: personaId,\n          onGenerateProceed: handlePersonAction,\n          onGenerateSentence: handleDocumentAction,\n          currentChatMessages: localSelectedThread === null || localSelectedThread === void 0 ? void 0 : localSelectedThread.messages,\n          onRefreshThreads: handleRefreshThreads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingActionButton, {\n      show: isSentenceModeActive && selectedSentences.size > 0,\n      onMenuAction: handleMenuAction,\n      personaId: personaId,\n      currentInterpretation: (localSelectedThread === null || localSelectedThread === void 0 ? void 0 : localSelectedThread.content) || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractionHistoryView, \"rWITVh7jsJZzgVR3DPFJlTEqcuQ=\");\n_c18 = InteractionHistoryView;\nexport default InteractionHistoryView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChatSection\");\n$RefreshReg$(_c3, \"ChatMessages\");\n$RefreshReg$(_c4, \"ChatInputSection\");\n$RefreshReg$(_c5, \"EmptyChat\");\n$RefreshReg$(_c6, \"InteractionOverview\");\n$RefreshReg$(_c7, \"OverviewTitle\");\n$RefreshReg$(_c8, \"OverviewStats\");\n$RefreshReg$(_c9, \"StatItem\");\n$RefreshReg$(_c0, \"StatValue\");\n$RefreshReg$(_c1, \"StatLabel\");\n$RefreshReg$(_c10, \"ThreadPreview\");\n$RefreshReg$(_c11, \"ThreadPreviewTitle\");\n$RefreshReg$(_c12, \"RecentThreads\");\n$RefreshReg$(_c13, \"ThreadItem\");\n$RefreshReg$(_c14, \"ThreadType\");\n$RefreshReg$(_c15, \"ThreadContent\");\n$RefreshReg$(_c16, \"ThreadTime\");\n$RefreshReg$(_c17, \"Toast\");\n$RefreshReg$(_c18, \"InteractionHistoryView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","MessageInput","Message","SelectableMessage","FloatingActionButton","LoadingMessage","chatApi","jsxDEV","_jsxDEV","Container","div","_c","ChatSection","_c2","ChatMessages","_c3","ChatInputSection","_c4","EmptyChat","_c5","InteractionOverview","_c6","OverviewTitle","h3","_c7","OverviewStats","_c8","StatItem","_c9","StatValue","_c0","StatLabel","_c1","ThreadPreview","_c10","ThreadPreviewTitle","h4","_c11","RecentThreads","_c12","ThreadItem","_c13","ThreadType","props","type","_c14","ThreadContent","_c15","ThreadTime","_c16","Toast","show","_c17","InteractionHistoryView","personaId","personaName","interactionRecords","selectedThread","onThreadUpdate","onSwitchToMode","onGenerateNewInterpretation","_s","isLoading","setIsLoading","localSelectedThread","setLocalSelectedThread","chatMessagesRef","messageInputRef","showToast","setShowToast","toastMessage","setToastMessage","selectedSentences","setSelectedSentences","Set","highlightedSentences","setHighlightedSentences","memos","setMemos","isSentenceModeActive","setIsSentenceModeActive","editingMessageIndex","setEditingMessageIndex","currentRecord","find","record","persona_id","stats","totalThreads","threads","length","interpretationThreads","filter","t","thread_type","proceedThreads","sentenceThreads","current","scrollTop","scrollHeight","messages","handleSendMessage","message","userMessage","role","content","timestamp","Date","toISOString","updatedThread","updated_at","response","chatWithThread","thread_id","id","user_message","data","assistantMessage","persona_name","finalUpdatedThread","thread_updated_at","handleRefreshThreads","console","error","formatTime","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","showCopyToast","setTimeout","copyToClipboard","text","successMessage","navigator","clipboard","writeText","handleCopyMessage","messageContent","handleStartEdit","messageIndex","handleEditMessage","newContent","handleCancelEdit","handleToggleSelect","sentenceId","prev","newSet","has","delete","add","handleMemoChange","memo","handleDeleteMemo","newMemos","handleSunAction","handlePersonAction","proceedPrompt","insertText","contentToSave","lastAssistantMessage","slice","reverse","msg","saveCurrentAsProceed","handleDocumentAction","sentencePrompt","saveCurrentAsSentence","threadsResponse","getPersonaThreads","handleThreadSelect","thread","handleMenuAction","action","handleToggleSentenceMode","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","created_at","ref","style","fontSize","marginBottom","marginTop","index","undefined","personas","showActionButtons","onCopy","onEdit","isEditing","onEditSave","onEditCancel","current_persona","name","description","color","prompt","category","subcategory","onToggleSelect","onMemoChange","onDeleteMemo","showSentenceSelector","onSunAction","onPersonAction","onDocumentAction","personaColor","customMessage","onSendMessage","disabled","placeholder","onToggleSentenceMode","hasSelectedSentences","size","currentInterpretation","onGenerateProceed","onGenerateSentence","currentChatMessages","onRefreshThreads","onMenuAction","_c18","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/training/components/InteractionHistoryView.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport MessageInput, { MessageInputRef } from '../../shared/components/MessageInput';\r\nimport Message from '../../shared/components/Message';\r\nimport SelectableMessage from './SelectableMessage';\r\nimport FloatingActionButton from '../../shared/components/FloatingActionButton';\r\nimport LoadingMessage from '../../shared/components/LoadingMessage';\r\nimport { sentenceApi } from '../api/sentenceApi';\r\nimport { chatApi } from '../../shared/api/chatApi';\r\nimport { TrainingThread, InteractionRecord } from '../../shared/types';\r\n\r\ninterface InteractionHistoryViewProps {\r\n  personaId: string;\r\n  personaName: string;\r\n  interactionRecords: InteractionRecord[];\r\n  selectedThread?: TrainingThread | null;\r\n  onThreadUpdate: (threads: TrainingThread[]) => void;\r\n  onSwitchToMode?: (mode: 'interpretation' | 'proceed' | 'sentence') => void;\r\n  onGenerateNewInterpretation?: () => void;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background: white;\r\n`;\r\n\r\nconst ChatSection = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nconst ChatInputSection = styled.div`\r\n  padding: 16px 20px;\r\n  border-top: none;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst EmptyChat = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #999;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst InteractionOverview = styled.div`\r\n  padding: 20px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  background: #f8f9fa;\r\n`;\r\n\r\nconst OverviewTitle = styled.h3`\r\n  margin: 0 0 16px 0;\r\n  color: #333;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst OverviewStats = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst StatItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #2196f3;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst ThreadPreview = styled.div`\r\n  margin-top: 16px;\r\n`;\r\n\r\nconst ThreadPreviewTitle = styled.h4`\r\n  margin: 0 0 12px 0;\r\n  color: #555;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst RecentThreads = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ThreadItem = styled.div`\r\n  padding: 12px;\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover {\r\n    border-color: #2196f3;\r\n    box-shadow: 0 2px 8px rgba(33, 150, 243, 0.1);\r\n  }\r\n`;\r\n\r\nconst ThreadType = styled.div<{ type: string }>`\r\n  display: inline-block;\r\n  padding: 2px 8px;\r\n  border-radius: 12px;\r\n  font-size: 10px;\r\n  font-weight: 600;\r\n  margin-bottom: 4px;\r\n  color: white;\r\n  background: ${props => {\r\n    switch (props.type) {\r\n      case 'interpretation': return '#6c757d';\r\n      case 'proceed': return '#ff9800';\r\n      case 'sentence': return '#4caf50';\r\n      default: return '#999';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst ThreadContent = styled.div`\r\n  font-size: 13px;\r\n  color: #555;\r\n  line-height: 1.4;\r\n  margin-bottom: 4px;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ThreadTime = styled.div`\r\n  font-size: 11px;\r\n  color: #999;\r\n`;\r\n\r\n// 복사 알림을 위한 토스트 컴포넌트\r\nconst Toast = styled.div<{ show: boolean }>`\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  background: #6c757d;\r\n  color: white;\r\n  padding: 12px 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(120%)'};\r\n  transition: transform 0.3s ease;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst InteractionHistoryView: React.FC<InteractionHistoryViewProps> = ({\r\n  personaId,\r\n  personaName,\r\n  interactionRecords,\r\n  selectedThread,\r\n  onThreadUpdate,\r\n  onSwitchToMode,\r\n  onGenerateNewInterpretation,\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [localSelectedThread, setLocalSelectedThread] = useState<TrainingThread | null>(selectedThread || null);\r\n  const chatMessagesRef = useRef<HTMLDivElement>(null);\r\n  const messageInputRef = useRef<MessageInputRef>(null);\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  \r\n  // 문장 선택 관련 상태\r\n  const [selectedSentences, setSelectedSentences] = useState<Set<string>>(new Set());\r\n  const [highlightedSentences, setHighlightedSentences] = useState<Set<string>>(new Set());\r\n  const [memos, setMemos] = useState<Record<string, string>>({});\r\n  const [isSentenceModeActive, setIsSentenceModeActive] = useState(false);\r\n  const [editingMessageIndex, setEditingMessageIndex] = useState<number | null>(null);\r\n\r\n  // 현재 페르소나의 상호작용 기록 찾기\r\n  const currentRecord = interactionRecords.find(record => record.persona_id === personaId);\r\n  \r\n  // 통계 계산\r\n  const stats = currentRecord ? {\r\n    totalThreads: currentRecord.threads.length,\r\n    interpretationThreads: currentRecord.threads.filter(t => t.thread_type === 'interpretation').length,\r\n    proceedThreads: currentRecord.threads.filter(t => t.thread_type === 'proceed').length,\r\n    sentenceThreads: currentRecord.threads.filter(t => t.thread_type === 'sentence').length,\r\n  } : {\r\n    totalThreads: 0,\r\n    interpretationThreads: 0,\r\n    proceedThreads: 0,\r\n    sentenceThreads: 0,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatMessagesRef.current) {\r\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n    }\r\n  }, [localSelectedThread?.messages]);\r\n\r\n  const handleSendMessage = async (message: string): Promise<boolean> => {\r\n    if (!localSelectedThread) return false;\r\n    \r\n    // 1. 사용자 메시지를 즉시 UI에 추가\r\n    const userMessage = {\r\n      role: 'user' as const,\r\n      content: message,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    const updatedThread = {\r\n      ...localSelectedThread,\r\n      messages: [...localSelectedThread.messages, userMessage],\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    \r\n    setLocalSelectedThread(updatedThread);\r\n    \r\n    // 2. 로딩 상태 시작\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // 3. 백엔드 API 호출\r\n      const response = await chatApi.chatWithThread({\r\n        thread_id: localSelectedThread.id,\r\n        user_message: message\r\n      });\r\n\r\n      if (response.data && response.data.response) {\r\n        // 4. AI 응답을 UI에 추가\r\n        const assistantMessage = {\r\n          role: 'assistant' as const,\r\n          content: response.data.response.content,\r\n          timestamp: response.data.response.timestamp,\r\n          persona_id: response.data.response.persona_id || personaId,\r\n          persona_name: response.data.response.persona_name || personaName\r\n        };\r\n\r\n        const finalUpdatedThread = {\r\n          ...updatedThread,\r\n          messages: [...updatedThread.messages, assistantMessage],\r\n          updated_at: response.data.thread_updated_at || new Date().toISOString()\r\n        };\r\n        \r\n        setLocalSelectedThread(finalUpdatedThread);\r\n        \r\n        // 5. 로컬 스레드 목록도 업데이트\r\n        handleRefreshThreads();\r\n        \r\n        setIsLoading(false);\r\n        return true;\r\n      } else {\r\n        console.error('상호작용 기록 채팅 응답 오류:', response);\r\n        setIsLoading(false);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('상호작용 기록 채팅 오류:', error);\r\n      setIsLoading(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  const formatDate = (timestamp: string) => {\r\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  // 토스트 메시지 표시 함수\r\n  const showCopyToast = (message: string) => {\r\n    setToastMessage(message);\r\n    setShowToast(true);\r\n    setTimeout(() => setShowToast(false), 3000);\r\n  };\r\n\r\n  // 텍스트 복사 유틸리티 함수\r\n  const copyToClipboard = async (text: string, successMessage: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      showCopyToast(successMessage);\r\n    } catch (error) {\r\n      console.error('복사 실패:', error);\r\n      showCopyToast('복사 실패');\r\n    }\r\n  };\r\n\r\n  // 메시지 복사 기능\r\n  const handleCopyMessage = async (messageContent: string) => {\r\n    await copyToClipboard(messageContent, '메시지가 복사되었습니다');\r\n  };\r\n\r\n  // 메시지 수정 관련 함수들\r\n  const handleStartEdit = (messageIndex: number) => {\r\n    setEditingMessageIndex(messageIndex);\r\n  };\r\n\r\n  const handleEditMessage = async (messageIndex: number, newContent: string) => {\r\n    // 메시지 수정 기능 구현 예정\r\n    setEditingMessageIndex(null);\r\n    showCopyToast('메시지가 수정되었습니다');\r\n    return true;\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingMessageIndex(null);\r\n  };\r\n\r\n  // 문장 선택 관련 함수들\r\n  const handleToggleSelect = (sentenceId: string) => {\r\n    setSelectedSentences(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(sentenceId)) {\r\n        newSet.delete(sentenceId);\r\n      } else {\r\n        newSet.add(sentenceId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleMemoChange = async (sentenceId: string, memo: string) => {\r\n    setMemos(prev => ({ ...prev, [sentenceId]: memo }));\r\n  };\r\n\r\n  const handleDeleteMemo = async (sentenceId: string) => {\r\n    setMemos(prev => {\r\n      const newMemos = { ...prev };\r\n      delete newMemos[sentenceId];\r\n      return newMemos;\r\n    });\r\n  };\r\n\r\n  // 액션 핸들러들\r\n  const handleSunAction = async () => {\r\n    if (onGenerateNewInterpretation) {\r\n      onGenerateNewInterpretation();\r\n    }\r\n  };\r\n\r\n  const handlePersonAction = async () => {\r\n    // 나아가기 프롬프트를 입력창에 삽입하고 현재 Assistant의 마지막 채팅 내용을 나아가기 사이드바에 저장\r\n    if (!personaId) return;\r\n    \r\n    const proceedPrompt = \"좋아. 너의 답변에 근거하여, 내가 나아가야 할 방향은?\";\r\n    \r\n    // 입력창에 프롬프트 삽입\r\n    if (messageInputRef.current) {\r\n      messageInputRef.current.insertText(proceedPrompt);\r\n    }\r\n    \r\n    showCopyToast('나아가기 프롬프트가 입력창에 추가되었습니다');\r\n    \r\n    try {\r\n      // 현재 Assistant의 마지막 채팅 내용만 사용\r\n      let contentToSave = ''; // 기본값\r\n      \r\n      if (localSelectedThread?.messages && localSelectedThread.messages.length > 0) {\r\n        // Assistant의 마지막 메시지 찾기\r\n        const lastAssistantMessage = localSelectedThread.messages\r\n          .slice()\r\n          .reverse()\r\n          .find(msg => msg.role === 'assistant');\r\n        \r\n        if (lastAssistantMessage) {\r\n          contentToSave = lastAssistantMessage.content;\r\n        }\r\n      }\r\n      \r\n      if (contentToSave) {\r\n        // chatApi를 통해 Assistant의 마지막 채팅 내용을 나아가기 사이드바에 저장\r\n        const response = await chatApi.saveCurrentAsProceed(personaId, contentToSave);\r\n        \r\n        if (response.data) {\r\n          // 스레드 새로고침\r\n          handleRefreshThreads();\r\n          showCopyToast('현재 Assistant 응답이 나아가기에 저장되었습니다');\r\n        }\r\n      } else {\r\n        showCopyToast('저장할 Assistant 응답이 없습니다');\r\n      }\r\n    } catch (error) {\r\n      console.error('나아가기 저장 중 오류:', error);\r\n      showCopyToast('나아가기 저장에 실패했습니다');\r\n    }\r\n  };\r\n\r\n  const handleDocumentAction = async () => {\r\n    // 문장 프롬프트를 입력창에 삽입하고 현재 Assistant의 마지막 채팅 내용을 문장 사이드바에 저장\r\n    if (!personaId) return;\r\n    \r\n    const sentencePrompt = \"네 답변을 세 문장으로 통찰적, 명제형, 핵심적으로 짧게 요약 (in bullet style)\";\r\n    \r\n    // 입력창에 프롬프트 삽입\r\n    if (messageInputRef.current) {\r\n      messageInputRef.current.insertText(sentencePrompt);\r\n    }\r\n    \r\n    showCopyToast('문장 프롬프트가 입력창에 추가되었습니다');\r\n    \r\n    try {\r\n      // 현재 Assistant의 마지막 채팅 내용만 사용\r\n      let contentToSave = ''; // 기본값\r\n      \r\n      if (localSelectedThread?.messages && localSelectedThread.messages.length > 0) {\r\n        // Assistant의 마지막 메시지 찾기\r\n        const lastAssistantMessage = localSelectedThread.messages\r\n          .slice()\r\n          .reverse()\r\n          .find(msg => msg.role === 'assistant');\r\n        \r\n        if (lastAssistantMessage) {\r\n          contentToSave = lastAssistantMessage.content;\r\n        }\r\n      }\r\n      \r\n      if (contentToSave) {\r\n        // chatApi를 통해 Assistant의 마지막 채팅 내용을 문장 사이드바에 저장\r\n        const response = await chatApi.saveCurrentAsSentence(personaId, contentToSave);\r\n        \r\n        if (response.data) {\r\n          // 스레드 새로고침\r\n          handleRefreshThreads();\r\n          showCopyToast('현재 Assistant 응답이 문장에 저장되었습니다');\r\n        }\r\n      } else {\r\n        showCopyToast('저장할 Assistant 응답이 없습니다');\r\n      }\r\n    } catch (error) {\r\n      console.error('문장 저장 중 오류:', error);\r\n      showCopyToast('문장 저장에 실패했습니다');\r\n    }\r\n  };\r\n\r\n  // 스레드 새로고침 함수\r\n  const handleRefreshThreads = async () => {\r\n    try {\r\n      const threadsResponse = await chatApi.getPersonaThreads(personaId);\r\n      if (threadsResponse.data) {\r\n        onThreadUpdate(threadsResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('스레드 새로고침 실패:', error);\r\n    }\r\n  };\r\n\r\n  // 스레드 선택 핸들러\r\n  const handleThreadSelect = (thread: TrainingThread) => {\r\n    setLocalSelectedThread(thread);\r\n  };\r\n\r\n  // FloatingActionButton 메뉴 액션 처리\r\n  const handleMenuAction = async (action: 'sendToInput' | 'saveToVault' | 'addMemo' | 'highlight' | 'copy' | 'generateProceed' | 'generateSentence') => {\r\n    showCopyToast(`${action} 기능이 실행되었습니다`);\r\n  };\r\n\r\n  // 문장선택 모드 토글\r\n  const handleToggleSentenceMode = () => {\r\n    setIsSentenceModeActive(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Toast show={showToast}>\r\n        {toastMessage}\r\n      </Toast>\r\n      \r\n      {/* 개요 섹션 */}\r\n      <InteractionOverview>\r\n        <OverviewTitle>{personaName}의 상호작용 기록</OverviewTitle>\r\n        \r\n        <OverviewStats>\r\n          <StatItem>\r\n            <StatValue>{stats.totalThreads}</StatValue>\r\n            <StatLabel>총 스레드</StatLabel>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatValue>{stats.interpretationThreads}</StatValue>\r\n            <StatLabel>해석</StatLabel>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatValue>{stats.proceedThreads}</StatValue>\r\n            <StatLabel>나아가기</StatLabel>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatValue>{stats.sentenceThreads}</StatValue>\r\n            <StatLabel>문장</StatLabel>\r\n          </StatItem>\r\n        </OverviewStats>\r\n\r\n        {currentRecord && currentRecord.threads.length > 0 && (\r\n          <ThreadPreview>\r\n            <ThreadPreviewTitle>최근 스레드</ThreadPreviewTitle>\r\n            <RecentThreads>\r\n              {currentRecord.threads.slice(0, 5).map((thread) => (\r\n                <ThreadItem \r\n                  key={thread.id} \r\n                  onClick={() => handleThreadSelect(thread)}\r\n                >\r\n                  <ThreadType type={thread.thread_type}>\r\n                    {thread.thread_type === 'interpretation' ? '해석' : \r\n                     thread.thread_type === 'proceed' ? '나아가기' : '문장'}\r\n                  </ThreadType>\r\n                  <ThreadContent>{thread.content}</ThreadContent>\r\n                  <ThreadTime>{formatDate(thread.created_at)}</ThreadTime>\r\n                </ThreadItem>\r\n              ))}\r\n            </RecentThreads>\r\n          </ThreadPreview>\r\n        )}\r\n      </InteractionOverview>\r\n      \r\n      <ChatSection>\r\n        <ChatMessages ref={chatMessagesRef}>\r\n          {!localSelectedThread ? (\r\n            <EmptyChat>\r\n              <div style={{ fontSize: '24px', marginBottom: '8px' }}>📊</div>\r\n              <div>위의 스레드를 선택하여 대화를 확인해보세요</div>\r\n              <div style={{ fontSize: '12px', marginTop: '4px' }}>\r\n                또는 사이드바에서 다른 스레드를 선택할 수 있습니다\r\n              </div>\r\n            </EmptyChat>\r\n          ) : localSelectedThread.messages.length === 0 ? (\r\n            <EmptyChat>\r\n              <div style={{ fontSize: '24px', marginBottom: '8px' }}>💬</div>\r\n              <div>이 스레드에 대해 질문해보세요</div>\r\n              <div style={{ fontSize: '12px', marginTop: '4px' }}>\r\n                {personaName}와 대화를 나눌 수 있습니다\r\n              </div>\r\n            </EmptyChat>\r\n          ) : (\r\n            localSelectedThread.messages.map((message, index) => \r\n              message.role === 'user' ? (\r\n                <Message\r\n                  key={`interaction_${index}`}\r\n                  message={{\r\n                    ...message,\r\n                    persona_id: undefined,\r\n                    persona_name: undefined,\r\n                  }}\r\n                  personas={{}}\r\n                  showActionButtons={true}\r\n                  onCopy={() => handleCopyMessage(message.content)}\r\n                  onEdit={() => handleStartEdit(index)}\r\n                  isEditing={editingMessageIndex === index}\r\n                  onEditSave={(newContent) => handleEditMessage(index, newContent)}\r\n                  onEditCancel={handleCancelEdit}\r\n                />\r\n              ) : (\r\n                <SelectableMessage\r\n                  key={`interaction_${index}`}\r\n                  message={{\r\n                    ...message,\r\n                    persona_id: 'current_persona',\r\n                    persona_name: personaName,\r\n                  }}\r\n                  personas={{\r\n                    current_persona: {\r\n                      name: personaName,\r\n                      description: '',\r\n                      color: '#2196f3',\r\n                      prompt: '',\r\n                      category: '',\r\n                      subcategory: ''\r\n                    }\r\n                  }}\r\n                  selectedSentences={isSentenceModeActive ? selectedSentences : new Set()}\r\n                  highlightedSentences={highlightedSentences}\r\n                  memos={memos}\r\n                  onToggleSelect={isSentenceModeActive ? handleToggleSelect : () => {}}\r\n                  onMemoChange={handleMemoChange}\r\n                  onDeleteMemo={handleDeleteMemo}\r\n                  showSentenceSelector={isSentenceModeActive}\r\n                  showActionButtons={true}\r\n                  onCopy={() => handleCopyMessage(message.content)}\r\n                  onSunAction={handleSunAction}\r\n                  onPersonAction={handlePersonAction}\r\n                  onDocumentAction={handleDocumentAction}\r\n                />\r\n              )\r\n            )\r\n          )}\r\n          \r\n          {isLoading && (\r\n            <LoadingMessage \r\n              personaName={personaName}\r\n              personaColor=\"#2196f3\"\r\n              customMessage=\"응답 생성중...\"\r\n            />\r\n          )}\r\n        </ChatMessages>\r\n\r\n        {localSelectedThread && (\r\n          <ChatInputSection>\r\n            <MessageInput\r\n              ref={messageInputRef}\r\n              onSendMessage={handleSendMessage}\r\n              disabled={isLoading}\r\n              placeholder={`${personaName}에게 이 스레드에 대해 질문해보세요...`}\r\n              onToggleSentenceMode={handleToggleSentenceMode}\r\n              isSentenceModeActive={isSentenceModeActive}\r\n              hasSelectedSentences={selectedSentences.size > 0}\r\n              currentInterpretation={localSelectedThread?.content || ''}\r\n              personaId={personaId}\r\n              onGenerateProceed={handlePersonAction}\r\n              onGenerateSentence={handleDocumentAction}\r\n              currentChatMessages={localSelectedThread?.messages}\r\n              onRefreshThreads={handleRefreshThreads}\r\n            />\r\n          </ChatInputSection>\r\n        )}\r\n      </ChatSection>\r\n      \r\n      <FloatingActionButton\r\n        show={isSentenceModeActive && selectedSentences.size > 0}\r\n        onMenuAction={handleMenuAction}\r\n        personaId={personaId}\r\n        currentInterpretation={localSelectedThread?.content || ''}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InteractionHistoryView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}