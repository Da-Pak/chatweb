{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver3\\\\frontend\\\\src\\\\pages\\\\TrainingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MainLayout from '../features/core/MainLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 로그인 상태 확인\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      navigate('/');\n      return;\n    }\n\n    // QA 데이터가 있는지 확인\n    const qaDataStr = localStorage.getItem('qa_data');\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    if (qaDataStr) {\n      const allQAData = JSON.parse(qaDataStr);\n      const hasQAData = allQAData.some(qa => qa.userId === user.id);\n      if (!hasQAData) {\n        // QA 데이터가 없으면 QA 페이지로 리다이렉트\n        navigate('/qa');\n        return;\n      }\n    } else {\n      // QA 데이터가 없으면 QA 페이지로 리다이렉트\n      navigate('/qa');\n      return;\n    }\n  }, [navigate]);\n\n  // MainLayout을 training 모드로 렌더링\n  return /*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(TrainingPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = TrainingPage;\nexport default TrainingPage;\nvar _c;\n$RefreshReg$(_c, \"TrainingPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","MainLayout","jsxDEV","_jsxDEV","TrainingPage","_s","navigate","token","localStorage","getItem","qaDataStr","user","JSON","parse","allQAData","hasQAData","some","qa","userId","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver3/frontend/src/pages/TrainingPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MainLayout from '../features/core/MainLayout';\r\n\r\nconst TrainingPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // 로그인 상태 확인\r\n    const token = localStorage.getItem('access_token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    // QA 데이터가 있는지 확인\r\n    const qaDataStr = localStorage.getItem('qa_data');\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    \r\n    if (qaDataStr) {\r\n      const allQAData = JSON.parse(qaDataStr);\r\n      const hasQAData = allQAData.some((qa: any) => qa.userId === user.id);\r\n      \r\n      if (!hasQAData) {\r\n        // QA 데이터가 없으면 QA 페이지로 리다이렉트\r\n        navigate('/qa');\r\n        return;\r\n      }\r\n    } else {\r\n      // QA 데이터가 없으면 QA 페이지로 리다이렉트\r\n      navigate('/qa');\r\n      return;\r\n    }\r\n  }, [navigate]);\r\n\r\n  // MainLayout을 training 모드로 렌더링\r\n  return <MainLayout />;\r\n};\r\n\r\nexport default TrainingPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,GAAG,CAAC;MACb;IACF;;IAEA;IACA,MAAMI,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACjD,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAE7D,IAAIC,SAAS,EAAE;MACb,MAAMI,SAAS,GAAGF,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC;MACvC,MAAMK,SAAS,GAAGD,SAAS,CAACE,IAAI,CAAEC,EAAO,IAAKA,EAAE,CAACC,MAAM,KAAKP,IAAI,CAACQ,EAAE,CAAC;MAEpE,IAAI,CAACJ,SAAS,EAAE;QACd;QACAT,QAAQ,CAAC,KAAK,CAAC;QACf;MACF;IACF,CAAC,MAAM;MACL;MACAA,QAAQ,CAAC,KAAK,CAAC;MACf;IACF;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,oBAAOH,OAAA,CAACF,UAAU;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvB,CAAC;AAAClB,EAAA,CAjCID,YAAsB;EAAA,QACTJ,WAAW;AAAA;AAAAwB,EAAA,GADxBpB,YAAsB;AAmC5B,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}