{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\vault\\\\components\\\\SentenceVaultView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi } from '../../training/api/sentenceApi';\nimport { chatApi } from '../../shared/api/chatApi';\nimport SentenceFilterDropdown from './SentenceFilterDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n_c = Container;\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = Header;\nconst FilterButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n`;\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c3 = NavigationButton;\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n_c4 = ContentArea;\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n_c5 = SentenceGrid;\nconst SentenceRow = styled.div`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  ${props => props.$isPinned && `\n    border-color: #ffc107;\n    box-shadow: 0 2px 8px rgba(255, 193, 7, 0.2);\n    background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n    \n    &:hover {\n      box-shadow: 0 4px 16px rgba(255, 193, 7, 0.3);\n      background: linear-gradient(135deg, #ffeaa7 0%, #fdcb6e 100%);\n    }\n  `}\n`;\n_c6 = SentenceRow;\nconst SentenceContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c7 = SentenceContent;\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n_c8 = SentenceText;\nconst SentenceMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n`;\n_c9 = SentenceMeta;\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n  margin-right: 8px;\n`;\n_c0 = PersonaLabel;\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n_c1 = DateLabel;\nconst PinIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#ffc107' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #ffc107;\n    background: rgba(255, 193, 7, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#ffc107' : '#adb5bd'};\n  }\n`;\n_c10 = PinIcon;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n_c11 = EmptyState;\nconst ContextMenuContainer = styled.div`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n_c12 = ContextMenuContainer;\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n_c13 = ContextMenuItem;\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n_c14 = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n_c15 = ModalContent;\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n_c16 = ModalTitle;\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n_c17 = ModalMessage;\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n_c18 = ModalButtons;\nconst ModalButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n_c19 = ModalButton;\nconst SentenceVaultView = ({\n  onNavigateToPersona,\n  onNavigateToThread\n}) => {\n  _s();\n  const [sentences, setSentences] = useState([]);\n  const [filteredSentences, setFilteredSentences] = useState([]);\n  const [personas, setPersonas] = useState({});\n  const [currentFilter, setCurrentFilter] = useState('전체');\n  const [loading, setLoading] = useState(true);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n  const [pinnedSentences, setPinnedSentences] = useState(new Set());\n  const [contextMenu, setContextMenu] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState(null);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState(['전체', '언어화', '편지']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 페르소나 데이터 로드\n      const personaResponse = await chatApi.getPersonas();\n      if (personaResponse.data) {\n        setPersonas(personaResponse.data);\n\n        // 필터 옵션에 페르소나들 추가\n        const personaNames = Object.values(personaResponse.data).map(p => p.name);\n        setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n      }\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applyFilter = () => {\n    let filtered = [...sentences];\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => s.tags.includes('verbalization'));\n      } else if (currentFilter === '편지') {\n        filtered = filtered.filter(s => s.tags.includes('letter'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n\n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    setFilteredSentences([...pinned, ...unpinned]);\n  };\n  const handleFilterChange = filter => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n  const handleNavigateFilter = direction => {\n    const newIndex = direction === 'prev' ? Math.max(0, currentFilterIndex - 1) : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n  const handleSentenceClick = (event, sentence) => {\n    event.preventDefault();\n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n  };\n  const handleContextMenuAction = (action, sentence) => {\n    setContextMenu(null);\n    switch (action) {\n      case 'interact':\n      case 'navigate':\n      case 'delete':\n        setConfirmationModal({\n          type: action,\n          sentence\n        });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    const {\n      type,\n      sentence\n    } = confirmationModal;\n    try {\n      switch (type) {\n        case 'interact':\n          // 페르소나 페이지의 문장 모드로 이동\n          const personaId = extractPersonaIdFromSentence(sentence);\n          if (personaId && onNavigateToPersona) {\n            onNavigateToPersona(personaId, 'sentence');\n            // TODO: 입력창에 문장 설정하는 로직 추가 필요\n          }\n          break;\n        case 'navigate':\n          // 해당 기록으로 이동\n          if (sentence.source_conversation_id && onNavigateToThread) {\n            onNavigateToThread(sentence.source_conversation_id, 'interpretation');\n          }\n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n    }\n    setConfirmationModal(null);\n  };\n  const togglePin = sentenceId => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n  const extractPersonaIdFromSentence = sentence => {\n    console.log('라벨 추출 중:', sentence);\n    console.log('tags:', sentence.tags);\n    console.log('source_message_id:', sentence.source_message_id);\n    console.log('사용 가능한 페르소나들:', Object.keys(personas));\n\n    // tags에서 페르소나 ID 찾기\n    for (const tag of sentence.tags) {\n      if (personas[tag]) {\n        console.log('태그에서 페르소나 발견:', tag, personas[tag].name);\n        return tag;\n      }\n    }\n    return null;\n  };\n  const getPersonaName = sentence => {\n    var _personas$personaId;\n    const personaId = extractPersonaIdFromSentence(sentence);\n    const name = personaId ? ((_personas$personaId = personas[personaId]) === null || _personas$personaId === void 0 ? void 0 : _personas$personaId.name) || '알 수 없음' : '시스템';\n    console.log('최종 페르소나 이름:', name, '(ID:', personaId, ')');\n    return name;\n  };\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    const {\n      type,\n      sentence\n    } = confirmationModal;\n    const personaName = getPersonaName(sentence);\n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 인물(${personaName})의 페이지에서 상호작용을 하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'navigate':\n        return {\n          title: '해당 기록으로 이동',\n          message: '해당 기록으로 이동하시겠습니까?',\n          confirmText: '이동',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '40px',\n          textAlign: 'center'\n        },\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this);\n  }\n  const modalContent = getModalContent();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('prev'),\n        disabled: currentFilterIndex === 0,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SentenceFilterDropdown, {\n        currentFilter: currentFilter,\n        options: filterOptions,\n        isOpen: showFilterDropdown,\n        onToggle: () => setShowFilterDropdown(!showFilterDropdown),\n        onSelect: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('next'),\n        disabled: currentFilterIndex === filterOptions.length - 1,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: filteredSentences.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"\\uC800\\uC7A5\\uB41C \\uBB38\\uC7A5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: \"\\uD6C8\\uC2B5 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC7A5\\uC744 \\uC800\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uD574\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SentenceGrid, {\n        children: filteredSentences.map(sentence => /*#__PURE__*/_jsxDEV(SentenceRow, {\n          $isPinned: pinnedSentences.has(sentence.id),\n          onClick: e => handleSentenceClick(e, sentence),\n          children: /*#__PURE__*/_jsxDEV(SentenceContent, {\n            children: [/*#__PURE__*/_jsxDEV(SentenceText, {\n              children: sentence.sentence\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(SentenceMeta, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(PersonaLabel, {\n                  children: getPersonaName(sentence)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(DateLabel, {\n                  children: new Date(sentence.created_at).toLocaleDateString('ko-KR')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PinIcon, {\n                $isPinned: pinnedSentences.has(sentence.id),\n                onClick: e => {\n                  e.stopPropagation();\n                  togglePin(sentence.id);\n                },\n                children: \"\\uD83D\\uDCCC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 17\n          }, this)\n        }, sentence.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenuContainer, {\n      $x: contextMenu.x,\n      $y: contextMenu.y,\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('interact', contextMenu.sentence),\n        children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('navigate', contextMenu.sentence),\n        children: \"\\uD574\\uB2F9 \\uAE30\\uB85D\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('pin', contextMenu.sentence),\n        children: pinnedSentences.has(contextMenu.sentence.id) ? '고정 해제' : '맨 위에 고정'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('delete', contextMenu.sentence),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 9\n    }, this), confirmationModal && modalContent && /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClick: () => setConfirmationModal(null),\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: modalContent.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalMessage, {\n          children: modalContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"secondary\",\n            onClick: () => setConfirmationModal(null),\n            children: modalContent.cancelText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"primary\",\n            onClick: handleConfirmAction,\n            children: modalContent.confirmText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 549,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceVaultView, \"If2FmB5XuYNHBztx6Q+gSp7aTMM=\");\n_c20 = SentenceVaultView;\nexport default SentenceVaultView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"NavigationButton\");\n$RefreshReg$(_c4, \"ContentArea\");\n$RefreshReg$(_c5, \"SentenceGrid\");\n$RefreshReg$(_c6, \"SentenceRow\");\n$RefreshReg$(_c7, \"SentenceContent\");\n$RefreshReg$(_c8, \"SentenceText\");\n$RefreshReg$(_c9, \"SentenceMeta\");\n$RefreshReg$(_c0, \"PersonaLabel\");\n$RefreshReg$(_c1, \"DateLabel\");\n$RefreshReg$(_c10, \"PinIcon\");\n$RefreshReg$(_c11, \"EmptyState\");\n$RefreshReg$(_c12, \"ContextMenuContainer\");\n$RefreshReg$(_c13, \"ContextMenuItem\");\n$RefreshReg$(_c14, \"ModalOverlay\");\n$RefreshReg$(_c15, \"ModalContent\");\n$RefreshReg$(_c16, \"ModalTitle\");\n$RefreshReg$(_c17, \"ModalMessage\");\n$RefreshReg$(_c18, \"ModalButtons\");\n$RefreshReg$(_c19, \"ModalButton\");\n$RefreshReg$(_c20, \"SentenceVaultView\");","map":{"version":3,"names":["React","useState","useEffect","styled","sentenceApi","chatApi","SentenceFilterDropdown","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","FilterButton","button","NavigationButton","_c3","ContentArea","_c4","SentenceGrid","_c5","SentenceRow","props","$isPinned","_c6","SentenceContent","_c7","SentenceText","_c8","SentenceMeta","_c9","PersonaLabel","span","_c0","DateLabel","_c1","PinIcon","_c10","EmptyState","_c11","ContextMenuContainer","$y","$x","_c12","ContextMenuItem","_c13","ModalOverlay","_c14","ModalContent","_c15","ModalTitle","h3","_c16","ModalMessage","p","_c17","ModalButtons","_c18","ModalButton","$variant","_c19","SentenceVaultView","onNavigateToPersona","onNavigateToThread","_s","sentences","setSentences","filteredSentences","setFilteredSentences","personas","setPersonas","currentFilter","setCurrentFilter","loading","setLoading","showFilterDropdown","setShowFilterDropdown","pinnedSentences","setPinnedSentences","Set","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadData","applyFilter","handleClickOutside","document","addEventListener","removeEventListener","sentenceData","getVaultSentences","console","log","personaResponse","getPersonas","data","personaNames","Object","values","map","name","error","filtered","filter","s","tags","includes","personaId","keys","find","id","source_message_id","pinned","has","unpinned","sort","a","b","Date","created_at","getTime","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","handleSentenceClick","event","sentence","preventDefault","x","clientX","y","clientY","handleContextMenuAction","action","type","togglePin","handleConfirmAction","extractPersonaIdFromSentence","source_conversation_id","deleteVaultSentence","prev","sentenceId","newSet","delete","add","tag","getPersonaName","_personas$personaId","getModalContent","personaName","title","message","confirmText","cancelText","children","style","padding","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","modalContent","onClick","disabled","options","isOpen","onToggle","onSelect","className","e","toLocaleDateString","stopPropagation","_c20","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/vault/components/SentenceVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, SentenceVaultItem } from '../../training/api/sentenceApi';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { Persona } from '../../shared/types';\nimport SentenceFilterDropdown from './SentenceFilterDropdown';\n\ninterface SentenceVaultViewProps {\n  onNavigateToPersona: (personaId: string, mode: 'sentence') => void;\n  onNavigateToThread: (threadId: string, threadType: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  sentence: SentenceVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'navigate' | 'delete';\n  sentence: SentenceVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n`;\n\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst SentenceRow = styled.div<{ $isPinned: boolean }>`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  ${props => props.$isPinned && `\n    border-color: #ffc107;\n    box-shadow: 0 2px 8px rgba(255, 193, 7, 0.2);\n    background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n    \n    &:hover {\n      box-shadow: 0 4px 16px rgba(255, 193, 7, 0.3);\n      background: linear-gradient(135deg, #ffeaa7 0%, #fdcb6e 100%);\n    }\n  `}\n`;\n\nconst SentenceContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n\nconst SentenceMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n`;\n\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n  margin-right: 8px;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n\nconst PinIcon = styled.div<{ $isPinned: boolean }>`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#ffc107' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #ffc107;\n    background: rgba(255, 193, 7, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#ffc107' : '#adb5bd'};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst SentenceVaultView: React.FC<SentenceVaultViewProps> = ({\n  onNavigateToPersona,\n  onNavigateToThread\n}) => {\n  const [sentences, setSentences] = useState<SentenceVaultItem[]>([]);\n  const [filteredSentences, setFilteredSentences] = useState<SentenceVaultItem[]>([]);\n  const [personas, setPersonas] = useState<Record<string, Persona>>({});\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n  const [pinnedSentences, setPinnedSentences] = useState<Set<string>>(new Set());\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '언어화', '편지']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 페르소나 데이터 로드\n      const personaResponse = await chatApi.getPersonas();\n      if (personaResponse.data) {\n        setPersonas(personaResponse.data);\n        \n        // 필터 옵션에 페르소나들 추가\n        const personaNames = Object.values(personaResponse.data).map(p => p.name);\n        setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n      }\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilter = () => {\n    let filtered = [...sentences];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => s.tags.includes('verbalization'));\n      } else if (currentFilter === '편지') {\n        filtered = filtered.filter(s => s.tags.includes('letter'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n    \n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n    setFilteredSentences([...pinned, ...unpinned]);\n  };\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const handleSentenceClick = (event: React.MouseEvent, sentence: SentenceVaultItem) => {\n    event.preventDefault();\n    \n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n  };\n\n  const handleContextMenuAction = (action: string, sentence: SentenceVaultItem) => {\n    setContextMenu(null);\n    \n    switch (action) {\n      case 'interact':\n      case 'navigate':\n      case 'delete':\n        setConfirmationModal({ type: action as any, sentence });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    \n    const { type, sentence } = confirmationModal;\n    \n    try {\n      switch (type) {\n        case 'interact':\n          // 페르소나 페이지의 문장 모드로 이동\n          const personaId = extractPersonaIdFromSentence(sentence);\n          if (personaId && onNavigateToPersona) {\n            onNavigateToPersona(personaId, 'sentence');\n            // TODO: 입력창에 문장 설정하는 로직 추가 필요\n          }\n          break;\n        case 'navigate':\n          // 해당 기록으로 이동\n          if (sentence.source_conversation_id && onNavigateToThread) {\n            onNavigateToThread(sentence.source_conversation_id, 'interpretation');\n          }\n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n    }\n    \n    setConfirmationModal(null);\n  };\n\n  const togglePin = (sentenceId: string) => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n\n  const extractPersonaIdFromSentence = (sentence: SentenceVaultItem): string | null => {\n    console.log('라벨 추출 중:', sentence);\n    console.log('tags:', sentence.tags);\n    console.log('source_message_id:', sentence.source_message_id);\n    console.log('사용 가능한 페르소나들:', Object.keys(personas));\n    \n    // tags에서 페르소나 ID 찾기\n    for (const tag of sentence.tags) {\n      if (personas[tag]) {\n        console.log('태그에서 페르소나 발견:', tag, personas[tag].name);\n        return tag;\n      }\n    }\n    return null;\n  };\n\n  const getPersonaName = (sentence: SentenceVaultItem): string => {\n    const personaId = extractPersonaIdFromSentence(sentence);\n    const name = personaId ? personas[personaId]?.name || '알 수 없음' : '시스템';\n    console.log('최종 페르소나 이름:', name, '(ID:', personaId, ')');\n    return name;\n  };\n\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    \n    const { type, sentence } = confirmationModal;\n    const personaName = getPersonaName(sentence);\n    \n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 인물(${personaName})의 페이지에서 상호작용을 하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'navigate':\n        return {\n          title: '해당 기록으로 이동',\n          message: '해당 기록으로 이동하시겠습니까?',\n          confirmText: '이동',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: '40px', textAlign: 'center' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  const modalContent = getModalContent();\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <SentenceFilterDropdown\n          currentFilter={currentFilter}\n          options={filterOptions}\n          isOpen={showFilterDropdown}\n          onToggle={() => setShowFilterDropdown(!showFilterDropdown)}\n          onSelect={handleFilterChange}\n        />\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n      </Header>\n\n      <ContentArea>\n        {filteredSentences.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 문장이 없습니다</div>\n            <div className=\"description\">\n              훈습 페이지에서 문장을 저장고에 저장해보세요\n            </div>\n          </EmptyState>\n        ) : (\n          <SentenceGrid>\n            {filteredSentences.map(sentence => (\n              <SentenceRow\n                key={sentence.id}\n                $isPinned={pinnedSentences.has(sentence.id)}\n                onClick={(e) => handleSentenceClick(e, sentence)}\n              >\n                <SentenceContent>\n                  <SentenceText>{sentence.sentence}</SentenceText>\n                  <SentenceMeta>\n                    <div>\n                      <PersonaLabel>{getPersonaName(sentence)}</PersonaLabel>\n                      <DateLabel>{new Date(sentence.created_at).toLocaleDateString('ko-KR')}</DateLabel>\n                    </div>\n                    <PinIcon\n                      $isPinned={pinnedSentences.has(sentence.id)}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        togglePin(sentence.id);\n                      }}\n                    >\n                      📌\n                    </PinIcon>\n                  </SentenceMeta>\n                </SentenceContent>\n              </SentenceRow>\n            ))}\n          </SentenceGrid>\n        )}\n      </ContentArea>\n\n      {/* 컨텍스트 메뉴 */}\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem onClick={() => handleContextMenuAction('interact', contextMenu.sentence)}>\n            상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('navigate', contextMenu.sentence)}>\n            해당 기록으로 이동\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('pin', contextMenu.sentence)}>\n            {pinnedSentences.has(contextMenu.sentence.id) ? '고정 해제' : '맨 위에 고정'}\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('delete', contextMenu.sentence)}>\n            삭제\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {/* 확인 모달 */}\n      {confirmationModal && modalContent && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>{modalContent.title}</ModalTitle>\n            <ModalMessage>{modalContent.message}</ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                {modalContent.cancelText}\n              </ModalButton>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {modalContent.confirmText}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default SentenceVaultView; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAA2B,gCAAgC;AAC/E,SAASC,OAAO,QAAQ,0BAA0B;AAElD,OAAOC,sBAAsB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB9D,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAMf,MAAMG,MAAM,GAAGT,MAAM,CAACO,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,MAAM;AAUZ,MAAME,YAAY,GAAGX,MAAM,CAACY,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,gBAAgB,GAAGb,MAAM,CAACY,MAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GArBID,gBAAgB;AAuBtB,MAAME,WAAW,GAAGf,MAAM,CAACO,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAGjB,MAAM,CAACO,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAJID,YAAY;AAMlB,MAAME,WAAW,GAAGnB,MAAM,CAACO,GAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIa,KAAK,IAAIA,KAAK,CAACC,SAAS,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AAACC,GAAA,GA9BIH,WAAW;AAgCjB,MAAMI,eAAe,GAAGvB,MAAM,CAACO,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GALID,eAAe;AAOrB,MAAME,YAAY,GAAGzB,MAAM,CAACO,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GANID,YAAY;AAQlB,MAAME,YAAY,GAAG3B,MAAM,CAACO,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GANID,YAAY;AAQlB,MAAME,YAAY,GAAG7B,MAAM,CAAC8B,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,YAAY;AASlB,MAAMG,SAAS,GAAGhC,MAAM,CAAC8B,IAAI;AAC7B;AACA;AACA,CAAC;AAACG,GAAA,GAHID,SAAS;AAKf,MAAME,OAAO,GAAGlC,MAAM,CAACO,GAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWa,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,WAAW;AACf,aAAaC,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,SAAS;AAC7D;AACA,CAAC;AAACc,IAAA,GAxBID,OAAO;AA0Bb,MAAME,UAAU,GAAGpC,MAAM,CAACO,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,IAAA,GAnBID,UAAU;AAqBhB,MAAME,oBAAoB,GAAGtC,MAAM,CAACO,GAA+B;AACnE;AACA,SAASa,KAAK,IAAIA,KAAK,CAACmB,EAAE;AAC1B,UAAUnB,KAAK,IAAIA,KAAK,CAACoB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIH,oBAAoB;AAa1B,MAAMI,eAAe,GAAG1C,MAAM,CAACO,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoC,IAAA,GAbID,eA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}