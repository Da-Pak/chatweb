{"ast":null,"code":"import { apiGet, apiPost } from '../../shared/utils/apiUtils';\n\n// API 응답 타입 정의\n\nexport const confusionApi = {\n  // 개별 혼란스러운 해석 항목 상세 정보 조회\n  async getItemDetail(personaId, itemId) {\n    try {\n      const response = await apiGet(`/training/confusion/${personaId}/item/${itemId}`);\n      if (!response.data) {\n        throw new Error('응답 데이터가 없습니다.');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('혼란스러운 해석 항목 조회 실패:', error);\n      throw error;\n    }\n  },\n  // 특정 혼란스러운 해석 항목과 채팅\n  async chatWithItem(personaId, itemId, request) {\n    try {\n      const response = await apiPost(`/training/confusion/${personaId}/item/${itemId}/chat`, request);\n      if (!response.data) {\n        throw new Error('응답 데이터가 없습니다.');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('혼란스러운 해석 항목 채팅 실패:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["apiGet","apiPost","confusionApi","getItemDetail","personaId","itemId","response","data","Error","error","console","chatWithItem","request"],"sources":["C:/Users/sungh/Desktop/chat_work_ver3/frontend/src/features/training/api/confusionApi.ts"],"sourcesContent":["import { apiGet, apiPost } from '../../shared/utils/apiUtils';\r\n\r\n// API 응답 타입 정의\r\nexport interface ConfusionItemDetail {\r\n  item_id: string;\r\n  interpretation: string;\r\n  key_sentence: string;\r\n  proceed: string;\r\n  proceed_key_sentence: string;\r\n}\r\n\r\nexport interface ChatMessage {\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n}\r\n\r\nexport interface ConfusionChatRequest {\r\n  user_message: string;\r\n  conversation_history: ChatMessage[];\r\n}\r\n\r\nexport interface ConfusionChatResponse {\r\n  response: string;\r\n}\r\n\r\nexport const confusionApi = {\r\n  // 개별 혼란스러운 해석 항목 상세 정보 조회\r\n  async getItemDetail(personaId: string, itemId: string): Promise<ConfusionItemDetail> {\r\n    try {\r\n      const response = await apiGet<ConfusionItemDetail>(`/training/confusion/${personaId}/item/${itemId}`);\r\n      if (!response.data) {\r\n        throw new Error('응답 데이터가 없습니다.');\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('혼란스러운 해석 항목 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 특정 혼란스러운 해석 항목과 채팅\r\n  async chatWithItem(\r\n    personaId: string, \r\n    itemId: string, \r\n    request: ConfusionChatRequest\r\n  ): Promise<ConfusionChatResponse> {\r\n    try {\r\n      const response = await apiPost<ConfusionChatResponse>(\r\n        `/training/confusion/${personaId}/item/${itemId}/chat`,\r\n        request\r\n      );\r\n      if (!response.data) {\r\n        throw new Error('응답 데이터가 없습니다.');\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('혼란스러운 해석 항목 채팅 실패:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}; "],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,6BAA6B;;AAE7D;;AAuBA,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACA,MAAMC,aAAaA,CAACC,SAAiB,EAAEC,MAAc,EAAgC;IACnF,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,MAAM,CAAsB,uBAAuBI,SAAS,SAASC,MAAM,EAAE,CAAC;MACrG,IAAI,CAACC,QAAQ,CAACC,IAAI,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MACA,OAAOF,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,YAAYA,CAChBP,SAAiB,EACjBC,MAAc,EACdO,OAA6B,EACG;IAChC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,OAAO,CAC5B,uBAAuBG,SAAS,SAASC,MAAM,OAAO,EACtDO,OACF,CAAC;MACD,IAAI,CAACN,QAAQ,CAACC,IAAI,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MACA,OAAOF,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}