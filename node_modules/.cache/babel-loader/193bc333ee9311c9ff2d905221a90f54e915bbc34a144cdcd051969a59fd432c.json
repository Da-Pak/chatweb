{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});export const adminApi={// 페르소나 정보 조회\nasync getPersonaInfo(){try{const response=await api.get('/admin/personas/info');return{data:response.data};}catch(error){var _error$response,_error$response$data;return{error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'페르소나 정보 조회에 실패했습니다.'};}},// 페르소나 재로딩\nasync reloadPersonas(){try{const response=await api.post('/admin/personas/reload');return{data:response.data};}catch(error){var _error$response2,_error$response2$data;return{error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.detail)||'페르소나 재로딩에 실패했습니다.'};}},// CSV 다운로드 URL 생성\ngetDownloadUrl(){return\"\".concat(API_BASE_URL,\"/admin/personas/csv\");},// CSV 업로드\nasync uploadPersonasCSV(file){try{const formData=new FormData();formData.append('file',file);const response=await api.post('/admin/personas/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});return{data:response.data};}catch(error){var _error$response3,_error$response3$data;return{error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.detail)||'CSV 업로드에 실패했습니다.'};}}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","adminApi","getPersonaInfo","response","get","data","error","_error$response","_error$response$data","detail","reloadPersonas","post","_error$response2","_error$response2$data","getDownloadUrl","concat","uploadPersonasCSV","file","formData","FormData","append","_error$response3","_error$response3$data"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/admin/api/adminApi.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const adminApi = {\r\n  // 페르소나 정보 조회\r\n  async getPersonaInfo() {\r\n    try {\r\n      const response = await api.get('/admin/personas/info');\r\n      return { data: response.data };\r\n    } catch (error: any) {\r\n      return { error: error.response?.data?.detail || '페르소나 정보 조회에 실패했습니다.' };\r\n    }\r\n  },\r\n\r\n  // 페르소나 재로딩\r\n  async reloadPersonas() {\r\n    try {\r\n      const response = await api.post('/admin/personas/reload');\r\n      return { data: response.data };\r\n    } catch (error: any) {\r\n      return { error: error.response?.data?.detail || '페르소나 재로딩에 실패했습니다.' };\r\n    }\r\n  },\r\n\r\n  // CSV 다운로드 URL 생성\r\n  getDownloadUrl() {\r\n    return `${API_BASE_URL}/admin/personas/csv`;\r\n  },\r\n\r\n  // CSV 업로드\r\n  async uploadPersonasCSV(file: File) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      const response = await api.post('/admin/personas/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return { data: response.data };\r\n    } catch (error: any) {\r\n      return { error: error.response?.data?.detail || 'CSV 업로드에 실패했습니다.' };\r\n    }\r\n  },\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAE7E,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,QAAQ,CAAG,CACtB;AACA,KAAM,CAAAC,cAAcA,CAAA,CAAG,CACrB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,GAAG,CAAC,sBAAsB,CAAC,CACtD,MAAO,CAAEC,IAAI,CAAEF,QAAQ,CAACE,IAAK,CAAC,CAChC,CAAE,MAAOC,KAAU,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACnB,MAAO,CAAEF,KAAK,CAAE,EAAAC,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBC,MAAM,GAAI,qBAAsB,CAAC,CACzE,CACF,CAAC,CAED;AACA,KAAM,CAAAC,cAAcA,CAAA,CAAG,CACrB,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACc,IAAI,CAAC,wBAAwB,CAAC,CACzD,MAAO,CAAEN,IAAI,CAAEF,QAAQ,CAACE,IAAK,CAAC,CAChC,CAAE,MAAOC,KAAU,CAAE,KAAAM,gBAAA,CAAAC,qBAAA,CACnB,MAAO,CAAEP,KAAK,CAAE,EAAAM,gBAAA,CAAAN,KAAK,CAACH,QAAQ,UAAAS,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBP,IAAI,UAAAQ,qBAAA,iBAApBA,qBAAA,CAAsBJ,MAAM,GAAI,mBAAoB,CAAC,CACvE,CACF,CAAC,CAED;AACAK,cAAcA,CAAA,CAAG,CACf,SAAAC,MAAA,CAAUtB,YAAY,wBACxB,CAAC,CAED;AACA,KAAM,CAAAuB,iBAAiBA,CAACC,IAAU,CAAE,CAClC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACc,IAAI,CAAC,wBAAwB,CAAEO,QAAQ,CAAE,CAClElB,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAEK,IAAI,CAAEF,QAAQ,CAACE,IAAK,CAAC,CAChC,CAAE,MAAOC,KAAU,CAAE,KAAAe,gBAAA,CAAAC,qBAAA,CACnB,MAAO,CAAEhB,KAAK,CAAE,EAAAe,gBAAA,CAAAf,KAAK,CAACH,QAAQ,UAAAkB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBhB,IAAI,UAAAiB,qBAAA,iBAApBA,qBAAA,CAAsBb,MAAM,GAAI,kBAAmB,CAAC,CACtE,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}