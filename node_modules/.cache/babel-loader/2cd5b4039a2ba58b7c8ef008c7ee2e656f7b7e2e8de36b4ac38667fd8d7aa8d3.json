{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\shared\\\\components\\\\ConversationSidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Sidebar, SidebarHeader, SidebarTitle, SidebarContent, SidebarMenuContent, SidebarToggleButton } from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n_c = AccordionContainer;\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c2 = AccordionItem;\nconst AccordionHeader = styled.div`\n  padding: 12px 16px;\n  background: ${props => props.$isSelected ? '#e3f2fd' : props.$isExpanded ? '#f8f9fa' : 'transparent'};\n  color: ${props => props.$isSelected ? '#1976d2' : '#333'};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  font-size: 14px;\n  border-left: ${props => props.$isSelected ? '3px solid #1976d2' : '3px solid transparent'};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#e3f2fd' : '#f5f5f5'};\n  }\n\n  &::after {\n    content: '${props => props.$isExpanded ? '▼' : '▶'}';\n    font-size: 10px;\n    color: #666;\n    transition: transform 0.2s ease;\n  }\n`;\n_c3 = AccordionHeader;\nconst ThreadItemContainer = styled.div`\n  max-height: ${props => props.$isExpanded ? '400px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #fafafa;\n`;\n_c4 = ThreadItemContainer;\nconst ThreadItemContent = styled.div`\n  padding: 8px 0;\n`;\n_c5 = ThreadItemContent;\nconst ThreadItem = styled.div`\n  padding: 8px 16px 8px 32px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? '#e8f5e8' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '3px solid #4caf50' : '3px solid transparent'};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#e8f5e8' : '#f0f0f0'};\n  }\n`;\n_c6 = ThreadItem;\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n_c7 = ThreadTitle;\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n_c8 = ThreadTime;\nconst InteractionRecordItem = styled.div`\n  padding: 8px 16px 8px 32px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? '#e3f2fd' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '3px solid #2196f3' : '3px solid transparent'};\n  transition: all 0.2s ease;\n  border-bottom: 1px solid #f0f0f0;\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#e3f2fd' : '#f0f0f0'};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c9 = InteractionRecordItem;\nconst PersonaName = styled.div`\n  font-weight: 500;\n  margin-bottom: 4px;\n  color: #333;\n  font-size: 13px;\n`;\n_c0 = PersonaName;\nconst ThreadStats = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 4px;\n`;\n_c1 = ThreadStats;\nconst StatBadge = styled.span`\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 600;\n  color: white;\n  background: ${props => {\n  switch (props.type) {\n    case 'interpretation':\n      return '#6c757d';\n    case 'proceed':\n      return '#ff9800';\n    case 'sentence':\n      return '#4caf50';\n    default:\n      return '#999';\n  }\n}};\n`;\n_c10 = StatBadge;\nconst UpdateTime = styled.div`\n  font-size: 11px;\n  opacity: 0.7;\n  color: #666;\n`;\n_c11 = UpdateTime;\nconst ConversationSidebar = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger\n}) => {\n  _s();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [threads, setThreads] = useState({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState([]);\n  const [selectedThreadId, setSelectedThreadId] = useState(null);\n  const menuItems = [{\n    id: 'interpretation',\n    name: '해석'\n  }, {\n    id: 'proceed',\n    name: '나아가기'\n  }, {\n    id: 'sentence',\n    name: '문장'\n  }, {\n    id: 'interaction_history',\n    name: '상호작용 기록'\n  }];\n  useEffect(() => {\n    const loadThreads = async () => {\n      if (!selectedPersonaId) return;\n      try {\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (response.data) {\n          const threadsByType = {\n            interpretation: response.data.filter(t => t.thread_type === 'interpretation'),\n            proceed: response.data.filter(t => t.thread_type === 'proceed'),\n            sentence: response.data.filter(t => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n      } catch (error) {\n        console.error('스레드 로드 실패:', error);\n      }\n    };\n    const loadInteractionRecords = async () => {\n      try {\n        const response = await chatApi.getAllInteractionRecords();\n        if (response.data) {\n          setInteractionRecords(response.data);\n        }\n      } catch (error) {\n        console.error('상호작용 기록 로드 실패:', error);\n      }\n    };\n    loadThreads();\n    loadInteractionRecords();\n  }, [selectedPersonaId, refreshTrigger]);\n  const handleAccordionToggle = itemId => {\n    setExpandedItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n      }\n      return newSet;\n    });\n    if (!expandedItems.has(itemId)) {\n      onSelectItem(itemId);\n    }\n  };\n  const handleThreadSelect = (threadId, threadType) => {\n    setSelectedThreadId(threadId);\n    const threadKey = `${threadType}-thread-${threadId}`;\n    onSelectItem(threadKey);\n  };\n  const handleInteractionRecordSelect = recordId => {\n    const recordKey = `interaction-record-${recordId}`;\n    onSelectItem(recordKey);\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getThreadContent = thread => {\n    if (thread.content && thread.content.length > 50) {\n      return thread.content.substring(0, 50) + '...';\n    }\n    return thread.content || '내용 없음';\n  };\n  const renderThreads = itemId => {\n    if (itemId === 'interaction_history') {\n      return /*#__PURE__*/_jsxDEV(ThreadItemContainer, {\n        $isExpanded: expandedItems.has(itemId),\n        children: /*#__PURE__*/_jsxDEV(ThreadItemContent, {\n          children: [interactionRecords.map(record => /*#__PURE__*/_jsxDEV(InteractionRecordItem, {\n            $isSelected: selectedItem === `interaction-record-${record.id}`,\n            onClick: () => handleInteractionRecordSelect(record.id),\n            children: [/*#__PURE__*/_jsxDEV(PersonaName, {\n              children: record.persona_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ThreadStats, {\n              children: [record.threads.filter(t => t.thread_type === 'interpretation').length > 0 && /*#__PURE__*/_jsxDEV(StatBadge, {\n                type: \"interpretation\",\n                children: [\"\\uD574\\uC11D \", record.threads.filter(t => t.thread_type === 'interpretation').length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), record.threads.filter(t => t.thread_type === 'proceed').length > 0 && /*#__PURE__*/_jsxDEV(StatBadge, {\n                type: \"proceed\",\n                children: [\"\\uB098\\uC544\\uAC00\\uAE30 \", record.threads.filter(t => t.thread_type === 'proceed').length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), record.threads.filter(t => t.thread_type === 'sentence').length > 0 && /*#__PURE__*/_jsxDEV(StatBadge, {\n                type: \"sentence\",\n                children: [\"\\uBB38\\uC7A5 \", record.threads.filter(t => t.thread_type === 'sentence').length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UpdateTime, {\n              children: formatDate(record.updated_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)), interactionRecords.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '16px',\n              textAlign: 'center',\n              color: '#999',\n              fontSize: '13px'\n            },\n            children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this);\n    }\n    const threadList = threads[itemId] || [];\n    return /*#__PURE__*/_jsxDEV(ThreadItemContainer, {\n      $isExpanded: expandedItems.has(itemId),\n      children: /*#__PURE__*/_jsxDEV(ThreadItemContent, {\n        children: [threadList.map(thread => /*#__PURE__*/_jsxDEV(ThreadItem, {\n          $isSelected: selectedThreadId === thread.id,\n          onClick: () => handleThreadSelect(thread.id, thread.thread_type),\n          children: [/*#__PURE__*/_jsxDEV(ThreadTitle, {\n            children: getThreadContent(thread)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThreadTime, {\n            children: formatTime(thread.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)), threadList.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '16px',\n            textAlign: 'center',\n            color: '#999',\n            fontSize: '13px'\n          },\n          children: [itemId === 'interpretation' && '해석이 없습니다', itemId === 'proceed' && '나아가기가 없습니다', itemId === 'sentence' && '문장이 없습니다']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    width: \"280px\",\n    $isCollapsed: isCollapsed,\n    $variant: \"conversation\",\n    children: [onToggle && /*#__PURE__*/_jsxDEV(SidebarToggleButton, {\n      onClick: onToggle,\n      children: isCollapsed ? '▷' : '◁'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarHeader, {\n      $isCollapsed: isCollapsed,\n      children: selectedPersonaName && /*#__PURE__*/_jsxDEV(SidebarTitle, {\n        $isCollapsed: isCollapsed,\n        children: selectedPersonaName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarContent, {\n      $isCollapsed: isCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarMenuContent, {\n        $variant: \"conversation\",\n        children: /*#__PURE__*/_jsxDEV(AccordionContainer, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n              $isSelected: selectedItem === item.id,\n              $isExpanded: expandedItems.has(item.id),\n              onClick: () => handleAccordionToggle(item.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), renderThreads(item.id)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationSidebar, \"q+Y282CsrVZHdG/aJtQ7RawRQx0=\");\n_c12 = ConversationSidebar;\nexport default ConversationSidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"AccordionContainer\");\n$RefreshReg$(_c2, \"AccordionItem\");\n$RefreshReg$(_c3, \"AccordionHeader\");\n$RefreshReg$(_c4, \"ThreadItemContainer\");\n$RefreshReg$(_c5, \"ThreadItemContent\");\n$RefreshReg$(_c6, \"ThreadItem\");\n$RefreshReg$(_c7, \"ThreadTitle\");\n$RefreshReg$(_c8, \"ThreadTime\");\n$RefreshReg$(_c9, \"InteractionRecordItem\");\n$RefreshReg$(_c0, \"PersonaName\");\n$RefreshReg$(_c1, \"ThreadStats\");\n$RefreshReg$(_c10, \"StatBadge\");\n$RefreshReg$(_c11, \"UpdateTime\");\n$RefreshReg$(_c12, \"ConversationSidebar\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxDEV","_jsxDEV","AccordionContainer","div","_c","AccordionItem","_c2","AccordionHeader","props","$isSelected","$isExpanded","_c3","ThreadItemContainer","_c4","ThreadItemContent","_c5","ThreadItem","_c6","ThreadTitle","_c7","ThreadTime","_c8","InteractionRecordItem","_c9","PersonaName","_c0","ThreadStats","_c1","StatBadge","span","type","_c10","UpdateTime","_c11","ConversationSidebar","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","_s","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","interactionRecords","setInteractionRecords","selectedThreadId","setSelectedThreadId","menuItems","id","name","loadThreads","response","getPersonaThreads","data","threadsByType","filter","t","thread_type","error","console","loadInteractionRecords","getAllInteractionRecords","handleAccordionToggle","itemId","prev","newSet","has","delete","add","handleThreadSelect","threadId","threadType","threadKey","handleInteractionRecordSelect","recordId","recordKey","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","getThreadContent","thread","content","length","substring","renderThreads","children","map","record","onClick","persona_name","fileName","_jsxFileName","lineNumber","columnNumber","updated_at","style","padding","textAlign","color","fontSize","threadList","created_at","width","$isCollapsed","$variant","item","_c12","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, InteractionRecord } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number;\n}\n\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst AccordionHeader = styled.div<{ $isSelected: boolean; $isExpanded: boolean }>`\n  padding: 12px 16px;\n  background: ${props => props.$isSelected ? '#e3f2fd' : props.$isExpanded ? '#f8f9fa' : 'transparent'};\n  color: ${props => props.$isSelected ? '#1976d2' : '#333'};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  font-size: 14px;\n  border-left: ${props => props.$isSelected ? '3px solid #1976d2' : '3px solid transparent'};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#e3f2fd' : '#f5f5f5'};\n  }\n\n  &::after {\n    content: '${props => props.$isExpanded ? '▼' : '▶'}';\n    font-size: 10px;\n    color: #666;\n    transition: transform 0.2s ease;\n  }\n`;\n\nconst ThreadItemContainer = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '400px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #fafafa;\n`;\n\nconst ThreadItemContent = styled.div`\n  padding: 8px 0;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px 8px 32px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? '#e8f5e8' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '3px solid #4caf50' : '3px solid transparent'};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#e8f5e8' : '#f0f0f0'};\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst InteractionRecordItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px 8px 32px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? '#e3f2fd' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '3px solid #2196f3' : '3px solid transparent'};\n  transition: all 0.2s ease;\n  border-bottom: 1px solid #f0f0f0;\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#e3f2fd' : '#f0f0f0'};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst PersonaName = styled.div`\n  font-weight: 500;\n  margin-bottom: 4px;\n  color: #333;\n  font-size: 13px;\n`;\n\nconst ThreadStats = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 4px;\n`;\n\nconst StatBadge = styled.span<{ type: string }>`\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 600;\n  color: white;\n  background: ${props => {\n    switch (props.type) {\n      case 'interpretation': return '#6c757d';\n      case 'proceed': return '#ff9800';\n      case 'sentence': return '#4caf50';\n      default: return '#999';\n    }\n  }};\n`;\n\nconst UpdateTime = styled.div`\n  font-size: 11px;\n  opacity: 0.7;\n  color: #666;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState<InteractionRecord[]>([]);\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n\n  const menuItems = [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  useEffect(() => {\n    const loadThreads = async () => {\n      if (!selectedPersonaId) return;\n\n      try {\n        const response = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (response.data) {\n          const threadsByType = {\n            interpretation: response.data.filter((t: any) => t.thread_type === 'interpretation'),\n            proceed: response.data.filter((t: any) => t.thread_type === 'proceed'),\n            sentence: response.data.filter((t: any) => t.thread_type === 'sentence')\n          };\n          setThreads(threadsByType);\n        }\n      } catch (error) {\n        console.error('스레드 로드 실패:', error);\n      }\n    };\n\n    const loadInteractionRecords = async () => {\n      try {\n        const response = await chatApi.getAllInteractionRecords();\n        if (response.data) {\n          setInteractionRecords(response.data);\n        }\n      } catch (error) {\n        console.error('상호작용 기록 로드 실패:', error);\n      }\n    };\n\n    loadThreads();\n    loadInteractionRecords();\n  }, [selectedPersonaId, refreshTrigger]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    setExpandedItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n      }\n      return newSet;\n    });\n\n    if (!expandedItems.has(itemId)) {\n      onSelectItem(itemId);\n    }\n  };\n\n  const handleThreadSelect = (threadId: string, threadType: string) => {\n    setSelectedThreadId(threadId);\n    const threadKey = `${threadType}-thread-${threadId}`;\n    onSelectItem(threadKey);\n  };\n\n  const handleInteractionRecordSelect = (recordId: string) => {\n    const recordKey = `interaction-record-${recordId}`;\n    onSelectItem(recordKey);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatDate = (timestamp: string) => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const getThreadContent = (thread: TrainingThread) => {\n    if (thread.content && thread.content.length > 50) {\n      return thread.content.substring(0, 50) + '...';\n    }\n    return thread.content || '내용 없음';\n  };\n\n  const renderThreads = (itemId: string) => {\n    if (itemId === 'interaction_history') {\n      return (\n        <ThreadItemContainer $isExpanded={expandedItems.has(itemId)}>\n          <ThreadItemContent>\n            {interactionRecords.map((record) => (\n              <InteractionRecordItem\n                key={record.id}\n                $isSelected={selectedItem === `interaction-record-${record.id}`}\n                onClick={() => handleInteractionRecordSelect(record.id)}\n              >\n                <PersonaName>{record.persona_name}</PersonaName>\n                <ThreadStats>\n                  {record.threads.filter(t => t.thread_type === 'interpretation').length > 0 && (\n                    <StatBadge type=\"interpretation\">\n                      해석 {record.threads.filter(t => t.thread_type === 'interpretation').length}\n                    </StatBadge>\n                  )}\n                  {record.threads.filter(t => t.thread_type === 'proceed').length > 0 && (\n                    <StatBadge type=\"proceed\">\n                      나아가기 {record.threads.filter(t => t.thread_type === 'proceed').length}\n                    </StatBadge>\n                  )}\n                  {record.threads.filter(t => t.thread_type === 'sentence').length > 0 && (\n                    <StatBadge type=\"sentence\">\n                      문장 {record.threads.filter(t => t.thread_type === 'sentence').length}\n                    </StatBadge>\n                  )}\n                </ThreadStats>\n                <UpdateTime>{formatDate(record.updated_at)}</UpdateTime>\n              </InteractionRecordItem>\n            ))}\n            {interactionRecords.length === 0 && (\n              <div style={{ padding: '16px', textAlign: 'center', color: '#999', fontSize: '13px' }}>\n                상호작용 기록이 없습니다\n              </div>\n            )}\n          </ThreadItemContent>\n        </ThreadItemContainer>\n      );\n    }\n\n    const threadList = threads[itemId as keyof typeof threads] || [];\n    \n    return (\n      <ThreadItemContainer $isExpanded={expandedItems.has(itemId)}>\n        <ThreadItemContent>\n          {threadList.map((thread) => (\n            <ThreadItem\n              key={thread.id}\n              $isSelected={selectedThreadId === thread.id}\n              onClick={() => handleThreadSelect(thread.id, thread.thread_type)}\n            >\n              <ThreadTitle>{getThreadContent(thread)}</ThreadTitle>\n              <ThreadTime>{formatTime(thread.created_at)}</ThreadTime>\n            </ThreadItem>\n          ))}\n          {threadList.length === 0 && (\n            <div style={{ padding: '16px', textAlign: 'center', color: '#999', fontSize: '13px' }}>\n              {itemId === 'interpretation' && '해석이 없습니다'}\n              {itemId === 'proceed' && '나아가기가 없습니다'}\n              {itemId === 'sentence' && '문장이 없습니다'}\n            </div>\n          )}\n        </ThreadItemContent>\n      </ThreadItemContainer>\n    );\n  };\n\n  return (\n    <Sidebar width=\"280px\" $isCollapsed={isCollapsed} $variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n          {isCollapsed ? '▷' : '◁'}\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader $isCollapsed={isCollapsed}>\n        {selectedPersonaName && (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        )}\n      </SidebarHeader>\n\n      <SidebarContent $isCollapsed={isCollapsed}>\n        <SidebarMenuContent $variant=\"conversation\">\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                  $isSelected={selectedItem === item.id}\n                  $isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                  <span>{item.name}</span>\n                </AccordionHeader>\n                \n                {renderThreads(item.id)}\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}