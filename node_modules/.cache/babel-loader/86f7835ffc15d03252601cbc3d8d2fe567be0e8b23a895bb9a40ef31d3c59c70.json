{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work_ver2\\\\frontend\\\\src\\\\features\\\\core\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 인증 상태에 따라 라우팅을 관리하는 새로운 App 컴포넌트\nconst App = () => {\n  _s();\n  // TODO: 실제 인증 로직으로 교체 필요\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // 임시로 true\n  const [hasCompletedQA, setHasCompletedQA] = useState(false); // 임시로 false\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/qa\",\n      element: isAuthenticated ? /*#__PURE__*/_jsxDEV(QAPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: isAuthenticated ? hasCompletedQA ? /*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 54\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/qa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 71\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 96\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rnYj/pUcT8oYI626I/oOdxLYAIU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","isAuthenticated","setIsAuthenticated","useState","hasCompletedQA","setHasCompletedQA","_jsxDEV","Routes","children","Route","path","element","LoginPage","fileName","_jsxFileName","lineNumber","columnNumber","QAPage","Navigate","to","MainLayout","_c","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work_ver2/frontend/src/features/core/App.tsx"],"sourcesContent":["// 인증 상태에 따라 라우팅을 관리하는 새로운 App 컴포넌트\nconst App: React.FC = () => {\n  // TODO: 실제 인증 로직으로 교체 필요\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // 임시로 true\n  const [hasCompletedQA, setHasCompletedQA] = useState(false); // 임시로 false\n\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<LoginPage />} />\n      <Route \n        path=\"/qa\" \n        element={isAuthenticated ? <QAPage /> : <Navigate to=\"/login\" />}\n      />\n      <Route \n        path=\"/\" \n        element={isAuthenticated ? (hasCompletedQA ? <MainLayout /> : <Navigate to=\"/qa\" />) : <Navigate to=\"/login\" />}\n      />\n    </Routes>\n  );\n};"],"mappings":";;;AAAA;AACA,MAAMA,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7D,oBACEG,OAAA,CAACC,MAAM;IAAAC,QAAA,gBACLF,OAAA,CAACG,KAAK;MAACC,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAEL,OAAA,CAACM,SAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CV,OAAA,CAACG,KAAK;MACJC,IAAI,EAAC,KAAK;MACVC,OAAO,EAAEV,eAAe,gBAAGK,OAAA,CAACW,MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGV,OAAA,CAACY,QAAQ;QAACC,EAAE,EAAC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACFV,OAAA,CAACG,KAAK;MACJC,IAAI,EAAC,GAAG;MACRC,OAAO,EAAEV,eAAe,GAAIG,cAAc,gBAAGE,OAAA,CAACc,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGV,OAAA,CAACY,QAAQ;QAACC,EAAE,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAIV,OAAA,CAACY,QAAQ;QAACC,EAAE,EAAC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAAChB,EAAA,CAlBID,GAAa;AAAAsB,EAAA,GAAbtB,GAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}