{"ast":null,"code":"import _objectSpread from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/Users/sungh/Desktop/chat_work/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12;import React,{useState,useEffect}from'react';import{Sidebar,SidebarHeader,SidebarTitle,SidebarContent,SidebarMenuContent,SidebarToggleButton}from'../styles/GlobalStyle';import{chatApi}from'../api/chatApi';import styled from'styled-components';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const AccordionContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));const AccordionItem=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid #f0f0f0;\\n\"])));const AccordionHeader=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 12px 16px;\\n  cursor: pointer;\\n  background: \",\";\\n  color: \",\";\\n  font-weight: \",\";\\n  border-radius: \",\";\\n  margin: \",\";\\n  transition: all 0.2s ease;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  &:hover {\\n    background: \",\";\\n  }\\n\"])),props=>props.$isSelected?'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)':'transparent',props=>props.$isSelected?'white':'#333',props=>props.$isSelected?'600':'500',props=>props.$isSelected?'8px':'0',props=>props.$isSelected?'4px 8px':'0',props=>props.$isSelected?'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)':'#f8f9fa');const ThreadsList=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  max-height: \",\";\\n  overflow: hidden;\\n  transition: max-height 0.3s ease;\\n  background: #f8f9fa;\\n\"])),props=>props.$isExpanded?'300px':'0');const ResizableContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  position: relative;\\n  height: \",\";\\n  min-height: \",\";\\n  overflow: hidden;\\n  transition: height 0.3s ease;\\n  background: #f8f9fa;\\n  border-bottom: \",\";\\n  \\n  &:hover {\\n    border-bottom-color: \",\";\\n  }\\n\"])),props=>props.$isExpanded?\"\".concat(props.$height,\"px\"):'0',props=>props.$isExpanded?'100px':'0',props=>props.$isExpanded?'2px solid #ddd':'none',props=>props.$isExpanded?'#6c757d':'transparent');const InteractionRecordsList=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  height: calc(100% - 6px);\\n  overflow-y: auto;\\n  padding: 8px;\\n  padding-bottom: 14px; /* resize handle\\uC744 \\uC704\\uD55C \\uC5EC\\uC720 \\uACF5\\uAC04 */\\n\"])));const ResizeHandle=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  height: 6px;\\n  cursor: ns-resize;\\n  background: rgba(108, 117, 125, 0.3);\\n  z-index: 10;\\n  border-top: 1px solid #ddd;\\n  \\n  &:hover {\\n    background: #6c757d;\\n    border-top-color: #5a6268;\\n  }\\n  \\n  &:active {\\n    background: #5a6268;\\n    border-top-color: #495057;\\n  }\\n  \\n  /* \\uB354 \\uB113\\uC740 \\uD074\\uB9AD \\uC601\\uC5ED\\uC744 \\uC704\\uD55C \\uAC00\\uC0C1 \\uC694\\uC18C */\\n  &::before {\\n    content: '';\\n    position: absolute;\\n    top: -3px;\\n    left: 0;\\n    right: 0;\\n    height: 12px;\\n    cursor: ns-resize;\\n  }\\n\"])));const RecordThreadItem=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  padding: 8px 12px;\\n  cursor: pointer;\\n  color: \",\";\\n  font-size: 13px;\\n  border-left: 2px solid \",\";\\n  background: \",\";\\n  transition: all 0.2s ease;\\n  margin: 2px 0;\\n  border-radius: 4px;\\n  border: 1px solid #e0e0e0;\\n  \\n  &:hover {\\n    background: #f0f0f0;\\n    color: #6c757d;\\n    border-color: #6c757d;\\n  }\\n\"])),props=>props.$isSelected?'#6c757d':'#666',props=>props.$isSelected?'#6c757d':'transparent',props=>props.$isSelected?'#f0f0f0':'transparent');const ThreadTypeTag=styled.span(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 2px 6px;\\n  border-radius: 3px;\\n  font-size: 9px;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  margin-right: 6px;\\n  background-color: #6c757d;\\n  color: white;\\n\"])));const ThreadItem=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  padding: 8px 32px 8px 32px;\\n  cursor: pointer;\\n  color: \",\";\\n  font-size: 14px;\\n  border-left: 3px solid \",\";\\n  background: \",\";\\n  transition: all 0.2s ease;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  &:hover {\\n    background: #f8f9fa;\\n    color: #6c757d;\\n  }\\n\"])),props=>props.$isSelected?'#6c757d':'#666',props=>props.$isSelected?'#6c757d':'transparent',props=>props.$isSelected?'#f8f9fa':'transparent');const ThreadItemContent=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));const DeleteThreadButton=styled.button(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n  color: #999;\\n  font-size: 14px;\\n  padding: 4px;\\n  border-radius: 4px;\\n  opacity: 0;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background: #e9ecef;\\n    color: #dc3545;\\n  }\\n\\n  \",\":hover & {\\n    opacity: 1;\\n  }\\n\"])),ThreadItem);const ThreadTitle=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-weight: 500;\\n  margin-bottom: 2px;\\n\"])));const ThreadTime=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  opacity: 0.7;\\n\"])));const ConversationSidebar=_ref=>{let{selectedItem,onSelectItem,isCollapsed=false,onToggle,selectedPersonaName,selectedPersonaId,refreshTrigger,mode,personas,verbalizationThreads,onSelectVerbalizationThread,onRefreshTrigger}=_ref;const[expandedItems,setExpandedItems]=useState(new Set());const[threads,setThreads]=useState({interpretation:[],proceed:[],sentence:[]});const[interactionRecords,setInteractionRecords]=useState([]);const[allRecentThreads,setAllRecentThreads]=useState([]);const[selectedThreadId,setSelectedThreadId]=useState(null);const[interactionHeight,setInteractionHeight]=useState(300);const[isResizing,setIsResizing]=useState(false);const menuItems=mode==='recent'?[]// 최근 상호작용 모드에서는 메뉴 아이템 없음\n:[{id:'interpretation',name:'해석'},{id:'proceed',name:'나아가기'},{id:'sentence',name:'문장'},{id:'interaction_history',name:'상호작용 기록'}];useEffect(()=>{const loadData=async()=>{if(mode==='recent'&&personas){// 최근 상호작용 모드: 모든 페르소나의 스레드 + 언어화 스레드 로드\ntry{const allPersonaThreads=[];// 일반 페르소나 스레드 로드\nfor(const[personaId,persona]of Object.entries(personas)){try{const response=await chatApi.getPersonaThreads(personaId);if(response.data){const threadsWithPersonaInfo=response.data.map(thread=>_objectSpread(_objectSpread({},thread),{},{persona_id:personaId,persona_name:persona.name}));allPersonaThreads.push(...threadsWithPersonaInfo);}}catch(error){console.error(\"\\uD398\\uB974\\uC18C\\uB098 \".concat(personaId,\" \\uC2A4\\uB808\\uB4DC \\uB85C\\uB4DC \\uC2E4\\uD328:\"),error);}}// 언어화 스레드 로드\ntry{const verbalizationResponse=await chatApi.getVerbalizationThreads();if(verbalizationResponse.data){const verbalizationThreadsWithInfo=verbalizationResponse.data.map(thread=>_objectSpread(_objectSpread({},thread),{},{persona_id:\"verbalization\",persona_name:\"언어화\"}));allPersonaThreads.push(...verbalizationThreadsWithInfo);}}catch(error){console.error('언어화 스레드 로드 실패:',error);}// 최신순으로 정렬 (updated_at이 있으면 우선, 없으면 created_at 사용)\nconst sortedThreads=allPersonaThreads.sort((a,b)=>{const timeA=a.updated_at?new Date(a.updated_at).getTime():new Date(a.created_at).getTime();const timeB=b.updated_at?new Date(b.updated_at).getTime():new Date(b.created_at).getTime();return timeB-timeA;});setAllRecentThreads(sortedThreads);}catch(error){console.error('전체 스레드 로드 실패:',error);}return;}if(!selectedPersonaId)return;try{// 기존 페르소나 모드 로직\nconst threadsResponse=await chatApi.getPersonaThreads(selectedPersonaId);if(threadsResponse.data){const threadsByType={interpretation:threadsResponse.data.filter(t=>t.thread_type==='interpretation').sort((a,b)=>{const timeA=a.updated_at?new Date(a.updated_at).getTime():new Date(a.created_at).getTime();const timeB=b.updated_at?new Date(b.updated_at).getTime():new Date(b.created_at).getTime();return timeB-timeA;}),proceed:threadsResponse.data.filter(t=>t.thread_type==='proceed').sort((a,b)=>{const timeA=a.updated_at?new Date(a.updated_at).getTime():new Date(a.created_at).getTime();const timeB=b.updated_at?new Date(b.updated_at).getTime():new Date(b.created_at).getTime();return timeB-timeA;}),sentence:threadsResponse.data.filter(t=>t.thread_type==='sentence').sort((a,b)=>{const timeA=a.updated_at?new Date(a.updated_at).getTime():new Date(a.created_at).getTime();const timeB=b.updated_at?new Date(b.updated_at).getTime():new Date(b.created_at).getTime();return timeB-timeA;})};setThreads(threadsByType);}// 상호작용 기록 로드\nconst recordsResponse=await chatApi.getAllInteractionRecords();if(recordsResponse.data){const sortedRecords=recordsResponse.data.map(record=>_objectSpread(_objectSpread({},record),{},{threads:record.threads.sort((a,b)=>{const timeA=a.updated_at?new Date(a.updated_at).getTime():new Date(a.created_at).getTime();const timeB=b.updated_at?new Date(b.updated_at).getTime():new Date(b.created_at).getTime();return timeB-timeA;})}));setInteractionRecords(sortedRecords);}}catch(error){console.error('데이터 로드 실패:',error);}};loadData();},[selectedPersonaId,refreshTrigger,mode,personas]);const handleAccordionToggle=itemId=>{const newExpanded=new Set(expandedItems);if(newExpanded.has(itemId)){newExpanded.delete(itemId);}else{newExpanded.add(itemId);}setExpandedItems(newExpanded);if(itemId==='interaction_history'){onSelectItem(itemId);}else{const itemThreads=threads[itemId]||[];if(itemThreads.length===0){onSelectItem(itemId);}else{const latestThread=itemThreads[0];setSelectedThreadId(latestThread.id);onSelectItem(\"\".concat(itemId,\"-thread-\").concat(latestThread.id));}}};const handleRecordThreadSelect=thread=>{setSelectedThreadId(thread.id);onSelectItem(\"\".concat(thread.thread_type,\"-thread-\").concat(thread.id));};const handleMouseDown=e=>{e.preventDefault();e.stopPropagation();setIsResizing(true);const startY=e.clientY;const startHeight=interactionHeight;const handleMouseMove=e=>{const deltaY=e.clientY-startY;const newHeight=Math.max(100,Math.min(600,startHeight+deltaY));setInteractionHeight(newHeight);};const handleMouseUp=()=>{setIsResizing(false);document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('mouseup',handleMouseUp);};document.addEventListener('mousemove',handleMouseMove);document.addEventListener('mouseup',handleMouseUp);};const formatTime=timestamp=>{return new Date(timestamp).toLocaleTimeString('ko-KR',{hour:'2-digit',minute:'2-digit'});};const formatDate=timestamp=>{return new Date(timestamp).toLocaleDateString('ko-KR',{month:'short',day:'numeric'});};const handleThreadSelect=(threadId,itemType)=>{setSelectedThreadId(threadId);onSelectItem(\"\".concat(itemType,\"-thread-\").concat(threadId));};const handleDeleteThread=async(threadId,e)=>{e.stopPropagation();if(window.confirm('이 스레드를 삭제하시겠습니까?')){try{console.log('=== 스레드 삭제 시작 ===');console.log('삭제할 threadId:',threadId);console.log('현재 mode:',mode);const result=await chatApi.deleteThread(threadId);console.log('API 응답:',result);console.log('result.data:',result.data);console.log('result.error:',result.error);if(result.data&&result.data.success){console.log('삭제 성공');if(mode==='verbalization'){// 언어화 모드인 경우: 부모 컴포넌트에 업데이트 요청\n// verbalizationThreads는 props로 받아오므로 직접 수정하지 않고 부모에게 알림\n// 삭제된 스레드가 현재 선택된 스레드인 경우 선택 해제\nif(selectedThreadId===threadId){setSelectedThreadId(null);if(onSelectVerbalizationThread){onSelectVerbalizationThread(null);}}// refreshTrigger를 통해 부모 컴포넌트에 업데이트 요청\n// (App.tsx에서 verbalizationThreads를 다시 로드하게 됨)\nif(onRefreshTrigger){onRefreshTrigger();}}else{// 일반 페르소나 모드인 경우: 기존 로직 유지\nconst updatedThreads=_objectSpread({},threads);Object.keys(updatedThreads).forEach(key=>{updatedThreads[key]=updatedThreads[key].filter(t=>t.id!==threadId);});setThreads(updatedThreads);if(selectedThreadId===threadId){setSelectedThreadId(null);}}console.log('UI 업데이트 완료');}else{var _result$data,_result$data2;console.error('삭제 실패:',result.error||((_result$data=result.data)===null||_result$data===void 0?void 0:_result$data.message));let errorMessage='스레드 삭제에 실패했습니다';if(result.error){if(result.error.includes('네트워크 오류')||result.error.includes('Failed to fetch')){errorMessage+=': 백엔드 서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.';}else{errorMessage+=': '+result.error;}}else if((_result$data2=result.data)!==null&&_result$data2!==void 0&&_result$data2.message){errorMessage+=': '+result.data.message;}alert(errorMessage);}}catch(error){console.error('스레드 삭제 실패:',error);alert('스레드 삭제 중 예상치 못한 오류가 발생했습니다: '+(error instanceof Error?error.message:String(error)));}}};const getThreadTypeLabel=type=>{switch(type){case'interpretation':return'해석';case'proceed':return'나아가기';case'sentence':return'문장';case'verbalization':return'언어화';default:return type;}};const getThreadContent=thread=>{var _thread$content;if(thread.messages&&thread.messages.length>0){const firstMessage=thread.messages[0];return firstMessage.content.length>30?firstMessage.content.substring(0,30)+'...':firstMessage.content;}return((_thread$content=thread.content)===null||_thread$content===void 0?void 0:_thread$content.length)>30?thread.content.substring(0,30)+'...':thread.content||'내용 없음';};const renderThreads=itemId=>{const itemThreads=threads[itemId]||[];const isExpanded=expandedItems.has(itemId);return/*#__PURE__*/_jsxs(ThreadsList,{$isExpanded:isExpanded,children:[itemThreads.map((thread,index)=>/*#__PURE__*/_jsxs(ThreadItem,{$isSelected:selectedThreadId===thread.id,onClick:()=>handleThreadSelect(thread.id,itemId),children:[/*#__PURE__*/_jsxs(ThreadItemContent,{children:[/*#__PURE__*/_jsxs(ThreadTitle,{children:[itemId==='interpretation'&&\"\\uD574\\uC11D #\".concat(itemThreads.length-index),itemId==='proceed'&&\"\\uB098\\uC544\\uAC00\\uAE30 #\".concat(itemThreads.length-index),itemId==='sentence'&&\"\\uBB38\\uC7A5 #\".concat(itemThreads.length-index)]}),/*#__PURE__*/_jsxs(ThreadTime,{children:[formatTime(thread.created_at),\" \\u2022 \",thread.messages.length,\"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]})]}),/*#__PURE__*/_jsx(DeleteThreadButton,{onClick:e=>handleDeleteThread(thread.id,e),title:\"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]},thread.id)),itemThreads.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px 32px',fontSize:'14px',color:'#999'},children:\"\\uC2A4\\uB808\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"})]});};const renderInteractionRecords=()=>{const isExpanded=expandedItems.has('interaction_history');// 현재 선택된 페르소나의 기록만 필터링\nconst currentPersonaRecord=interactionRecords.find(record=>record.persona_id===selectedPersonaId);return/*#__PURE__*/_jsx(ResizableContainer,{$isExpanded:isExpanded,$height:interactionHeight,children:isExpanded&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InteractionRecordsList,{$isExpanded:isExpanded,children:currentPersonaRecord?currentPersonaRecord.threads.map(thread=>/*#__PURE__*/_jsxs(RecordThreadItem,{$isSelected:selectedThreadId===thread.id,onClick:()=>handleRecordThreadSelect(thread),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ThreadTypeTag,{type:thread.thread_type,children:getThreadTypeLabel(thread.thread_type)}),getThreadContent(thread)]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'11px',opacity:0.7,marginTop:'2px'},children:formatTime(thread.created_at)})]},thread.id)):/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px',fontSize:'14px',color:'#999',textAlign:'center'},children:\"\\uC774 \\uD398\\uB974\\uC18C\\uB098\\uC758 \\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"})}),/*#__PURE__*/_jsx(ResizeHandle,{onMouseDown:handleMouseDown})]})});};const getThreadTitle=thread=>{let content='';if(thread.messages&&thread.messages.length>0){const firstUserMessage=thread.messages.find(m=>m.role==='user');if(firstUserMessage){content=firstUserMessage.content;}else if(thread.messages[0]){content=thread.messages[0].content;}}else if(thread.content){content=thread.content;}if(content.length>50){return content.substring(0,50)+'...';}return content||'내용 없음';};return/*#__PURE__*/_jsxs(Sidebar,{width:\"250px\",$isCollapsed:isCollapsed,$variant:\"conversation\",children:[onToggle&&/*#__PURE__*/_jsx(SidebarToggleButton,{onClick:onToggle}),/*#__PURE__*/_jsx(SidebarHeader,{$isCollapsed:isCollapsed,children:mode==='recent'?/*#__PURE__*/_jsx(SidebarTitle,{$isCollapsed:isCollapsed,children:\"\\uC804\\uCCB4 \\uC0C1\\uD638\\uC791\\uC6A9\"}):mode==='verbalization'?/*#__PURE__*/_jsx(SidebarTitle,{$isCollapsed:isCollapsed,children:\"\\uC5B8\\uC5B4\\uD654 \\uB300\\uD654\"}):selectedPersonaName?/*#__PURE__*/_jsx(SidebarTitle,{$isCollapsed:isCollapsed,children:selectedPersonaName}):null}),/*#__PURE__*/_jsx(SidebarContent,{$isCollapsed:isCollapsed,children:/*#__PURE__*/_jsx(SidebarMenuContent,{$variant:\"conversation\",children:mode==='recent'?/*#__PURE__*/// 최근 상호작용 모드: 스레드 목록 직접 표시\n_jsxs(\"div\",{style:{padding:'16px 0'},children:[allRecentThreads.map(thread=>{var _thread$messages;return/*#__PURE__*/_jsx(ThreadItem,{$isSelected:selectedThreadId===thread.id,onClick:()=>{setSelectedThreadId(thread.id);onSelectItem(\"recent-thread-\".concat(thread.id,\"-\").concat(thread.persona_id));},children:/*#__PURE__*/_jsxs(ThreadItemContent,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'8px',marginBottom:'4px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{padding:'2px 6px',background:'#ffffff',color:'#000000',border:'1px solid #000000',borderRadius:'4px',fontSize:'10px',fontWeight:'600'},children:thread.persona_name}),/*#__PURE__*/_jsx(ThreadTypeTag,{type:thread.thread_type,children:getThreadTypeLabel(thread.thread_type)})]}),/*#__PURE__*/_jsx(ThreadTitle,{children:getThreadTitle(thread)}),/*#__PURE__*/_jsxs(ThreadTime,{children:[formatTime(thread.created_at),\" \\u2022 \",((_thread$messages=thread.messages)===null||_thread$messages===void 0?void 0:_thread$messages.length)||0,\"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]})]})},\"\".concat(thread.persona_id,\"-\").concat(thread.id));}),allRecentThreads.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px 32px',fontSize:'14px',color:'#999',textAlign:'center'},children:\"\\uC0C1\\uD638\\uC791\\uC6A9 \\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"})]}):mode==='verbalization'?/*#__PURE__*/// 언어화 모드: 언어화 스레드 목록 표시\n_jsxs(\"div\",{style:{padding:'16px 0'},children:[verbalizationThreads&&[...verbalizationThreads].sort((a,b)=>{const timeA=a.updated_at?new Date(a.updated_at).getTime():new Date(a.created_at).getTime();const timeB=b.updated_at?new Date(b.updated_at).getTime():new Date(b.created_at).getTime();return timeB-timeA;}).map((thread,index)=>{var _thread$messages2;return/*#__PURE__*/_jsxs(ThreadItem,{$isSelected:selectedThreadId===thread.id,onClick:()=>{setSelectedThreadId(thread.id);if(onSelectVerbalizationThread){onSelectVerbalizationThread(thread);}},children:[/*#__PURE__*/_jsxs(ThreadItemContent,{children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',gap:'8px',marginBottom:'4px'},children:/*#__PURE__*/_jsx(\"span\",{style:{padding:'2px 6px',background:'#ffffff',color:'#000000',border:'1px solid #000000',borderRadius:'4px',fontSize:'10px',fontWeight:'600'},children:\"\\uC5B8\\uC5B4\\uD654\"})}),/*#__PURE__*/_jsxs(ThreadTitle,{children:[\"\\uC5B8\\uC5B4\\uD654 #\",verbalizationThreads.length-index]}),/*#__PURE__*/_jsxs(ThreadTime,{children:[formatTime(thread.created_at),\" \\u2022 \",((_thread$messages2=thread.messages)===null||_thread$messages2===void 0?void 0:_thread$messages2.length)||0,\"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]})]}),/*#__PURE__*/_jsx(DeleteThreadButton,{onClick:e=>handleDeleteThread(thread.id,e),title:\"\\uC2A4\\uB808\\uB4DC \\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]},thread.id);}),(!verbalizationThreads||verbalizationThreads.length===0)&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'16px 32px',fontSize:'14px',color:'#999',textAlign:'center'},children:[\"\\uC5B8\\uC5B4\\uD654 \\uB300\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uC0C8 \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\"]})]}):/*#__PURE__*/// 기존 페르소나 모드: 아코디언 메뉴\n_jsx(AccordionContainer,{children:menuItems.map(item=>/*#__PURE__*/_jsxs(AccordionItem,{children:[/*#__PURE__*/_jsx(AccordionHeader,{$isSelected:selectedItem===item.id,$isExpanded:expandedItems.has(item.id),onClick:()=>handleAccordionToggle(item.id),children:/*#__PURE__*/_jsx(\"span\",{children:item.name})}),item.id==='interaction_history'?renderInteractionRecords():renderThreads(item.id)]},item.id))})})})]});};export default ConversationSidebar;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","SidebarHeader","SidebarTitle","SidebarContent","SidebarMenuContent","SidebarToggleButton","chatApi","styled","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","AccordionContainer","div","_templateObject","_taggedTemplateLiteral","AccordionItem","_templateObject2","AccordionHeader","_templateObject3","props","$isSelected","ThreadsList","_templateObject4","$isExpanded","ResizableContainer","_templateObject5","concat","$height","InteractionRecordsList","_templateObject6","ResizeHandle","_templateObject7","RecordThreadItem","_templateObject8","ThreadTypeTag","span","_templateObject9","ThreadItem","_templateObject0","ThreadItemContent","_templateObject1","DeleteThreadButton","button","_templateObject10","ThreadTitle","_templateObject11","ThreadTime","_templateObject12","ConversationSidebar","_ref","selectedItem","onSelectItem","isCollapsed","onToggle","selectedPersonaName","selectedPersonaId","refreshTrigger","mode","personas","verbalizationThreads","onSelectVerbalizationThread","onRefreshTrigger","expandedItems","setExpandedItems","Set","threads","setThreads","interpretation","proceed","sentence","interactionRecords","setInteractionRecords","allRecentThreads","setAllRecentThreads","selectedThreadId","setSelectedThreadId","interactionHeight","setInteractionHeight","isResizing","setIsResizing","menuItems","id","name","loadData","allPersonaThreads","personaId","persona","Object","entries","response","getPersonaThreads","data","threadsWithPersonaInfo","map","thread","_objectSpread","persona_id","persona_name","push","error","console","verbalizationResponse","getVerbalizationThreads","verbalizationThreadsWithInfo","sortedThreads","sort","a","b","timeA","updated_at","Date","getTime","created_at","timeB","threadsResponse","threadsByType","filter","t","thread_type","recordsResponse","getAllInteractionRecords","sortedRecords","record","handleAccordionToggle","itemId","newExpanded","has","delete","add","itemThreads","length","latestThread","handleRecordThreadSelect","handleMouseDown","e","preventDefault","stopPropagation","startY","clientY","startHeight","handleMouseMove","deltaY","newHeight","Math","max","min","handleMouseUp","document","removeEventListener","addEventListener","formatTime","timestamp","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","month","day","handleThreadSelect","threadId","itemType","handleDeleteThread","window","confirm","log","result","deleteThread","success","updatedThreads","keys","forEach","key","_result$data","_result$data2","message","errorMessage","includes","alert","Error","String","getThreadTypeLabel","type","getThreadContent","_thread$content","messages","firstMessage","content","substring","renderThreads","isExpanded","children","index","onClick","title","style","padding","fontSize","color","renderInteractionRecords","currentPersonaRecord","find","opacity","marginTop","textAlign","onMouseDown","getThreadTitle","firstUserMessage","m","role","width","$isCollapsed","$variant","_thread$messages","display","alignItems","gap","marginBottom","background","border","borderRadius","fontWeight","_thread$messages2","item"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/shared/components/ConversationSidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Sidebar,\n  SidebarHeader,\n  SidebarTitle,\n  SidebarContent,\n  SidebarMenuContent,\n  SidebarToggleButton,\n  ConversationMenuItem,\n} from '../styles/GlobalStyle';\nimport { chatApi } from '../api/chatApi';\nimport { TrainingThread, InteractionRecord } from '../types';\nimport styled from 'styled-components';\n\ninterface ConversationSidebarProps {\n  selectedItem: string | null;\n  onSelectItem: (itemId: string | null) => void;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  selectedPersonaName?: string;\n  selectedPersonaId?: string;\n  refreshTrigger?: number;\n  mode?: 'persona' | 'recent' | 'verbalization';\n  personas?: Record<string, any>;\n  verbalizationThreads?: TrainingThread[];\n  onSelectVerbalizationThread?: (thread: TrainingThread | null) => void;\n  onRefreshTrigger?: () => void;\n}\n\nconst AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nconst AccordionItem = styled.div`\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst AccordionHeader = styled.div<{ $isSelected: boolean; $isExpanded: boolean }>`\n  padding: 12px 16px;\n  cursor: pointer;\n  background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : 'transparent'};\n  color: ${props => props.$isSelected ? 'white' : '#333'};\n  font-weight: ${props => props.$isSelected ? '600' : '500'};\n  border-radius: ${props => props.$isSelected ? '8px' : '0'};\n  margin: ${props => props.$isSelected ? '4px 8px' : '0'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: ${props => props.$isSelected ? 'linear-gradient(135deg, #6c757d 0%, #5a6268 100%)' : '#f8f9fa'};\n  }\n`;\n\nconst ThreadsList = styled.div<{ $isExpanded: boolean }>`\n  max-height: ${props => props.$isExpanded ? '300px' : '0'};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  background: #f8f9fa;\n`;\n\nconst ResizableContainer = styled.div<{ $isExpanded: boolean; $height: number }>`\n  position: relative;\n  height: ${props => props.$isExpanded ? `${props.$height}px` : '0'};\n  min-height: ${props => props.$isExpanded ? '100px' : '0'};\n  overflow: hidden;\n  transition: height 0.3s ease;\n  background: #f8f9fa;\n  border-bottom: ${props => props.$isExpanded ? '2px solid #ddd' : 'none'};\n  \n  &:hover {\n    border-bottom-color: ${props => props.$isExpanded ? '#6c757d' : 'transparent'};\n  }\n`;\n\nconst InteractionRecordsList = styled.div<{ $isExpanded: boolean }>`\n  height: calc(100% - 6px);\n  overflow-y: auto;\n  padding: 8px;\n  padding-bottom: 14px; /* resize handle을 위한 여유 공간 */\n`;\n\nconst ResizeHandle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 6px;\n  cursor: ns-resize;\n  background: rgba(108, 117, 125, 0.3);\n  z-index: 10;\n  border-top: 1px solid #ddd;\n  \n  &:hover {\n    background: #6c757d;\n    border-top-color: #5a6268;\n  }\n  \n  &:active {\n    background: #5a6268;\n    border-top-color: #495057;\n  }\n  \n  /* 더 넓은 클릭 영역을 위한 가상 요소 */\n  &::before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 0;\n    right: 0;\n    height: 12px;\n    cursor: ns-resize;\n  }\n`;\n\nconst RecordThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 12px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 13px;\n  border-left: 2px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f0f0f0' : 'transparent'};\n  transition: all 0.2s ease;\n  margin: 2px 0;\n  border-radius: 4px;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f0f0f0;\n    color: #6c757d;\n    border-color: #6c757d;\n  }\n`;\n\nconst ThreadTypeTag = styled.span<{ type: string }>`\n  display: inline-block;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-right: 6px;\n  background-color: #6c757d;\n  color: white;\n`;\n\nconst ThreadItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 32px 8px 32px;\n  cursor: pointer;\n  color: ${props => props.$isSelected ? '#6c757d' : '#666'};\n  font-size: 14px;\n  border-left: 3px solid ${props => props.$isSelected ? '#6c757d' : 'transparent'};\n  background: ${props => props.$isSelected ? '#f8f9fa' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f8f9fa;\n    color: #6c757d;\n  }\n`;\n\nconst ThreadItemContent = styled.div`\n  flex: 1;\n`;\n\nconst DeleteThreadButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  font-size: 14px;\n  padding: 4px;\n  border-radius: 4px;\n  opacity: 0;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e9ecef;\n    color: #dc3545;\n  }\n\n  ${ThreadItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst ThreadTitle = styled.div`\n  font-weight: 500;\n  margin-bottom: 2px;\n`;\n\nconst ThreadTime = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n`;\n\nconst ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  selectedItem,\n  onSelectItem,\n  isCollapsed = false,\n  onToggle,\n  selectedPersonaName,\n  selectedPersonaId,\n  refreshTrigger,\n  mode,\n  personas,\n  verbalizationThreads,\n  onSelectVerbalizationThread,\n  onRefreshTrigger,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [threads, setThreads] = useState<Record<string, TrainingThread[]>>({\n    interpretation: [],\n    proceed: [],\n    sentence: []\n  });\n  const [interactionRecords, setInteractionRecords] = useState<InteractionRecord[]>([]);\n  const [allRecentThreads, setAllRecentThreads] = useState<Array<TrainingThread & { persona_id: string; persona_name: string }>>([]);\n  const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);\n  const [interactionHeight, setInteractionHeight] = useState(300);\n  const [isResizing, setIsResizing] = useState(false);\n\n  const menuItems = mode === 'recent' \n    ? [] // 최근 상호작용 모드에서는 메뉴 아이템 없음\n    : [\n    { id: 'interpretation', name: '해석' },\n    { id: 'proceed', name: '나아가기' },\n    { id: 'sentence', name: '문장' },\n    { id: 'interaction_history', name: '상호작용 기록' },\n  ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (mode === 'recent' && personas) {\n        // 최근 상호작용 모드: 모든 페르소나의 스레드 + 언어화 스레드 로드\n        try {\n          const allPersonaThreads: Array<TrainingThread & { persona_id: string; persona_name: string }> = [];\n          \n          // 일반 페르소나 스레드 로드\n          for (const [personaId, persona] of Object.entries(personas)) {\n            try {\n              const response = await chatApi.getPersonaThreads(personaId);\n              if (response.data) {\n                const threadsWithPersonaInfo = response.data.map((thread: TrainingThread) => ({\n                  ...thread,\n                  persona_id: personaId,\n                  persona_name: persona.name,\n                }));\n                allPersonaThreads.push(...threadsWithPersonaInfo);\n              }\n            } catch (error) {\n              console.error(`페르소나 ${personaId} 스레드 로드 실패:`, error);\n            }\n          }\n          \n          // 언어화 스레드 로드\n          try {\n            const verbalizationResponse = await chatApi.getVerbalizationThreads();\n            if (verbalizationResponse.data) {\n              const verbalizationThreadsWithInfo = verbalizationResponse.data.map((thread: TrainingThread) => ({\n                ...thread,\n                persona_id: \"verbalization\",\n                persona_name: \"언어화\",\n              }));\n              allPersonaThreads.push(...verbalizationThreadsWithInfo);\n            }\n          } catch (error) {\n            console.error('언어화 스레드 로드 실패:', error);\n          }\n          \n          // 최신순으로 정렬 (updated_at이 있으면 우선, 없으면 created_at 사용)\n          const sortedThreads = allPersonaThreads.sort((a, b) => {\n            const timeA = a.updated_at ? new Date(a.updated_at).getTime() : new Date(a.created_at).getTime();\n            const timeB = b.updated_at ? new Date(b.updated_at).getTime() : new Date(b.created_at).getTime();\n            return timeB - timeA;\n          });\n          \n          setAllRecentThreads(sortedThreads);\n        } catch (error) {\n          console.error('전체 스레드 로드 실패:', error);\n        }\n        return;\n      }\n\n      if (!selectedPersonaId) return;\n\n      try {\n        // 기존 페르소나 모드 로직\n        const threadsResponse = await chatApi.getPersonaThreads(selectedPersonaId);\n        if (threadsResponse.data) {\n          const threadsByType = {\n            interpretation: threadsResponse.data\n              .filter((t: any) => t.thread_type === 'interpretation')\n              .sort((a: any, b: any) => {\n                const timeA = a.updated_at ? new Date(a.updated_at).getTime() : new Date(a.created_at).getTime();\n                const timeB = b.updated_at ? new Date(b.updated_at).getTime() : new Date(b.created_at).getTime();\n                return timeB - timeA;\n              }),\n            proceed: threadsResponse.data\n              .filter((t: any) => t.thread_type === 'proceed')\n              .sort((a: any, b: any) => {\n                const timeA = a.updated_at ? new Date(a.updated_at).getTime() : new Date(a.created_at).getTime();\n                const timeB = b.updated_at ? new Date(b.updated_at).getTime() : new Date(b.created_at).getTime();\n                return timeB - timeA;\n              }),\n            sentence: threadsResponse.data\n              .filter((t: any) => t.thread_type === 'sentence')\n              .sort((a: any, b: any) => {\n                const timeA = a.updated_at ? new Date(a.updated_at).getTime() : new Date(a.created_at).getTime();\n                const timeB = b.updated_at ? new Date(b.updated_at).getTime() : new Date(b.created_at).getTime();\n                return timeB - timeA;\n              })\n          };\n          setThreads(threadsByType);\n        }\n\n        // 상호작용 기록 로드\n        const recordsResponse = await chatApi.getAllInteractionRecords();\n        if (recordsResponse.data) {\n          const sortedRecords = recordsResponse.data.map((record: any) => ({\n            ...record,\n            threads: record.threads.sort((a: any, b: any) => {\n              const timeA = a.updated_at ? new Date(a.updated_at).getTime() : new Date(a.created_at).getTime();\n              const timeB = b.updated_at ? new Date(b.updated_at).getTime() : new Date(b.created_at).getTime();\n              return timeB - timeA;\n            })\n          }));\n          setInteractionRecords(sortedRecords);\n        }\n      } catch (error) {\n        console.error('데이터 로드 실패:', error);\n      }\n    };\n\n    loadData();\n  }, [selectedPersonaId, refreshTrigger, mode, personas]);\n\n  const handleAccordionToggle = (itemId: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n    \n    if (itemId === 'interaction_history') {\n      onSelectItem(itemId);\n    } else {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    if (itemThreads.length === 0) {\n      onSelectItem(itemId);\n      } else {\n        const latestThread = itemThreads[0];\n        setSelectedThreadId(latestThread.id);\n        onSelectItem(`${itemId}-thread-${latestThread.id}`);\n      }\n    }\n  };\n\n  const handleRecordThreadSelect = (thread: TrainingThread) => {\n    setSelectedThreadId(thread.id);\n    onSelectItem(`${thread.thread_type}-thread-${thread.id}`);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    \n    const startY = e.clientY;\n    const startHeight = interactionHeight;\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      const deltaY = e.clientY - startY;\n      const newHeight = Math.max(100, Math.min(600, startHeight + deltaY));\n      setInteractionHeight(newHeight);\n    };\n    \n    const handleMouseUp = () => {\n      setIsResizing(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatDate = (timestamp: string) => {\n    return new Date(timestamp).toLocaleDateString('ko-KR', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const handleThreadSelect = (threadId: string, itemType: string) => {\n    setSelectedThreadId(threadId);\n    onSelectItem(`${itemType}-thread-${threadId}`);\n  };\n\n  const handleDeleteThread = async (threadId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (window.confirm('이 스레드를 삭제하시겠습니까?')) {\n      try {\n        console.log('=== 스레드 삭제 시작 ===');\n        console.log('삭제할 threadId:', threadId);\n        console.log('현재 mode:', mode);\n        \n        const result = await chatApi.deleteThread(threadId);\n        console.log('API 응답:', result);\n        console.log('result.data:', result.data);\n        console.log('result.error:', result.error);\n        \n        if (result.data && result.data.success) {\n          console.log('삭제 성공');\n          if (mode === 'verbalization') {\n            // 언어화 모드인 경우: 부모 컴포넌트에 업데이트 요청\n            // verbalizationThreads는 props로 받아오므로 직접 수정하지 않고 부모에게 알림\n            // 삭제된 스레드가 현재 선택된 스레드인 경우 선택 해제\n            if (selectedThreadId === threadId) {\n              setSelectedThreadId(null);\n              if (onSelectVerbalizationThread) {\n                onSelectVerbalizationThread(null);\n              }\n            }\n            // refreshTrigger를 통해 부모 컴포넌트에 업데이트 요청\n            // (App.tsx에서 verbalizationThreads를 다시 로드하게 됨)\n            if (onRefreshTrigger) {\n              onRefreshTrigger();\n            }\n          } else {\n            // 일반 페르소나 모드인 경우: 기존 로직 유지\n          const updatedThreads = { ...threads };\n          Object.keys(updatedThreads).forEach(key => {\n              updatedThreads[key as keyof typeof threads] = updatedThreads[key as keyof typeof threads].filter((t: any) => t.id !== threadId);\n          });\n          setThreads(updatedThreads);\n          \n          if (selectedThreadId === threadId) {\n            setSelectedThreadId(null);\n          }\n          }\n          console.log('UI 업데이트 완료');\n        } else {\n          console.error('삭제 실패:', result.error || result.data?.message);\n          let errorMessage = '스레드 삭제에 실패했습니다';\n          \n          if (result.error) {\n            if (result.error.includes('네트워크 오류') || result.error.includes('Failed to fetch')) {\n              errorMessage += ': 백엔드 서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.';\n            } else {\n              errorMessage += ': ' + result.error;\n            }\n          } else if (result.data?.message) {\n            errorMessage += ': ' + result.data.message;\n          }\n          \n          alert(errorMessage);\n        }\n      } catch (error) {\n        console.error('스레드 삭제 실패:', error);\n        alert('스레드 삭제 중 예상치 못한 오류가 발생했습니다: ' + (error instanceof Error ? error.message : String(error)));\n      }\n    }\n  };\n\n  const getThreadTypeLabel = (type: string) => {\n    switch (type) {\n      case 'interpretation': return '해석';\n      case 'proceed': return '나아가기';\n      case 'sentence': return '문장';\n      case 'verbalization': return '언어화';\n      default: return type;\n    }\n  };\n\n  const getThreadContent = (thread: TrainingThread) => {\n    if (thread.messages && thread.messages.length > 0) {\n      const firstMessage = thread.messages[0];\n      return firstMessage.content.length > 30 \n        ? firstMessage.content.substring(0, 30) + '...' \n        : firstMessage.content;\n    }\n    return thread.content?.length > 30 \n      ? thread.content.substring(0, 30) + '...' \n      : thread.content || '내용 없음';\n  };\n\n  const renderThreads = (itemId: string) => {\n    const itemThreads = threads[itemId as keyof typeof threads] || [];\n    const isExpanded = expandedItems.has(itemId);\n\n    return (\n      <ThreadsList $isExpanded={isExpanded}>\n        {itemThreads.map((thread: any, index: number) => (\n          <ThreadItem\n            key={thread.id}\n            $isSelected={selectedThreadId === thread.id}\n            onClick={() => handleThreadSelect(thread.id, itemId)}\n          >\n            <ThreadItemContent>\n              <ThreadTitle>\n                {itemId === 'interpretation' && `해석 #${itemThreads.length - index}`}\n                {itemId === 'proceed' && `나아가기 #${itemThreads.length - index}`}\n                {itemId === 'sentence' && `문장 #${itemThreads.length - index}`}\n              </ThreadTitle>\n              <ThreadTime>\n                {formatTime(thread.created_at)} • {thread.messages.length}개 메시지\n              </ThreadTime>\n            </ThreadItemContent>\n            <DeleteThreadButton\n              onClick={(e) => handleDeleteThread(thread.id, e)}\n              title=\"스레드 삭제\"\n            >\n              🗑️\n            </DeleteThreadButton>\n          </ThreadItem>\n        ))}\n        {itemThreads.length === 0 && (\n          <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999' }}>\n            스레드가 없습니다\n          </div>\n        )}\n      </ThreadsList>\n    );\n  };\n\n  const renderInteractionRecords = () => {\n    const isExpanded = expandedItems.has('interaction_history');\n    \n    // 현재 선택된 페르소나의 기록만 필터링\n    const currentPersonaRecord = interactionRecords.find(\n      record => record.persona_id === selectedPersonaId\n    );\n\n    return (\n      <ResizableContainer \n        $isExpanded={isExpanded}\n        $height={interactionHeight}\n      >\n        {isExpanded && (\n          <>\n            <InteractionRecordsList $isExpanded={isExpanded}>\n              {currentPersonaRecord ? (\n                currentPersonaRecord.threads.map((thread) => (\n                  <RecordThreadItem\n                    key={thread.id}\n                    $isSelected={selectedThreadId === thread.id}\n                    onClick={() => handleRecordThreadSelect(thread)}\n                  >\n                    <div>\n                      <ThreadTypeTag type={thread.thread_type}>\n                        {getThreadTypeLabel(thread.thread_type)}\n                      </ThreadTypeTag>\n                      {getThreadContent(thread)}\n                    </div>\n                    <div style={{ fontSize: '11px', opacity: 0.7, marginTop: '2px' }}>\n                      {formatTime(thread.created_at)}\n                    </div>\n                  </RecordThreadItem>\n                ))\n              ) : (\n                <div style={{ padding: '16px', fontSize: '14px', color: '#999', textAlign: 'center' }}>\n                  이 페르소나의 상호작용 기록이 없습니다\n                </div>\n              )}\n            </InteractionRecordsList>\n            <ResizeHandle onMouseDown={handleMouseDown} />\n          </>\n        )}\n      </ResizableContainer>\n    );\n  };\n\n  const getThreadTitle = (thread: TrainingThread) => {\n    let content = '';\n    \n    if (thread.messages && thread.messages.length > 0) {\n      const firstUserMessage = thread.messages.find(m => m.role === 'user');\n      if (firstUserMessage) {\n        content = firstUserMessage.content;\n      } else if (thread.messages[0]) {\n        content = thread.messages[0].content;\n      }\n    } else if (thread.content) {\n      content = thread.content;\n    }\n    \n    if (content.length > 50) {\n      return content.substring(0, 50) + '...';\n    }\n    return content || '내용 없음';\n  };\n\n  return (\n    <Sidebar width=\"250px\" $isCollapsed={isCollapsed} $variant=\"conversation\">\n      {onToggle && (\n        <SidebarToggleButton onClick={onToggle}>\n        </SidebarToggleButton>\n      )}\n\n      <SidebarHeader $isCollapsed={isCollapsed}>\n        {mode === 'recent' ? (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            전체 상호작용\n          </SidebarTitle>\n        ) : mode === 'verbalization' ? (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            언어화 대화\n          </SidebarTitle>\n        ) : selectedPersonaName ? (\n          <SidebarTitle $isCollapsed={isCollapsed}>\n            {selectedPersonaName}\n          </SidebarTitle>\n        ) : null}\n      </SidebarHeader>\n\n      <SidebarContent $isCollapsed={isCollapsed}>\n        <SidebarMenuContent $variant=\"conversation\">\n          {mode === 'recent' ? (\n            // 최근 상호작용 모드: 스레드 목록 직접 표시\n            <div style={{ padding: '16px 0' }}>\n              {allRecentThreads.map((thread) => (\n                <ThreadItem\n                  key={`${thread.persona_id}-${thread.id}`}\n                  $isSelected={selectedThreadId === thread.id}\n                  onClick={() => {\n                    setSelectedThreadId(thread.id);\n                    onSelectItem(`recent-thread-${thread.id}-${thread.persona_id}`);\n                  }}\n                >\n                  <ThreadItemContent>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '4px' }}>\n                      <span style={{\n                        padding: '2px 6px',\n                        background: '#ffffff',\n                        color: '#000000',\n                        border: '1px solid #000000',\n                        borderRadius: '4px',\n                        fontSize: '10px',\n                        fontWeight: '600',\n                      }}>\n                        {thread.persona_name}\n                      </span>\n                      <ThreadTypeTag type={thread.thread_type}>\n                        {getThreadTypeLabel(thread.thread_type)}\n                      </ThreadTypeTag>\n                    </div>\n                    <ThreadTitle>\n                      {getThreadTitle(thread)}\n                    </ThreadTitle>\n                    <ThreadTime>\n                      {formatTime(thread.created_at)} • {thread.messages?.length || 0}개 메시지\n                    </ThreadTime>\n                  </ThreadItemContent>\n                </ThreadItem>\n              ))}\n              {allRecentThreads.length === 0 && (\n                <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999', textAlign: 'center' }}>\n                  상호작용 기록이 없습니다\n                </div>\n              )}\n            </div>\n          ) : mode === 'verbalization' ? (\n            // 언어화 모드: 언어화 스레드 목록 표시\n            <div style={{ padding: '16px 0' }}>\n              {verbalizationThreads && [...verbalizationThreads]\n                .sort((a, b) => {\n                  const timeA = a.updated_at ? new Date(a.updated_at).getTime() : new Date(a.created_at).getTime();\n                  const timeB = b.updated_at ? new Date(b.updated_at).getTime() : new Date(b.created_at).getTime();\n                  return timeB - timeA;\n                })\n                .map((thread, index) => (\n                <ThreadItem\n                  key={thread.id}\n                  $isSelected={selectedThreadId === thread.id}\n                  onClick={() => {\n                    setSelectedThreadId(thread.id);\n                    if (onSelectVerbalizationThread) {\n                      onSelectVerbalizationThread(thread);\n                    }\n                  }}\n                >\n                  <ThreadItemContent>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '4px' }}>\n                      <span style={{\n                        padding: '2px 6px',\n                        background: '#ffffff',\n                        color: '#000000',\n                        border: '1px solid #000000',\n                        borderRadius: '4px',\n                        fontSize: '10px',\n                        fontWeight: '600',\n                      }}>\n                        언어화\n                      </span>\n                    </div>\n                    <ThreadTitle>\n                      언어화 #{verbalizationThreads.length - index}\n                    </ThreadTitle>\n                    <ThreadTime>\n                      {formatTime(thread.created_at)} • {thread.messages?.length || 0}개 메시지\n                    </ThreadTime>\n                  </ThreadItemContent>\n                  <DeleteThreadButton\n                    onClick={(e) => handleDeleteThread(thread.id, e)}\n                    title=\"스레드 삭제\"\n                  >\n                    🗑️\n                  </DeleteThreadButton>\n                </ThreadItem>\n              ))}\n              {(!verbalizationThreads || verbalizationThreads.length === 0) && (\n                <div style={{ padding: '16px 32px', fontSize: '14px', color: '#999', textAlign: 'center' }}>\n                  언어화 대화가 없습니다.<br />\n                  새 대화를 시작해보세요!\n                </div>\n              )}\n            </div>\n          ) : (\n            // 기존 페르소나 모드: 아코디언 메뉴\n          <AccordionContainer>\n            {menuItems.map((item) => (\n              <AccordionItem key={item.id}>\n                <AccordionHeader\n                    $isSelected={selectedItem === item.id}\n                    $isExpanded={expandedItems.has(item.id)}\n                  onClick={() => handleAccordionToggle(item.id)}\n                >\n                    <span>{item.name}</span>\n                </AccordionHeader>\n                \n                  {item.id === 'interaction_history' \n                    ? renderInteractionRecords()\n                    : renderThreads(item.id)\n                  }\n              </AccordionItem>\n            ))}\n          </AccordionContainer>\n          )}\n        </SidebarMenuContent>\n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default ConversationSidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}