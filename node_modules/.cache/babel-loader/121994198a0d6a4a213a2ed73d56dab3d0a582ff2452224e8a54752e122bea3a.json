{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\components\\\\TrainingCategoryView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport InterpretationPopup from './InterpretationPopup';\nimport { chatApi } from '../api/chatApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  padding: 20px;\n  height: 100%;\n  overflow-y: auto;\n`;\n_c = CategoryContainer;\nconst CategorySection = styled.div`\n  margin-bottom: 24px;\n`;\n_c2 = CategorySection;\nconst CategoryHeader = styled.div`\n  background: linear-gradient(135deg, #f0f0f0 0%, #d0d0d0 100%);\n  color: #333;\n  padding: 16px 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n    background: linear-gradient(135deg, #e8e8e8 0%, #c8c8c8 100%);\n  }\n`;\n_c3 = CategoryHeader;\nconst CategoryIcon = styled.span`\n  transform: ${props => props.isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.3s ease;\n  font-size: 16px;\n`;\n_c4 = CategoryIcon;\nconst SubcategoryContainer = styled.div`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  max-height: ${props => props.isExpanded ? '1000px' : '0'};\n  background: white;\n  border-radius: 0 0 12px 12px;\n  box-shadow: ${props => props.isExpanded ? '0 4px 12px rgba(0, 0, 0, 0.1)' : 'none'};\n`;\n_c5 = SubcategoryContainer;\nconst SubcategorySection = styled.div`\n  padding: 16px;\n  border-left: 3px solid #e0e0e0;\n  margin: 8px 16px;\n`;\n_c6 = SubcategorySection;\nconst SubcategoryTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n_c7 = SubcategoryTitle;\nconst PersonaCard = styled.div`\n  background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n    border-color: #ccc;\n    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n_c8 = PersonaCard;\nconst CheckIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n`;\n_c9 = CheckIcon;\nconst PersonaName = styled.h4`\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n`;\n_c0 = PersonaName;\nconst PersonaDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n  margin-bottom: 8px;\n`;\n\n// 직접 표시 카테고리용 스타일 (들여쓰기)\n_c1 = PersonaDescription;\nconst DirectCategorySection = styled.div`\n  margin-left: 24px;\n  margin-bottom: 24px;\n`;\n_c10 = DirectCategorySection;\nconst DirectCategoryTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #444;\n  margin-bottom: 16px;\n  padding-left: 8px;\n  border-left: 4px solid #ddd;\n`;\n_c11 = DirectCategoryTitle;\nconst TrainingCategoryView = ({\n  personas,\n  onSelectPersona,\n  onInterpretationComplete\n}) => {\n  _s();\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const [selectedPersonaForInterpretation, setSelectedPersonaForInterpretation] = useState(null);\n  const [interpretationStatuses, setInterpretationStatuses] = useState({});\n\n  // 해석 상태 가져오기\n  useEffect(() => {\n    const fetchInterpretationStatus = async () => {\n      const response = await chatApi.getInterpretationStatus();\n      if (response.data) {\n        const statusMap = {};\n        response.data.forEach(status => {\n          statusMap[status.persona_id] = status.has_interpretation;\n        });\n        setInterpretationStatuses(statusMap);\n      }\n    };\n    fetchInterpretationStatus();\n  }, []);\n\n  // 카테고리별로 페르소나 그룹화\n  const groupedPersonas = Object.entries(personas).reduce((acc, [id, persona]) => {\n    if (!acc[persona.category]) {\n      acc[persona.category] = {};\n    }\n    if (!acc[persona.category][persona.subcategory]) {\n      acc[persona.category][persona.subcategory] = [];\n    }\n    acc[persona.category][persona.subcategory].push({\n      id,\n      ...persona\n    });\n    return acc;\n  }, {});\n\n  // 최상위 카테고리들 (심리학, 철학)은 아코디언 없이 계속 표시\n  const topLevelCategories = ['심리학', '철학'];\n\n  // 하위 카테고리별 아코디언 상태 관리\n  const [expandedSubcategories, setExpandedSubcategories] = useState({});\n  const toggleCategory = category => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const handlePersonaClick = async (personaId, personaName) => {\n    const hasInterpretation = interpretationStatuses[personaId];\n    if (hasInterpretation) {\n      // 해석이 있으면 바로 채팅 모드로\n      const response = await chatApi.getInterpretation(personaId);\n      if (response.data) {\n        onInterpretationComplete(personaId, response.data.interpretation);\n        onSelectPersona(personaId);\n      }\n    } else {\n      // 해석이 없으면 생성 팝업 표시\n      setSelectedPersonaForInterpretation({\n        id: personaId,\n        name: personaName\n      });\n    }\n  };\n  const handleInterpretationConfirm = async () => {\n    if (!selectedPersonaForInterpretation) return;\n\n    // 백엔드에서 해석 생성 요청\n    const response = await chatApi.generateInterpretation({\n      persona_id: selectedPersonaForInterpretation.id,\n      user_input: \"기본 심리 해석 요청\"\n    });\n    if (response.data) {\n      // 해석 상태 업데이트\n      setInterpretationStatuses(prev => ({\n        ...prev,\n        [selectedPersonaForInterpretation.id]: true\n      }));\n    }\n  };\n  const handleInterpretationCancel = () => {\n    setSelectedPersonaForInterpretation(null);\n  };\n  const handleInterpretationComplete = interpretation => {\n    if (selectedPersonaForInterpretation) {\n      onInterpretationComplete(selectedPersonaForInterpretation.id, interpretation);\n      onSelectPersona(selectedPersonaForInterpretation.id);\n      setSelectedPersonaForInterpretation(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: [directDisplayCategories.map(category => {\n        const subcategories = groupedPersonas[category];\n        if (!subcategories) return null;\n        return /*#__PURE__*/_jsxDEV(DirectCategorySection, {\n          children: [/*#__PURE__*/_jsxDEV(DirectCategoryTitle, {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), Object.entries(subcategories).map(([subcategory, personaList]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: personaList.map(persona => /*#__PURE__*/_jsxDEV(PersonaCard, {\n              hasInterpretation: interpretationStatuses[persona.id] || false,\n              onClick: () => handlePersonaClick(persona.id, persona.name),\n              children: [interpretationStatuses[persona.id] && /*#__PURE__*/_jsxDEV(CheckIcon, {\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(PersonaName, {\n                children: persona.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(PersonaDescription, {\n                dangerouslySetInnerHTML: {\n                  __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this)]\n            }, persona.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this))\n          }, subcategory, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this))]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this);\n      }), accordionCategories.map(category => {\n        const subcategories = groupedPersonas[category];\n        if (!subcategories) return null;\n        return /*#__PURE__*/_jsxDEV(CategorySection, {\n          children: [/*#__PURE__*/_jsxDEV(CategoryHeader, {\n            isExpanded: expandedCategories[category] || false,\n            onClick: () => toggleCategory(category),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CategoryIcon, {\n              isExpanded: expandedCategories[category] || false,\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SubcategoryContainer, {\n            isExpanded: expandedCategories[category] || false,\n            children: Object.entries(subcategories).map(([subcategory, personaList]) => /*#__PURE__*/_jsxDEV(SubcategorySection, {\n              children: [/*#__PURE__*/_jsxDEV(SubcategoryTitle, {\n                children: subcategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), personaList.map(persona => /*#__PURE__*/_jsxDEV(PersonaCard, {\n                hasInterpretation: interpretationStatuses[persona.id] || false,\n                onClick: () => handlePersonaClick(persona.id, persona.name),\n                children: [interpretationStatuses[persona.id] && /*#__PURE__*/_jsxDEV(CheckIcon, {\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(PersonaName, {\n                  children: persona.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PersonaDescription, {\n                  dangerouslySetInnerHTML: {\n                    __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this)]\n              }, persona.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this))]\n            }, subcategory, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InterpretationPopup, {\n      isOpen: selectedPersonaForInterpretation !== null,\n      personaName: (selectedPersonaForInterpretation === null || selectedPersonaForInterpretation === void 0 ? void 0 : selectedPersonaForInterpretation.name) || '',\n      onConfirm: handleInterpretationConfirm,\n      onCancel: handleInterpretationCancel,\n      onComplete: handleInterpretationComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TrainingCategoryView, \"+lHkQ+CLrDDkruT4oCkLfAsexR0=\");\n_c12 = TrainingCategoryView;\nexport default TrainingCategoryView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"CategoryContainer\");\n$RefreshReg$(_c2, \"CategorySection\");\n$RefreshReg$(_c3, \"CategoryHeader\");\n$RefreshReg$(_c4, \"CategoryIcon\");\n$RefreshReg$(_c5, \"SubcategoryContainer\");\n$RefreshReg$(_c6, \"SubcategorySection\");\n$RefreshReg$(_c7, \"SubcategoryTitle\");\n$RefreshReg$(_c8, \"PersonaCard\");\n$RefreshReg$(_c9, \"CheckIcon\");\n$RefreshReg$(_c0, \"PersonaName\");\n$RefreshReg$(_c1, \"PersonaDescription\");\n$RefreshReg$(_c10, \"DirectCategorySection\");\n$RefreshReg$(_c11, \"DirectCategoryTitle\");\n$RefreshReg$(_c12, \"TrainingCategoryView\");","map":{"version":3,"names":["React","useState","useEffect","styled","InterpretationPopup","chatApi","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryContainer","div","_c","CategorySection","_c2","CategoryHeader","_c3","CategoryIcon","span","props","isExpanded","_c4","SubcategoryContainer","_c5","SubcategorySection","_c6","SubcategoryTitle","h3","_c7","PersonaCard","_c8","CheckIcon","_c9","PersonaName","h4","_c0","PersonaDescription","p","_c1","DirectCategorySection","_c10","DirectCategoryTitle","_c11","TrainingCategoryView","personas","onSelectPersona","onInterpretationComplete","_s","expandedCategories","setExpandedCategories","selectedPersonaForInterpretation","setSelectedPersonaForInterpretation","interpretationStatuses","setInterpretationStatuses","fetchInterpretationStatus","response","getInterpretationStatus","data","statusMap","forEach","status","persona_id","has_interpretation","groupedPersonas","Object","entries","reduce","acc","id","persona","category","subcategory","push","topLevelCategories","expandedSubcategories","setExpandedSubcategories","toggleCategory","prev","handlePersonaClick","personaId","personaName","hasInterpretation","getInterpretation","interpretation","name","handleInterpretationConfirm","generateInterpretation","user_input","handleInterpretationCancel","handleInterpretationComplete","children","directDisplayCategories","map","subcategories","fileName","_jsxFileName","lineNumber","columnNumber","personaList","onClick","dangerouslySetInnerHTML","__html","description","replace","accordionCategories","isOpen","onConfirm","onCancel","onComplete","_c12","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/components/TrainingCategoryView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Persona, InterpretationStatus } from '../types';\nimport styled from 'styled-components';\nimport InterpretationPopup from './InterpretationPopup';\nimport { chatApi } from '../api/chatApi';\n\ninterface TrainingCategoryViewProps {\n  personas: Record<string, Persona>;\n  onSelectPersona: (personaId: string) => void;\n  onInterpretationComplete: (personaId: string, interpretation: string) => void;\n}\n\nconst CategoryContainer = styled.div`\n  padding: 20px;\n  height: 100%;\n  overflow-y: auto;\n`;\n\nconst CategorySection = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst CategoryHeader = styled.div<{ isExpanded: boolean }>`\n  background: linear-gradient(135deg, #f0f0f0 0%, #d0d0d0 100%);\n  color: #333;\n  padding: 16px 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n    background: linear-gradient(135deg, #e8e8e8 0%, #c8c8c8 100%);\n  }\n`;\n\nconst CategoryIcon = styled.span<{ isExpanded: boolean }>`\n  transform: ${props => props.isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'};\n  transition: transform 0.3s ease;\n  font-size: 16px;\n`;\n\nconst SubcategoryContainer = styled.div<{ isExpanded: boolean }>`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  max-height: ${props => props.isExpanded ? '1000px' : '0'};\n  background: white;\n  border-radius: 0 0 12px 12px;\n  box-shadow: ${props => props.isExpanded ? '0 4px 12px rgba(0, 0, 0, 0.1)' : 'none'};\n`;\n\nconst SubcategorySection = styled.div`\n  padding: 16px;\n  border-left: 3px solid #e0e0e0;\n  margin: 8px 16px;\n`;\n\nconst SubcategoryTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst PersonaCard = styled.div<{ hasInterpretation: boolean }>`\n  background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n    border-color: #ccc;\n    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst CheckIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst PersonaName = styled.h4`\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n`;\n\nconst PersonaDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n  margin-bottom: 8px;\n`;\n\n\n\n// 직접 표시 카테고리용 스타일 (들여쓰기)\nconst DirectCategorySection = styled.div`\n  margin-left: 24px;\n  margin-bottom: 24px;\n`;\n\nconst DirectCategoryTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #444;\n  margin-bottom: 16px;\n  padding-left: 8px;\n  border-left: 4px solid #ddd;\n`;\n\nconst TrainingCategoryView: React.FC<TrainingCategoryViewProps> = ({\n  personas,\n  onSelectPersona,\n  onInterpretationComplete,\n}) => {\n  const [expandedCategories, setExpandedCategories] = useState<Record<string, boolean>>({});\n  const [selectedPersonaForInterpretation, setSelectedPersonaForInterpretation] = useState<{\n    id: string;\n    name: string;\n  } | null>(null);\n  const [interpretationStatuses, setInterpretationStatuses] = useState<Record<string, boolean>>({});\n\n  // 해석 상태 가져오기\n  useEffect(() => {\n    const fetchInterpretationStatus = async () => {\n      const response = await chatApi.getInterpretationStatus();\n      if (response.data) {\n        const statusMap: Record<string, boolean> = {};\n        response.data.forEach(status => {\n          statusMap[status.persona_id] = status.has_interpretation;\n        });\n        setInterpretationStatuses(statusMap);\n      }\n    };\n\n    fetchInterpretationStatus();\n  }, []);\n\n  // 카테고리별로 페르소나 그룹화\n  const groupedPersonas = Object.entries(personas).reduce((acc, [id, persona]) => {\n    if (!acc[persona.category]) {\n      acc[persona.category] = {};\n    }\n    if (!acc[persona.category][persona.subcategory]) {\n      acc[persona.category][persona.subcategory] = [];\n    }\n    acc[persona.category][persona.subcategory].push({ id, ...persona });\n    return acc;\n  }, {} as Record<string, Record<string, Array<{ id: string } & Persona>>>);\n\n  // 최상위 카테고리들 (심리학, 철학)은 아코디언 없이 계속 표시\n  const topLevelCategories = ['심리학', '철학'];\n  \n  // 하위 카테고리별 아코디언 상태 관리\n  const [expandedSubcategories, setExpandedSubcategories] = useState<Record<string, boolean>>({});\n\n  const toggleCategory = (category: string) => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n\n  const handlePersonaClick = async (personaId: string, personaName: string) => {\n    const hasInterpretation = interpretationStatuses[personaId];\n    \n    if (hasInterpretation) {\n      // 해석이 있으면 바로 채팅 모드로\n      const response = await chatApi.getInterpretation(personaId);\n      if (response.data) {\n        onInterpretationComplete(personaId, response.data.interpretation);\n        onSelectPersona(personaId);\n      }\n    } else {\n      // 해석이 없으면 생성 팝업 표시\n      setSelectedPersonaForInterpretation({ id: personaId, name: personaName });\n    }\n  };\n\n  const handleInterpretationConfirm = async () => {\n    if (!selectedPersonaForInterpretation) return;\n    \n    // 백엔드에서 해석 생성 요청\n    const response = await chatApi.generateInterpretation({\n      persona_id: selectedPersonaForInterpretation.id,\n      user_input: \"기본 심리 해석 요청\"\n    });\n    \n    if (response.data) {\n      // 해석 상태 업데이트\n      setInterpretationStatuses(prev => ({\n        ...prev,\n        [selectedPersonaForInterpretation.id]: true\n      }));\n    }\n  };\n\n  const handleInterpretationCancel = () => {\n    setSelectedPersonaForInterpretation(null);\n  };\n\n  const handleInterpretationComplete = (interpretation: string) => {\n    if (selectedPersonaForInterpretation) {\n      onInterpretationComplete(selectedPersonaForInterpretation.id, interpretation);\n      onSelectPersona(selectedPersonaForInterpretation.id);\n      setSelectedPersonaForInterpretation(null);\n    }\n  };\n\n  return (\n    <>\n      <CategoryContainer>       \n        {/* 직접 표시 카테고리들 (정신분석, 인지행동치료) - 들여쓰기 적용 */}\n        {directDisplayCategories.map(category => {\n          const subcategories = groupedPersonas[category];\n          if (!subcategories) return null;\n          \n          return (\n            <DirectCategorySection key={category}>\n              <DirectCategoryTitle>{category}</DirectCategoryTitle>\n              {Object.entries(subcategories).map(([subcategory, personaList]) => (\n                <div key={subcategory}>\n                  {personaList.map((persona) => (\n                    <PersonaCard \n                      key={persona.id}\n                      hasInterpretation={interpretationStatuses[persona.id] || false}\n                      onClick={() => handlePersonaClick(persona.id, persona.name)}\n                    >\n                      {interpretationStatuses[persona.id] && (\n                        <CheckIcon>✓</CheckIcon>\n                      )}\n                      <PersonaName>{persona.name}</PersonaName>\n                      <PersonaDescription \n                        dangerouslySetInnerHTML={{\n                          __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                        }}\n                      />\n                    </PersonaCard>\n                  ))}\n                </div>\n              ))}\n            </DirectCategorySection>\n          );\n        })}\n\n        {/* 아코디언 카테고리들 (심리학, 인문학) */}\n        {accordionCategories.map(category => {\n          const subcategories = groupedPersonas[category];\n          if (!subcategories) return null;\n          \n          return (\n            <CategorySection key={category}>\n              <CategoryHeader\n                isExpanded={expandedCategories[category] || false}\n                onClick={() => toggleCategory(category)}\n              >\n                <span>{category}</span>\n                <CategoryIcon isExpanded={expandedCategories[category] || false}>\n                  ▶\n                </CategoryIcon>\n              </CategoryHeader>\n              \n              <SubcategoryContainer isExpanded={expandedCategories[category] || false}>\n                {Object.entries(subcategories).map(([subcategory, personaList]) => (\n                  <SubcategorySection key={subcategory}>\n                    <SubcategoryTitle>{subcategory}</SubcategoryTitle>\n                    {personaList.map((persona) => (\n                      <PersonaCard \n                        key={persona.id}\n                        hasInterpretation={interpretationStatuses[persona.id] || false}\n                        onClick={() => handlePersonaClick(persona.id, persona.name)}\n                      >\n                        {interpretationStatuses[persona.id] && (\n                          <CheckIcon>✓</CheckIcon>\n                        )}\n                        <PersonaName>{persona.name}</PersonaName>\n                        <PersonaDescription \n                          dangerouslySetInnerHTML={{\n                            __html: persona.description.replace(/•/g, '<span style=\"display: inline-block; width: 8px; height: 8px; background: #666; border-radius: 50%; margin-right: 8px; margin-bottom: 2px;\"></span>')\n                          }}\n                        />\n                      </PersonaCard>\n                    ))}\n                  </SubcategorySection>\n                ))}\n              </SubcategoryContainer>\n            </CategorySection>\n          );\n        })}\n      </CategoryContainer>\n\n      <InterpretationPopup\n        isOpen={selectedPersonaForInterpretation !== null}\n        personaName={selectedPersonaForInterpretation?.name || ''}\n        onConfirm={handleInterpretationConfirm}\n        onCancel={handleInterpretationCancel}\n        onComplete={handleInterpretationComplete}\n      />\n    </>\n  );\n};\n\nexport default TrainingCategoryView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}