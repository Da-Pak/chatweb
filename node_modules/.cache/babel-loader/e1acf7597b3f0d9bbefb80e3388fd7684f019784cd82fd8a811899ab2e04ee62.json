{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungh\\\\Desktop\\\\chat_work\\\\frontend\\\\src\\\\features\\\\vault\\\\components\\\\SentenceVaultView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi } from '../../training/api/sentenceApi';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n_c = Container;\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = Header;\nconst FilterDropdownButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n_c3 = FilterDropdownButton;\nconst FilterDropdownMenu = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n_c4 = FilterDropdownMenu;\nconst FilterDropdownItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n_c5 = FilterDropdownItem;\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c6 = FilterContainer;\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c7 = NavigationButton;\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n_c8 = ContentArea;\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n_c9 = SentenceGrid;\nconst SentenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c0 = SentenceContainer;\nconst SentenceRow = styled.div`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  ${props => props.$isPinned && `\n    /* 고정된 경우에도 기본 회색 그라데이션 유지 */\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    border-color: #dee2e6;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: #adb5bd;\n    }\n  `}\n`;\n_c1 = SentenceRow;\nconst SentenceContent = styled.div`\n  flex: 1;\n`;\n_c10 = SentenceContent;\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n_c11 = SentenceText;\nconst SentenceMetaExternal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n_c12 = SentenceMetaExternal;\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n_c13 = PersonaLabel;\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n_c14 = DateLabel;\nconst PinIcon = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#333' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #333;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#333' : '#666'};\n  }\n  \n  &::before {\n    content: \"📌\";\n    filter: grayscale(100%);\n  }\n`;\n_c15 = PinIcon;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n_c16 = EmptyState;\nconst ContextMenuContainer = styled.div`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n_c17 = ContextMenuContainer;\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n_c18 = ContextMenuItem;\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n_c19 = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n_c20 = ModalContent;\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n_c21 = ModalTitle;\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n_c22 = ModalMessage;\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n_c23 = ModalButtons;\nconst ModalButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n_c24 = ModalButton;\nconst SentenceVaultView = ({\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  _s();\n  const [sentences, setSentences] = useState([]);\n  const [filteredSentences, setFilteredSentences] = useState([]);\n  const [personas, setPersonas] = useState({});\n  const [currentFilter, setCurrentFilter] = useState('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedSentences, setPinnedSentences] = useState(new Set());\n  const [contextMenu, setContextMenu] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState(['전체', '언어화', '편지']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');\n      setContextMenu(null);\n    };\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = event => {\n      const target = event.target;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 페르소나 데이터 로드\n      const personaResponse = await chatApi.getPersonas();\n      if (personaResponse.data) {\n        setPersonas(personaResponse.data);\n\n        // 필터 옵션에 페르소나들 추가\n        const personaNames = Object.values(personaResponse.data).map(p => p.name);\n        setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n      }\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applyFilter = () => {\n    let filtered = [...sentences];\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => {\n          var _s$source_message_id;\n          return s.tags.includes('verbalization') || s.tags.includes('언어화') || ((_s$source_message_id = s.source_message_id) === null || _s$source_message_id === void 0 ? void 0 : _s$source_message_id.includes('verbalization'));\n        });\n      } else if (currentFilter === '편지') {\n        filtered = filtered.filter(s => s.tags.includes('letter'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n\n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    setFilteredSentences([...pinned, ...unpinned]);\n  };\n  const handleFilterChange = filter => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n  const handleNavigateFilter = direction => {\n    const newIndex = direction === 'prev' ? Math.max(0, currentFilterIndex - 1) : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n  const handleSentenceClick = (event, sentence) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('문장 클릭됨:', sentence.sentence.substring(0, 50));\n    console.log('클릭 위치:', event.clientX, event.clientY);\n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n    console.log('컨텍스트 메뉴 설정됨');\n  };\n  const handleContextMenuAction = (action, sentence) => {\n    console.log('컨텍스트 메뉴 액션:', action);\n    setContextMenu(null);\n    switch (action) {\n      case 'interact':\n      case 'delete':\n        setConfirmationModal({\n          type: action,\n          sentence\n        });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n  const handleConfirmAction = async () => {\n    var _sentence$source_mess;\n    if (!confirmationModal) return;\n    const {\n      type,\n      sentence\n    } = confirmationModal;\n    try {\n      switch (type) {\n        case 'interact':\n          console.log('=== 상호작용 하기 시작 ===');\n          console.log('문장 데이터:', sentence);\n          console.log('tags:', sentence.tags);\n          console.log('source_message_id:', sentence.source_message_id);\n          console.log('source_conversation_id:', sentence.source_conversation_id);\n\n          // 해당 문장의 출처 스레드로 이동하면서 입력창에 \\\"문장에 대해\\\" 형태로 설정\n          if (sentence.tags.includes('verbalization') || sentence.tags.includes('언어화') || (_sentence$source_mess = sentence.source_message_id) !== null && _sentence$source_mess !== void 0 && _sentence$source_mess.includes('verbalization')) {\n            console.log('언어화 문장으로 인식됨');\n            // 언어화에서 온 문장인 경우 - 언어화 스레드로 이동\n            if (sentence.source_conversation_id && sentence.source_conversation_id !== 'verbalization_chat') {\n              console.log('언어화 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n              if (onNavigateToThread) {\n                onNavigateToThread(sentence.source_conversation_id, 'verbalization');\n              }\n            } else {\n              console.log('언어화 스레드 ID가 없어서 언어화 모드로만 전환');\n              // source_conversation_id가 없으면 언어화 모드로만 전환\n              sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n              if (onNavigateToPersona) {\n                // 임시로 언어화 페르소나 ID 사용\n                onNavigateToPersona('verbalization', 'sentence');\n              }\n            }\n          } else {\n            var _sentence$source_mess2, _sentence$source_mess3, _sentence$source_mess4;\n            console.log('훈습 문장으로 인식됨');\n            // 훈습에서 온 문장인 경우 - source_message_id에서 스레드 타입 식별\n            let threadType = 'interpretation'; // 기본값\n\n            if ((_sentence$source_mess2 = sentence.source_message_id) !== null && _sentence$source_mess2 !== void 0 && _sentence$source_mess2.includes('sentence_') || sentence.tags.includes('sentence')) {\n              threadType = 'sentence';\n            } else if ((_sentence$source_mess3 = sentence.source_message_id) !== null && _sentence$source_mess3 !== void 0 && _sentence$source_mess3.includes('proceed_') || sentence.tags.includes('proceed')) {\n              threadType = 'proceed';\n            } else if ((_sentence$source_mess4 = sentence.source_message_id) !== null && _sentence$source_mess4 !== void 0 && _sentence$source_mess4.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n              threadType = 'interpretation';\n            }\n            console.log('식별된 스레드 타입:', threadType);\n            if (sentence.source_conversation_id) {\n              console.log('훈습 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n              if (onNavigateToThread) {\n                onNavigateToThread(sentence.source_conversation_id, threadType);\n              }\n            } else {\n              console.log('훈습 스레드 ID가 없음');\n              // source_conversation_id가 없으면 페르소나 정보라도 추출해서 해당 페르소나로 이동\n              const personaId = sentence.tags.find(tag => tag !== threadType && tag !== 'sentence' && tag !== 'proceed' && tag !== 'interpretation');\n              if (personaId && personas && personas[personaId]) {\n                console.log('페르소나 ID 찾음:', personaId);\n                sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n                if (onNavigateToPersona) {\n                  onNavigateToPersona(personaId, 'sentence');\n                }\n              } else {\n                console.log('페르소나 정보도 찾을 수 없음');\n                alert('해당 문장의 출처 정보를 찾을 수 없습니다.');\n              }\n            }\n          }\n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n      alert('작업 실행 중 오류가 발생했습니다: ' + error);\n    }\n    setConfirmationModal(null);\n  };\n  const togglePin = sentenceId => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n  const extractPersonaIdFromSentence = sentence => {\n    console.log('라벨 추출 중:', sentence);\n    console.log('tags:', sentence.tags);\n    console.log('source_message_id:', sentence.source_message_id);\n    console.log('사용 가능한 페르소나들:', Object.keys(personas));\n\n    // tags에서 페르소나 ID 찾기\n    for (const tag of sentence.tags) {\n      if (personas[tag]) {\n        console.log('태그에서 페르소나 발견:', tag, personas[tag].name);\n        return tag;\n      }\n    }\n    return null;\n  };\n  const getPersonaName = sentence => {\n    var _sentence$source_mess5;\n    // 언어화 태그 체크\n    if (sentence.tags.includes('언어화') || sentence.tags.includes('verbalization') || (_sentence$source_mess5 = sentence.source_message_id) !== null && _sentence$source_mess5 !== void 0 && _sentence$source_mess5.includes('verbalization')) {\n      return '언어화';\n    }\n\n    // 편지 태그 체크\n    if (sentence.tags.includes('letter')) {\n      return '편지';\n    }\n\n    // 페르소나 이름 찾기\n    for (const tag of sentence.tags) {\n      const persona = personas[tag];\n      if (persona) {\n        return persona.name;\n      }\n    }\n    return '시스템';\n  };\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    const {\n      type,\n      sentence\n    } = confirmationModal;\n    const personaName = getPersonaName(sentence);\n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 문장이 온 스레드로 이동하여 이 문장에 대해 상호작용을 시작하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '40px',\n          textAlign: 'center'\n        },\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this);\n  }\n  const modalContent = getModalContent();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('prev'),\n        disabled: currentFilterIndex === 0,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n        className: \"filter-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(FilterDropdownButton, {\n          $isOpen: showFilterDropdown,\n          onClick: toggleFilterDropdown,\n          children: [currentFilter, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterDropdownMenu, {\n          $isOpen: showFilterDropdown,\n          children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(FilterDropdownItem, {\n            $isSelected: option === currentFilter,\n            onClick: () => handleFilterChange(option),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n        onClick: () => handleNavigateFilter('next'),\n        disabled: currentFilterIndex === filterOptions.length - 1,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: filteredSentences.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"\\uC800\\uC7A5\\uB41C \\uBB38\\uC7A5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: \"\\uD6C8\\uC2B5 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uBB38\\uC7A5\\uC744 \\uC800\\uC7A5\\uACE0\\uC5D0 \\uC800\\uC7A5\\uD574\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SentenceGrid, {\n        children: filteredSentences.map(sentence => /*#__PURE__*/_jsxDEV(SentenceContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SentenceRow, {\n            $isPinned: pinnedSentences.has(sentence.id),\n            onClick: e => handleSentenceClick(e, sentence),\n            children: [/*#__PURE__*/_jsxDEV(SentenceContent, {\n              children: /*#__PURE__*/_jsxDEV(SentenceText, {\n                children: sentence.sentence\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PinIcon, {\n              $isPinned: pinnedSentences.has(sentence.id),\n              onClick: e => {\n                e.stopPropagation();\n                togglePin(sentence.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SentenceMetaExternal, {\n            children: [/*#__PURE__*/_jsxDEV(PersonaLabel, {\n              children: getPersonaName(sentence)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DateLabel, {\n              children: new Date(sentence.created_at).toLocaleDateString('ko-KR')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 17\n          }, this)]\n        }, sentence.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenuContainer, {\n      $x: contextMenu.x,\n      $y: contextMenu.y,\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('interact', contextMenu.sentence),\n        children: \"\\uC0C1\\uD638\\uC791\\uC6A9 \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: () => handleContextMenuAction('delete', contextMenu.sentence),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 9\n    }, this), confirmationModal && modalContent && /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClick: () => setConfirmationModal(null),\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: modalContent.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalMessage, {\n          children: modalContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"secondary\",\n            onClick: () => setConfirmationModal(null),\n            children: modalContent.cancelText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            $variant: \"primary\",\n            onClick: handleConfirmAction,\n            children: modalContent.confirmText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 708,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceVaultView, \"7++PPMn5XEkKpHc9rQEdEzuR/qQ=\");\n_c25 = SentenceVaultView;\nexport default SentenceVaultView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FilterDropdownButton\");\n$RefreshReg$(_c4, \"FilterDropdownMenu\");\n$RefreshReg$(_c5, \"FilterDropdownItem\");\n$RefreshReg$(_c6, \"FilterContainer\");\n$RefreshReg$(_c7, \"NavigationButton\");\n$RefreshReg$(_c8, \"ContentArea\");\n$RefreshReg$(_c9, \"SentenceGrid\");\n$RefreshReg$(_c0, \"SentenceContainer\");\n$RefreshReg$(_c1, \"SentenceRow\");\n$RefreshReg$(_c10, \"SentenceContent\");\n$RefreshReg$(_c11, \"SentenceText\");\n$RefreshReg$(_c12, \"SentenceMetaExternal\");\n$RefreshReg$(_c13, \"PersonaLabel\");\n$RefreshReg$(_c14, \"DateLabel\");\n$RefreshReg$(_c15, \"PinIcon\");\n$RefreshReg$(_c16, \"EmptyState\");\n$RefreshReg$(_c17, \"ContextMenuContainer\");\n$RefreshReg$(_c18, \"ContextMenuItem\");\n$RefreshReg$(_c19, \"ModalOverlay\");\n$RefreshReg$(_c20, \"ModalContent\");\n$RefreshReg$(_c21, \"ModalTitle\");\n$RefreshReg$(_c22, \"ModalMessage\");\n$RefreshReg$(_c23, \"ModalButtons\");\n$RefreshReg$(_c24, \"ModalButton\");\n$RefreshReg$(_c25, \"SentenceVaultView\");","map":{"version":3,"names":["React","useState","useEffect","styled","sentenceApi","chatApi","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","FilterDropdownButton","button","props","$isOpen","_c3","FilterDropdownMenu","_c4","FilterDropdownItem","$isSelected","_c5","FilterContainer","_c6","NavigationButton","_c7","ContentArea","_c8","SentenceGrid","_c9","SentenceContainer","_c0","SentenceRow","$isPinned","_c1","SentenceContent","_c10","SentenceText","_c11","SentenceMetaExternal","_c12","PersonaLabel","span","_c13","DateLabel","_c14","PinIcon","_c15","EmptyState","_c16","ContextMenuContainer","$y","$x","_c17","ContextMenuItem","_c18","ModalOverlay","_c19","ModalContent","_c20","ModalTitle","h3","_c21","ModalMessage","p","_c22","ModalButtons","_c23","ModalButton","$variant","_c24","SentenceVaultView","onNavigateToPersona","onNavigateToThread","onNavigateToPersonaWithSentence","_s","sentences","setSentences","filteredSentences","setFilteredSentences","personas","setPersonas","currentFilter","setCurrentFilter","loading","setLoading","pinnedSentences","setPinnedSentences","Set","contextMenu","setContextMenu","confirmationModal","setConfirmationModal","showFilterDropdown","setShowFilterDropdown","filterOptions","setFilterOptions","currentFilterIndex","setCurrentFilterIndex","loadData","applyFilter","handleClickOutside","console","log","document","addEventListener","removeEventListener","event","target","closest","sentenceData","getVaultSentences","personaResponse","getPersonas","data","personaNames","Object","values","map","name","error","filtered","filter","s","_s$source_message_id","tags","includes","source_message_id","personaId","keys","find","id","pinned","has","unpinned","sort","a","b","Date","created_at","getTime","handleFilterChange","indexOf","handleNavigateFilter","direction","newIndex","Math","max","min","length","handleSentenceClick","sentence","preventDefault","stopPropagation","substring","clientX","clientY","x","y","handleContextMenuAction","action","type","togglePin","handleConfirmAction","_sentence$source_mess","source_conversation_id","sessionStorage","setItem","_sentence$source_mess2","_sentence$source_mess3","_sentence$source_mess4","threadType","tag","alert","deleteVaultSentence","prev","sentenceId","newSet","delete","add","extractPersonaIdFromSentence","getPersonaName","_sentence$source_mess5","persona","getModalContent","personaName","title","message","confirmText","cancelText","toggleFilterDropdown","children","style","padding","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","modalContent","onClick","disabled","className","option","e","toLocaleDateString","_c25","$RefreshReg$"],"sources":["C:/Users/sungh/Desktop/chat_work/frontend/src/features/vault/components/SentenceVaultView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { sentenceApi, SentenceVaultItem } from '../../training/api/sentenceApi';\nimport { chatApi } from '../../shared/api/chatApi';\nimport { Persona } from '../../shared/types';\n\ninterface SentenceVaultViewProps {\n  onNavigateToPersona: (personaId: string, mode: 'sentence') => void;\n  onNavigateToThread: (threadId: string, threadType: string) => void;\n  onNavigateToPersonaWithSentence?: (personaId: string, mode: 'sentence', selectedSentence: string) => void;\n}\n\ninterface ContextMenu {\n  x: number;\n  y: number;\n  sentence: SentenceVaultItem;\n}\n\ninterface ConfirmationModalData {\n  type: 'interact' | 'delete';\n  sentence: SentenceVaultItem;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Header = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid #e9ecef;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterDropdownButton = styled.button<{ $isOpen: boolean }>`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 120px;\n  justify-content: space-between;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  .arrow {\n    font-size: 12px;\n    transition: transform 0.2s;\n    transform: ${props => props.$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n  }\n`;\n\nconst FilterDropdownMenu = styled.div<{ $isOpen: boolean }>`\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  max-height: 200px;\n  overflow-y: auto;\n  display: ${props => props.$isOpen ? 'block' : 'none'};\n  margin-top: 4px;\n  min-width: 150px;\n`;\n\nconst FilterDropdownItem = styled.div<{ $isSelected: boolean }>`\n  padding: 8px 16px;\n  cursor: pointer;\n  color: #333;\n  background: ${props => props.$isSelected ? '#e9ecef' : 'transparent'};\n  font-weight: ${props => props.$isSelected ? '500' : 'normal'};\n  \n  &:hover {\n    background: #e9ecef;\n  }\n  \n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n  \n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst NavigationButton = styled.button`\n  background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n`;\n\nconst SentenceGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst SentenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst SentenceRow = styled.div<{ $isPinned: boolean }>`\n  width: 100%;\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 1px solid #dee2e6;\n  border-radius: 16px;\n  padding: 16px 20px;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n    border-color: #adb5bd;\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n  }\n  \n  ${props => props.$isPinned && `\n    /* 고정된 경우에도 기본 회색 그라데이션 유지 */\n    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n    border-color: #dee2e6;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    \n    &:hover {\n      background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      border-color: #adb5bd;\n    }\n  `}\n`;\n\nconst SentenceContent = styled.div`\n  flex: 1;\n`;\n\nconst SentenceText = styled.div`\n  font-size: 15px;\n  line-height: 1.6;\n  color: #333;\n  word-break: break-word;\n  font-weight: 500;\n`;\n\nconst SentenceMetaExternal = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 12px;\n  color: #6c757d;\n  gap: 8px;\n`;\n\nconst PersonaLabel = styled.span`\n  background: #e9ecef;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  color: #495057;\n`;\n\nconst DateLabel = styled.span`\n  font-style: italic;\n  opacity: 0.8;\n`;\n\nconst PinIcon = styled.div<{ $isPinned: boolean }>`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.$isPinned ? '#333' : 'transparent'};\n  cursor: pointer;\n  z-index: 2;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: #333;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  \n  ${SentenceRow}:hover & {\n    color: ${props => props.$isPinned ? '#333' : '#666'};\n  }\n  \n  &::before {\n    content: \"📌\";\n    filter: grayscale(100%);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n  }\n  \n  .title {\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n  \n  .description {\n    font-size: 14px;\n  }\n`;\n\nconst ContextMenuContainer = styled.div<{ $x: number; $y: number }>`\n  position: fixed;\n  top: ${props => props.$y}px;\n  left: ${props => props.$x}px;\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  overflow: hidden;\n`;\n\nconst ContextMenuItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #333;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:not(:last-child) {\n    border-bottom: 1px solid #f1f3f4;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst ModalMessage = styled.p`\n  margin: 0 0 24px 0;\n  font-size: 14px;\n  color: #666;\n  line-height: 1.5;\n`;\n\nconst ModalButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n`;\n\nconst ModalButton = styled.button<{ $variant: 'primary' | 'secondary' }>`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: 1px solid;\n  \n  ${props => props.$variant === 'primary' ? `\n    background: #007bff;\n    color: white;\n    border-color: #007bff;\n    \n    &:hover {\n      background: #0056b3;\n      border-color: #0056b3;\n    }\n  ` : `\n    background: white;\n    color: #6c757d;\n    border-color: #dee2e6;\n    \n    &:hover {\n      background: #f8f9fa;\n    }\n  `}\n`;\n\nconst SentenceVaultView: React.FC<SentenceVaultViewProps> = ({\n  onNavigateToPersona,\n  onNavigateToThread,\n  onNavigateToPersonaWithSentence\n}) => {\n  const [sentences, setSentences] = useState<SentenceVaultItem[]>([]);\n  const [filteredSentences, setFilteredSentences] = useState<SentenceVaultItem[]>([]);\n  const [personas, setPersonas] = useState<Record<string, Persona>>({});\n  const [currentFilter, setCurrentFilter] = useState<string>('전체');\n  const [loading, setLoading] = useState(true);\n  const [pinnedSentences, setPinnedSentences] = useState<Set<string>>(new Set());\n  const [contextMenu, setContextMenu] = useState<ContextMenu | null>(null);\n  const [confirmationModal, setConfirmationModal] = useState<ConfirmationModalData | null>(null);\n  const [showFilterDropdown, setShowFilterDropdown] = useState(false);\n\n  // 필터 옵션들\n  const [filterOptions, setFilterOptions] = useState<string[]>(['전체', '언어화', '편지']);\n  const [currentFilterIndex, setCurrentFilterIndex] = useState(0);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    applyFilter();\n  }, [sentences, currentFilter, pinnedSentences]);\n\n  // 컨텍스트 메뉴 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = () => {\n      console.log('외부 클릭 감지, 컨텍스트 메뉴 닫기');\n      setContextMenu(null);\n    };\n\n    if (contextMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.filter-dropdown')) {\n        setShowFilterDropdown(false);\n      }\n    };\n\n    if (showFilterDropdown) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showFilterDropdown]);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // 저장고 문장들 로드\n      const sentenceData = await sentenceApi.getVaultSentences();\n      console.log('저장고 데이터:', sentenceData);\n      setSentences(sentenceData);\n\n      // 페르소나 데이터 로드\n      const personaResponse = await chatApi.getPersonas();\n      if (personaResponse.data) {\n        setPersonas(personaResponse.data);\n        \n        // 필터 옵션에 페르소나들 추가\n        const personaNames = Object.values(personaResponse.data).map(p => p.name);\n        setFilterOptions(['전체', '언어화', '편지', ...personaNames]);\n      }\n    } catch (error) {\n      console.error('데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilter = () => {\n    let filtered = [...sentences];\n\n    if (currentFilter !== '전체') {\n      if (currentFilter === '언어화') {\n        filtered = filtered.filter(s => \n          s.tags.includes('verbalization') || \n          s.tags.includes('언어화') ||\n          s.source_message_id?.includes('verbalization')\n        );\n      } else if (currentFilter === '편지') {\n        filtered = filtered.filter(s => s.tags.includes('letter'));\n      } else {\n        // 페르소나 이름으로 필터링\n        const personaId = Object.keys(personas).find(id => personas[id].name === currentFilter);\n        if (personaId) {\n          filtered = filtered.filter(s => s.tags.includes(personaId) || s.source_message_id.includes(personaId));\n        }\n      }\n    }\n\n    // 고정된 문장들을 맨 위로\n    const pinned = filtered.filter(s => pinnedSentences.has(s.id));\n    const unpinned = filtered.filter(s => !pinnedSentences.has(s.id));\n    \n    // 날짜순 정렬 (최신순)\n    pinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n    unpinned.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n    setFilteredSentences([...pinned, ...unpinned]);\n  };\n\n  const handleFilterChange = (filter: string) => {\n    setCurrentFilter(filter);\n    setCurrentFilterIndex(filterOptions.indexOf(filter));\n    setShowFilterDropdown(false);\n  };\n\n  const handleNavigateFilter = (direction: 'prev' | 'next') => {\n    const newIndex = direction === 'prev' \n      ? Math.max(0, currentFilterIndex - 1)\n      : Math.min(filterOptions.length - 1, currentFilterIndex + 1);\n    \n    setCurrentFilterIndex(newIndex);\n    setCurrentFilter(filterOptions[newIndex]);\n  };\n\n  const handleSentenceClick = (event: React.MouseEvent, sentence: SentenceVaultItem) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    console.log('문장 클릭됨:', sentence.sentence.substring(0, 50));\n    console.log('클릭 위치:', event.clientX, event.clientY);\n    \n    setContextMenu({\n      x: event.clientX,\n      y: event.clientY,\n      sentence\n    });\n    \n    console.log('컨텍스트 메뉴 설정됨');\n  };\n\n  const handleContextMenuAction = (action: string, sentence: SentenceVaultItem) => {\n    console.log('컨텍스트 메뉴 액션:', action);\n    setContextMenu(null);\n    \n    switch (action) {\n      case 'interact':\n      case 'delete':\n        setConfirmationModal({ type: action as any, sentence });\n        break;\n      case 'pin':\n        togglePin(sentence.id);\n        break;\n    }\n  };\n\n  const handleConfirmAction = async () => {\n    if (!confirmationModal) return;\n    \n    const { type, sentence } = confirmationModal;\n    \n    try {\n      switch (type) {\n        case 'interact':\n          console.log('=== 상호작용 하기 시작 ===');\n          console.log('문장 데이터:', sentence);\n          console.log('tags:', sentence.tags);\n          console.log('source_message_id:', sentence.source_message_id);\n          console.log('source_conversation_id:', sentence.source_conversation_id);\n          \n          // 해당 문장의 출처 스레드로 이동하면서 입력창에 \\\"문장에 대해\\\" 형태로 설정\n          if (sentence.tags.includes('verbalization') || sentence.tags.includes('언어화') || sentence.source_message_id?.includes('verbalization')) {\n            console.log('언어화 문장으로 인식됨');\n            // 언어화에서 온 문장인 경우 - 언어화 스레드로 이동\n            if (sentence.source_conversation_id && sentence.source_conversation_id !== 'verbalization_chat') {\n              console.log('언어화 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n              if (onNavigateToThread) {\n                onNavigateToThread(sentence.source_conversation_id, 'verbalization');\n              }\n            } else {\n              console.log('언어화 스레드 ID가 없어서 언어화 모드로만 전환');\n              // source_conversation_id가 없으면 언어화 모드로만 전환\n              sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n              if (onNavigateToPersona) {\n                // 임시로 언어화 페르소나 ID 사용\n                onNavigateToPersona('verbalization', 'sentence');\n              }\n            }\n          } else {\n            console.log('훈습 문장으로 인식됨');\n            // 훈습에서 온 문장인 경우 - source_message_id에서 스레드 타입 식별\n            let threadType = 'interpretation'; // 기본값\n            \n            if (sentence.source_message_id?.includes('sentence_') || sentence.tags.includes('sentence')) {\n              threadType = 'sentence';\n            } else if (sentence.source_message_id?.includes('proceed_') || sentence.tags.includes('proceed')) {\n              threadType = 'proceed';\n            } else if (sentence.source_message_id?.includes('interpretation_') || sentence.tags.includes('interpretation')) {\n              threadType = 'interpretation';\n            }\n            \n            console.log('식별된 스레드 타입:', threadType);\n            \n            if (sentence.source_conversation_id) {\n              console.log('훈습 스레드 ID가 있음:', sentence.source_conversation_id);\n              sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n              if (onNavigateToThread) {\n                onNavigateToThread(sentence.source_conversation_id, threadType);\n              }\n            } else {\n              console.log('훈습 스레드 ID가 없음');\n              // source_conversation_id가 없으면 페르소나 정보라도 추출해서 해당 페르소나로 이동\n              const personaId = sentence.tags.find(tag => tag !== threadType && tag !== 'sentence' && tag !== 'proceed' && tag !== 'interpretation');\n              \n              if (personaId && personas && personas[personaId]) {\n                console.log('페르소나 ID 찾음:', personaId);\n                sessionStorage.setItem('selectedSentenceForInput', `\\\"${sentence.sentence}\\\"에 대해 `);\n                if (onNavigateToPersona) {\n                  onNavigateToPersona(personaId, 'sentence');\n                }\n              } else {\n                console.log('페르소나 정보도 찾을 수 없음');\n                alert('해당 문장의 출처 정보를 찾을 수 없습니다.');\n              }\n            }\n          }\n          \n          break;\n        case 'delete':\n          // 문장 삭제\n          await sentenceApi.deleteVaultSentence(sentence.id);\n          setSentences(prev => prev.filter(s => s.id !== sentence.id));\n          break;\n      }\n    } catch (error) {\n      console.error('액션 실행 실패:', error);\n      alert('작업 실행 중 오류가 발생했습니다: ' + error);\n    }\n    \n    setConfirmationModal(null);\n  };\n\n  const togglePin = (sentenceId: string) => {\n    setPinnedSentences(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sentenceId)) {\n        newSet.delete(sentenceId);\n      } else {\n        newSet.add(sentenceId);\n      }\n      return newSet;\n    });\n  };\n\n  const extractPersonaIdFromSentence = (sentence: SentenceVaultItem): string | null => {\n    console.log('라벨 추출 중:', sentence);\n    console.log('tags:', sentence.tags);\n    console.log('source_message_id:', sentence.source_message_id);\n    console.log('사용 가능한 페르소나들:', Object.keys(personas));\n    \n    // tags에서 페르소나 ID 찾기\n    for (const tag of sentence.tags) {\n      if (personas[tag]) {\n        console.log('태그에서 페르소나 발견:', tag, personas[tag].name);\n        return tag;\n      }\n    }\n    return null;\n  };\n\n  const getPersonaName = (sentence: SentenceVaultItem): string => {\n    // 언어화 태그 체크\n    if (sentence.tags.includes('언어화') || \n        sentence.tags.includes('verbalization') ||\n        sentence.source_message_id?.includes('verbalization')) {\n      return '언어화';\n    }\n    \n    // 편지 태그 체크\n    if (sentence.tags.includes('letter')) {\n      return '편지';\n    }\n    \n    // 페르소나 이름 찾기\n    for (const tag of sentence.tags) {\n      const persona = personas[tag];\n      if (persona) {\n        return persona.name;\n      }\n    }\n    \n    return '시스템';\n  };\n\n  const getModalContent = () => {\n    if (!confirmationModal) return null;\n    \n    const { type, sentence } = confirmationModal;\n    const personaName = getPersonaName(sentence);\n    \n    switch (type) {\n      case 'interact':\n        return {\n          title: '상호작용 하기',\n          message: `해당 문장이 온 스레드로 이동하여 이 문장에 대해 상호작용을 시작하시겠습니까?`,\n          confirmText: '상호작용',\n          cancelText: '취소'\n        };\n      case 'delete':\n        return {\n          title: '문장 삭제',\n          message: '이 문장을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',\n          confirmText: '삭제',\n          cancelText: '취소'\n        };\n      default:\n        return null;\n    }\n  };\n\n  const toggleFilterDropdown = () => {\n    setShowFilterDropdown(!showFilterDropdown);\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: '40px', textAlign: 'center' }}>\n          로딩 중...\n        </div>\n      </Container>\n    );\n  }\n\n  const modalContent = getModalContent();\n\n  return (\n    <Container>\n      <Header>\n        <NavigationButton\n          onClick={() => handleNavigateFilter('prev')}\n          disabled={currentFilterIndex === 0}\n        >\n          ‹\n        </NavigationButton>\n        \n        <FilterContainer className=\"filter-dropdown\">\n          <FilterDropdownButton\n            $isOpen={showFilterDropdown}\n            onClick={toggleFilterDropdown}\n          >\n            {currentFilter}\n            <span className=\"arrow\">▼</span>\n          </FilterDropdownButton>\n          <FilterDropdownMenu $isOpen={showFilterDropdown}>\n            {filterOptions.map(option => (\n              <FilterDropdownItem\n                key={option}\n                $isSelected={option === currentFilter}\n                onClick={() => handleFilterChange(option)}\n              >\n                {option}\n              </FilterDropdownItem>\n            ))}\n          </FilterDropdownMenu>\n        </FilterContainer>\n        \n        <NavigationButton\n          onClick={() => handleNavigateFilter('next')}\n          disabled={currentFilterIndex === filterOptions.length - 1}\n        >\n          ›\n        </NavigationButton>\n      </Header>\n\n      <ContentArea>\n        {filteredSentences.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">📝</div>\n            <div className=\"title\">저장된 문장이 없습니다</div>\n            <div className=\"description\">\n              훈습 페이지에서 문장을 저장고에 저장해보세요\n            </div>\n          </EmptyState>\n        ) : (\n          <SentenceGrid>\n            {filteredSentences.map(sentence => (\n              <SentenceContainer key={sentence.id}>\n                <SentenceRow\n                  $isPinned={pinnedSentences.has(sentence.id)}\n                  onClick={(e) => handleSentenceClick(e, sentence)}\n                >\n                  <SentenceContent>\n                    <SentenceText>{sentence.sentence}</SentenceText>\n                  </SentenceContent>\n                  <PinIcon\n                    $isPinned={pinnedSentences.has(sentence.id)}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      togglePin(sentence.id);\n                    }}\n                  />\n                </SentenceRow>\n                <SentenceMetaExternal>\n                  <PersonaLabel>{getPersonaName(sentence)}</PersonaLabel>\n                  <DateLabel>{new Date(sentence.created_at).toLocaleDateString('ko-KR')}</DateLabel>\n                </SentenceMetaExternal>\n              </SentenceContainer>\n            ))}\n          </SentenceGrid>\n        )}\n      </ContentArea>\n\n      {/* 컨텍스트 메뉴 */}\n      {contextMenu && (\n        <ContextMenuContainer $x={contextMenu.x} $y={contextMenu.y}>\n          <ContextMenuItem onClick={() => handleContextMenuAction('interact', contextMenu.sentence)}>\n            상호작용 하기\n          </ContextMenuItem>\n          <ContextMenuItem onClick={() => handleContextMenuAction('delete', contextMenu.sentence)}>\n            삭제\n          </ContextMenuItem>\n        </ContextMenuContainer>\n      )}\n\n      {/* 확인 모달 */}\n      {confirmationModal && modalContent && (\n        <ModalOverlay onClick={() => setConfirmationModal(null)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalTitle>{modalContent.title}</ModalTitle>\n            <ModalMessage>{modalContent.message}</ModalMessage>\n            <ModalButtons>\n              <ModalButton \n                $variant=\"secondary\" \n                onClick={() => setConfirmationModal(null)}\n              >\n                {modalContent.cancelText}\n              </ModalButton>\n              <ModalButton \n                $variant=\"primary\" \n                onClick={handleConfirmAction}\n              >\n                {modalContent.confirmText}\n              </ModalButton>\n            </ModalButtons>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n    </Container>\n  );\n};\n\nexport default SentenceVaultView; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAA2B,gCAAgC;AAC/E,SAASC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoBnD,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAMf,MAAMG,MAAM,GAAGR,MAAM,CAACM,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,MAAM;AAUZ,MAAME,oBAAoB,GAAGV,MAAM,CAACW,MAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBC,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,gBAAgB,GAAG,cAAc;AAC3E;AACA,CAAC;AAACC,GAAA,GAvBIJ,oBAAoB;AAyB1B,MAAMK,kBAAkB,GAAGf,MAAM,CAACM,GAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaM,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,OAAO,GAAG,MAAM;AACtD;AACA;AACA,CAAC;AAACG,GAAA,GAfID,kBAAkB;AAiBxB,MAAME,kBAAkB,GAAGjB,MAAM,CAACM,GAA6B;AAC/D;AACA;AACA;AACA,gBAAgBM,KAAK,IAAIA,KAAK,CAACM,WAAW,GAAG,SAAS,GAAG,aAAa;AACtE,iBAAiBN,KAAK,IAAIA,KAAK,CAACM,WAAW,GAAG,KAAK,GAAG,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAlBIF,kBAAkB;AAoBxB,MAAMG,eAAe,GAAGpB,MAAM,CAACM,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACe,GAAA,GALID,eAAe;AAOrB,MAAME,gBAAgB,GAAGtB,MAAM,CAACW,MAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GArBID,gBAAgB;AAuBtB,MAAME,WAAW,GAAGxB,MAAM,CAACM,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAG1B,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAJID,YAAY;AAMlB,MAAME,iBAAiB,GAAG5B,MAAM,CAACM,GAAG;AACpC;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GAJID,iBAAiB;AAMvB,MAAME,WAAW,GAAG9B,MAAM,CAACM,GAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,KAAK,IAAIA,KAAK,CAACmB,SAAS,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AAACC,GAAA,GAhCIF,WAAW;AAkCjB,MAAMG,eAAe,GAAGjC,MAAM,CAACM,GAAG;AAClC;AACA,CAAC;AAAC4B,IAAA,GAFID,eAAe;AAIrB,MAAME,YAAY,GAAGnC,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,IAAA,GANID,YAAY;AAQlB,MAAME,oBAAoB,GAAGrC,MAAM,CAACM,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GAPID,oBAAoB;AAS1B,MAAME,YAAY,GAAGvC,MAAM,CAACwC,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GANIF,YAAY;AAQlB,MAAMG,SAAS,GAAG1C,MAAM,CAACwC,IAAI;AAC7B;AACA;AACA,CAAC;AAACG,IAAA,GAHID,SAAS;AAKf,MAAME,OAAO,GAAG5C,MAAM,CAACM,GAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWM,KAAK,IAAIA,KAAK,CAACmB,SAAS,GAAG,MAAM,GAAG,aAAa;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,WAAW;AACf,aAAalB,KAAK,IAAIA,KAAK,CAACmB,SAAS,GAAG,MAAM,GAAG,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACc,IAAA,GA7BID,OAAO;AA+Bb,MAAME,UAAU,GAAG9C,MAAM,CAACM,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,IAAA,GAnBID,UAAU;AAqBhB,MAAME,oBAAoB,GAAGhD,MAAM,CAACM,GAA+B;AACnE;AACA,SAASM,KAAK,IAAIA,KAAK,CAACqC,EAAE;AAC1B,UAAUrC,KAAK,IAAIA,KAAK,CAACsC,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIH,oBAAoB;AAa1B,MAAMI,eAAe,GAAGpD,MAAM,CAACM,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+C,IAAA,GAbID,eAAe;AAerB,MAAME,YAAY,GAAGtD,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiD,IAAA,GAXID,YAAY;AAalB,MAAME,YAAY,GAAGxD,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmD,IAAA,GAPID,YAAY;AASlB,MAAME,UAAU,GAAG1D,MAAM,CAAC2D,EAAE;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,UAAU;AAOhB,MAAMG,YAAY,GAAG7D,MAAM,CAAC8D,CAAC;AAC7B;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}